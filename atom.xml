<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>辛猿毅码的个人博客</title>
  
  <subtitle>Talk is cheap.Show me the code.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.hardape.top/"/>
  <updated>2020-05-22T13:41:56.439Z</updated>
  <id>https://www.hardape.top/</id>
  
  <author>
    <name>辛猿毅码</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>21-JS的高级进阶-ES6</title>
    <link href="https://www.hardape.top/article/16ed1219.html"/>
    <id>https://www.hardape.top/article/16ed1219.html</id>
    <published>2020-05-08T00:04:56.000Z</published>
    <updated>2020-05-22T13:41:56.439Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>  <em>『 注 : 本笔记摘自视频 <a href="https://www.bilibili.com/video/BV1Kt411w7MP" target="_blank" rel="noopener">javaScript进阶面向对象ES6</a>，如有侵权,请联系删除。』</em></p></blockquote><a id="more"></a><h2 id="ES6简介"><a href="#ES6简介" class="headerlink" title="ES6简介"></a>ES6简介</h2><h3 id="什么是ES6"><a href="#什么是ES6" class="headerlink" title="什么是ES6"></a>什么是ES6</h3><ul><li>ES的全称是ECMScript，它是由ECMA国际标准化组织制定的<strong>一项脚本语言的标准化规范</strong></li><li>ECMAScript6（简称ES6）是于2015年6月正式发布的JavaScript语言的标准，正式名为ECMAScript 2015（ES2015）。它的目标是使得JavaScript语言可以用来编写复杂的大型应用程序，成为企业级开发语言</li></ul><table><thead><tr><th>年份</th><th>版本</th></tr></thead><tbody><tr><td>2015年6月</td><td>ES2015</td></tr><tr><td>2016年6月</td><td>ES2016</td></tr><tr><td>2017年6月</td><td>ES2017</td></tr><tr><td>2018年6月</td><td>ES2018</td></tr><tr><td>…</td><td>…</td></tr></tbody></table><p><strong>注意</strong>：接下来学习的ES6泛指ES2015及之后的新增特性，虽然之后的版本应当称为ES7、ES8等。</p><h3 id="为什么使用ES6"><a href="#为什么使用ES6" class="headerlink" title="为什么使用ES6"></a>为什么使用ES6</h3><p>每一次标准的诞生都意味着语言的完善，功能的加强。JavaScript语言本身也有一些令人不满意的地方。</p><ul><li>变量提升特性增加了程序运行时的不可预测性</li><li>语法过于松散，实现相同的功能，不同的人可能会写出不同的代码</li></ul><h2 id="ES6的新增语法"><a href="#ES6的新增语法" class="headerlink" title="ES6的新增语法"></a>ES6的新增语法</h2><h3 id="let"><a href="#let" class="headerlink" title="let"></a>let</h3><p>let是ES6中新增的用于声明变量的关键字。</p><h4 id="let声明的变量只在所处的块级有效"><a href="#let声明的变量只在所处的块级有效" class="headerlink" title="let声明的变量只在所处的块级有效"></a>let声明的变量只在所处的块级有效</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. let声明的变量具有块级作用域</span></span><br><span class="line"><span class="keyword">if</span>(<span class="literal">true</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">let</span> b = <span class="number">20</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(a); <span class="comment">// 10</span></span><br><span class="line"><span class="built_in">console</span>.log(b); <span class="comment">// b is not defined</span></span><br></pre></td></tr></table></figure><h4 id="let不存在变量提升"><a href="#let不存在变量提升" class="headerlink" title="let不存在变量提升"></a>let不存在变量提升</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 2. let不存在变量提升</span></span><br><span class="line"><span class="built_in">console</span>.log(c); <span class="comment">// undefined</span></span><br><span class="line"><span class="built_in">console</span>.log(d); <span class="comment">// Cannot access 'd' before initialization</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> c = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">let</span> d = <span class="number">20</span>;</span><br></pre></td></tr></table></figure><h4 id="let声明的变量有暂时性死区特性"><a href="#let声明的变量有暂时性死区特性" class="headerlink" title="let声明的变量有暂时性死区特性"></a>let声明的变量有暂时性死区特性</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 3. let声明的变量有暂时性死区的特性</span></span><br><span class="line"><span class="keyword">var</span> num1 = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">var</span> num2 = <span class="number">20</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="literal">true</span>) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(num1); <span class="comment">//10</span></span><br><span class="line">    <span class="built_in">console</span>.log(num2); <span class="comment">//Cannot access 'num2' before initialization</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> num1 = <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">let</span> num2 = <span class="number">200</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="经典面试题"><a href="#经典面试题" class="headerlink" title="经典面试题"></a>经典面试题</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++) &#123;</span><br><span class="line">    arr[i] = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">arr[<span class="number">0</span>](); <span class="comment">// 2</span></span><br><span class="line">arr[<span class="number">1</span>](); <span class="comment">// 2</span></span><br></pre></td></tr></table></figure><p>以上代码关键点在于变量i是全局的，函数执行时输出的都是全局作用域下的i值</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++) &#123;</span><br><span class="line">    arr[i] = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">arr[<span class="number">0</span>](); <span class="comment">// 0</span></span><br><span class="line">arr[<span class="number">1</span>](); <span class="comment">// 1</span></span><br></pre></td></tr></table></figure><p>以上代码的关键点在于每次循环都会产生一个块级作用域，每个块级作用域中的变量都是不同的，函数执行时输出的自己上一级作用域(循环产生的块级作用域)下的i值</p><h3 id="const"><a href="#const" class="headerlink" title="const"></a>const</h3><p>const是ES6新增的用于声明常量的关键字，常量就是值(内存地址)不能变化的量</p><h4 id="const声明的常量具有块级作用域"><a href="#const声明的常量具有块级作用域" class="headerlink" title="const声明的常量具有块级作用域"></a>const声明的常量具有块级作用域</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. const声明的变量具有块级作用域</span></span><br><span class="line"><span class="keyword">if</span>(<span class="literal">true</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="literal">true</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> a = <span class="number">20</span>;</span><br><span class="line">        <span class="built_in">console</span>.log(a); <span class="comment">// 20</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(a); <span class="comment">// 10</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(a); <span class="comment">// a is not defined</span></span><br></pre></td></tr></table></figure><h4 id="const声明常量是必须赋值"><a href="#const声明常量是必须赋值" class="headerlink" title="const声明常量是必须赋值"></a>const声明常量是必须赋值</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> PI; <span class="comment">// Missing initializer in const declaration</span></span><br></pre></td></tr></table></figure><h4 id="const声明的常量赋值后，值-内存地址-不能修改"><a href="#const声明的常量赋值后，值-内存地址-不能修改" class="headerlink" title="const声明的常量赋值后，值(内存地址)不能修改"></a>const声明的常量赋值后，值(内存地址)不能修改</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 3. const声明的常量赋值后，内存地址不能修改</span></span><br><span class="line"><span class="keyword">const</span> PI = <span class="number">3.14</span>;</span><br><span class="line">PI = <span class="number">100</span>; <span class="comment">//Assignment to constant variable.</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> color = [<span class="string">'blue'</span>, <span class="string">'red'</span>];</span><br><span class="line">color[<span class="number">0</span>] = <span class="string">'green'</span>;</span><br><span class="line"><span class="built_in">console</span>.log(color);  <span class="comment">// ["green", "red"]</span></span><br><span class="line">color = [<span class="string">'yellow'</span>,<span class="string">'black'</span>];  <span class="comment">//Assignment to constant variable.</span></span><br></pre></td></tr></table></figure><h3 id="var、let、const的区别"><a href="#var、let、const的区别" class="headerlink" title="var、let、const的区别"></a>var、let、const的区别</h3><ul><li>使用<strong>var</strong>声明的变量，其作用域为<strong>该语句所在的函数内，且存在变量提升现象</strong>。</li><li>使用<strong>let</strong>声明的变量，其作用域为<strong>该语句所在的代码块内，不存在变量提升</strong>。</li><li>使用<strong>const</strong>声明的是常量，在后面出现的代码中<strong>不能再修改该常量的值</strong>。</li><li>由于const声明的常量JS解析引擎不需要实时监控其变化，效率比var和let高，故如果存储的数据不需要变量，尽量使用<strong>const</strong>关键字，比如<strong>函数的定义</strong>，<strong>数学公式中恒定不变的值</strong>。</li></ul><table><thead><tr><th>var</th><th>let</th><th>const</th></tr></thead><tbody><tr><td>函数级作用域</td><td>块级作用域</td><td>块级作用域</td></tr><tr><td>变量提升</td><td>不存在变量提升</td><td>不存在变量提升</td></tr><tr><td>值可更改</td><td>值可更改</td><td>值不可更改</td></tr></tbody></table><h3 id="解构赋值"><a href="#解构赋值" class="headerlink" title="解构赋值"></a>解构赋值</h3><p>ES6中允许从数组或者对象中提取值，按照对应位置，对变量赋值。</p><h4 id="数组解构"><a href="#数组解构" class="headerlink" title="数组解构"></a>数组解构</h4><ul><li>数组结构允许我们按照一一对应的关系从数组中提取值然后将值赋值给变量</li><li>如果解构不成功，变量的值为<code>undefined</code></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 数组解构</span></span><br><span class="line"><span class="keyword">let</span> [a, b, c, d, e] = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"><span class="built_in">console</span>.log(a); <span class="comment">// 1</span></span><br><span class="line"><span class="built_in">console</span>.log(b); <span class="comment">// 2</span></span><br><span class="line"><span class="built_in">console</span>.log(c); <span class="comment">// 3</span></span><br><span class="line"><span class="built_in">console</span>.log(d); <span class="comment">// undefined</span></span><br><span class="line"><span class="built_in">console</span>.log(e); <span class="comment">// undefined</span></span><br></pre></td></tr></table></figure><h4 id="对象解构"><a href="#对象解构" class="headerlink" title="对象解构"></a>对象解构</h4><p>对象解构允许我们使用变量的名字匹配对象的属性，匹配成功将对象属性的值赋值给变量。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 2. 对象解构</span></span><br><span class="line"><span class="keyword">let</span> stu = &#123; <span class="attr">sname</span>: <span class="string">'辛猿毅码'</span>, <span class="attr">sage</span>: <span class="number">18</span> &#125;;</span><br><span class="line"><span class="comment">// 解构的变量名和对象属性名一致</span></span><br><span class="line"><span class="keyword">var</span> &#123; sname, sage &#125; = stu;</span><br><span class="line"><span class="built_in">console</span>.log(sname); <span class="comment">// 辛猿毅码</span></span><br><span class="line"><span class="built_in">console</span>.log(sage);  <span class="comment">// 18</span></span><br><span class="line"><span class="comment">// 解构的变量名和对象属性名不一致</span></span><br><span class="line"><span class="keyword">var</span> &#123; <span class="attr">sname</span>: myName, <span class="attr">sage</span>: myAge &#125; = stu;</span><br><span class="line"><span class="built_in">console</span>.log(myName); <span class="comment">// 辛猿毅码</span></span><br><span class="line"><span class="built_in">console</span>.log(myAge); <span class="comment">// 18</span></span><br></pre></td></tr></table></figure><h3 id="箭头函数"><a href="#箭头函数" class="headerlink" title="箭头函数"></a>箭头函数</h3><p>箭头函数是ES6中新增的定义函数的方式，是用来用来简化定义函数语法的。</p><h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> 函数名 = <span class="function">(<span class="params">[形参<span class="number">1</span>, 形参<span class="number">2</span>, ...]</span>) =&gt;</span> &#123; 函数体 &#125;</span><br></pre></td></tr></table></figure><h4 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义箭头函数</span></span><br><span class="line"><span class="keyword">const</span> fn = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"我是箭头函数"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 调用箭头函数</span></span><br><span class="line">fn();</span><br></pre></td></tr></table></figure><h4 id="省略大括号"><a href="#省略大括号" class="headerlink" title="省略大括号"></a>省略大括号</h4><p>如果箭头函数的函数体中只有一句代码，且代码的执行结构就是返回值，可以省略大括号和return</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 如果函数体只有一句返回值代码，可省略大括号和return</span></span><br><span class="line"><span class="keyword">const</span> sum = <span class="function">(<span class="params">num1, num2</span>) =&gt;</span> num1 + num2;</span><br><span class="line"><span class="built_in">console</span>.log(sum(<span class="number">3</span>, <span class="number">5</span>)); <span class="comment">// 8</span></span><br></pre></td></tr></table></figure><h4 id="省略小括号"><a href="#省略小括号" class="headerlink" title="省略小括号"></a>省略小括号</h4><p>如果箭头函数的形参只有一个，可以省略小括号</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 如果形参只有一个，可省略小括号</span></span><br><span class="line"><span class="keyword">const</span> square = <span class="function"><span class="params">num</span> =&gt;</span> num * num;</span><br><span class="line"><span class="built_in">console</span>.log(square(<span class="number">9</span>)); <span class="comment">// 81</span></span><br></pre></td></tr></table></figure><h4 id="箭头函数中的this"><a href="#箭头函数中的this" class="headerlink" title="箭头函数中的this"></a>箭头函数中的this</h4><p>箭头函数不绑定this关键字，箭头函数中的this，指向的是<strong>函数定义位置的上下文this</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 箭头函数中的this</span></span><br><span class="line"><span class="comment">// 1. 解析:fun返回值的箭头函数中的this指向fun函数作用域中的this，即obj</span></span><br><span class="line"><span class="keyword">const</span> obj = &#123; <span class="attr">name</span>: <span class="string">'辛猿毅码'</span> &#125;;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> resFun = fun.call(obj); <span class="comment">//&#123;name: "辛猿毅码"&#125;</span></span><br><span class="line">resFun(); <span class="comment">//&#123;name: "辛猿毅码"&#125;</span></span><br><span class="line"><span class="comment">// 2. 解析: 由于对象是不能产生作用域的，故user对象中的say箭头函数中的this的上下文是全局作用域，故其指向window</span></span><br><span class="line"><span class="keyword">var</span> age = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">var</span> user = &#123;</span><br><span class="line">    age: <span class="number">20</span>,</span><br><span class="line">    say: <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>, <span class="keyword">this</span>.age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">user.say();  <span class="comment">//window 100</span></span><br></pre></td></tr></table></figure><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><ul><li>在箭头函数中无法使用<strong>arguments</strong></li><li>箭头函数是不能提升的，所以需要在使用之前定义。</li></ul><h3 id="剩余参数"><a href="#剩余参数" class="headerlink" title="剩余参数"></a>剩余参数</h3><p>ES6新增的剩余参数语法允许我们将一个不定数量的参数表示为为一个数组</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params">first, ...args</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(first, args); </span><br><span class="line">&#125;</span><br><span class="line">fn(<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>) <span class="comment">// 10 [20,30]</span></span><br></pre></td></tr></table></figure><h4 id="利用剩余参数求任意个数的和"><a href="#利用剩余参数求任意个数的和" class="headerlink" title="利用剩余参数求任意个数的和"></a>利用剩余参数求任意个数的和</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 利用剩余参数求任意个数的和</span></span><br><span class="line"><span class="keyword">const</span> sum = <span class="function">(<span class="params">...nums</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> res = <span class="number">0</span>;</span><br><span class="line">    nums.forEach(<span class="function"><span class="params">num</span> =&gt;</span> res += num);</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(sum(<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>)); <span class="comment">// 100</span></span><br></pre></td></tr></table></figure><h4 id="剩余参数和结构配合使用"><a href="#剩余参数和结构配合使用" class="headerlink" title="剩余参数和结构配合使用"></a>剩余参数和结构配合使用</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 剩余参数和结构配合使用</span></span><br><span class="line"><span class="keyword">let</span> students = [<span class="string">'张三'</span>, <span class="string">'李四'</span>, <span class="string">'王五'</span>, <span class="string">'赵六'</span>];</span><br><span class="line"><span class="keyword">let</span> [first, ...others] = students;</span><br><span class="line"><span class="built_in">console</span>.log(first);     <span class="comment">// 张三</span></span><br><span class="line"><span class="built_in">console</span>.log(others);    <span class="comment">// ['李四', '王五', '赵六']</span></span><br></pre></td></tr></table></figure><h2 id="ES6的内置对象扩展"><a href="#ES6的内置对象扩展" class="headerlink" title="ES6的内置对象扩展"></a>ES6的内置对象扩展</h2><h3 id="Array的扩展方法"><a href="#Array的扩展方法" class="headerlink" title="Array的扩展方法"></a>Array的扩展方法</h3><h4 id="扩展运算符"><a href="#扩展运算符" class="headerlink" title="扩展运算符"></a>扩展运算符</h4><p><strong>扩展运算符(<code>...</code>)</strong>也称为<strong>展开语法(Spread syntax)</strong>，可以将数组或者对象转为用逗号分隔的参数序列</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 扩展运算符</span></span><br><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"><span class="built_in">console</span>.log(...arr);   <span class="comment">// ...arr为1,2,3,相当于console.log(1,2,3)，故结果为1 2 3</span></span><br></pre></td></tr></table></figure><p>扩展运算符可以应用于<strong>合并数组</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 扩展运算符用于合并数组</span></span><br><span class="line"><span class="keyword">let</span> arr1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"><span class="keyword">let</span> arr2 = [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>];</span><br><span class="line"><span class="comment">// 方法1</span></span><br><span class="line"><span class="keyword">let</span> arr3 = [...arr1, ...arr2];</span><br><span class="line"><span class="built_in">console</span>.log(arr3);      <span class="comment">//[1,2,3,4,5,6]</span></span><br><span class="line"><span class="comment">// 方法2</span></span><br><span class="line">arr1.push(...arr2);</span><br><span class="line"><span class="built_in">console</span>.log(arr1);      <span class="comment">//[1,2,3,4,5,6]</span></span><br></pre></td></tr></table></figure><p>扩展运算符可以<strong>将可以迭代的伪(类)数组或可遍历(迭代)对象转换为真正的数组</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> oDivs = <span class="built_in">document</span>.getElementByTagName(<span class="string">'div'</span>);</span><br><span class="line">oDivs = [...oDivs];</span><br></pre></td></tr></table></figure><h4 id="Array-from"><a href="#Array-from" class="headerlink" title="Array.from()"></a>Array.from()</h4><p><code>Array.from()</code> 方法从一个类似数组或可迭代对象创建一个新的，浅拷贝的数组实例并返回。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Array</span>.from(arrayLike[, mapFn[, thisArg]])</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td><code>arrayLike</code></td><td>想要转换成数组的伪数组对象或可迭代对象</td></tr><tr><td><code>mapFn</code></td><td>可选，如果指定了该参数，新数组中的每个元素会执行该回调函数。</td></tr><tr><td><code>thisArg</code></td><td>可选，执行回调函数 <code>mapFn</code> 时 <code>this</code> 对象。</td></tr></tbody></table><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Array.from()将伪数组装换为数组</span></span><br><span class="line"><span class="keyword">var</span> likeArr = &#123;</span><br><span class="line">    <span class="string">"0"</span>: <span class="string">"1"</span>,</span><br><span class="line">    <span class="string">"1"</span>: <span class="string">"2"</span>,</span><br><span class="line">    <span class="string">"2"</span>: <span class="string">"3"</span>,</span><br><span class="line">    length: <span class="number">3</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> trueArr = <span class="built_in">Array</span>.from(likeArr, item =&gt; item * <span class="number">2</span>)</span><br><span class="line"><span class="built_in">console</span>.log(trueArr);  <span class="comment">//[2,4,6]</span></span><br></pre></td></tr></table></figure><h4 id="find"><a href="#find" class="headerlink" title="find()"></a>find()</h4><p> <code>find()</code> 方法返回数组中满足提供的测试函数的第一个元素的值。否则返回<code>undefined</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arr.find(callback[, thisArg])</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td><code>callback</code></td><td>在数组每一项上执行的函数，接收 3 个参数</td></tr><tr><td><code>thisArg</code></td><td>可选，执行回调时用作<code>this</code> 的对象。</td></tr></tbody></table><p>其中<code>callback</code>接收三个参数</p><table><thead><tr><th>callback的参数</th><th>说明</th></tr></thead><tbody><tr><td><code>element</code></td><td>当前遍历到的元素</td></tr><tr><td><code>index</code></td><td>当前遍历到的索引</td></tr><tr><td><code>array</code></td><td>数组本身</td></tr></tbody></table><h4 id="findIndex"><a href="#findIndex" class="headerlink" title="findIndex()"></a>findIndex()</h4><p><code>findIndex()</code>方法返回数组中满足提供的测试函数的第一个元素的<strong>索引</strong>。否则返回-1。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arr.findIndex(callback[, thisArg])</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td><code>callback</code></td><td>在数组每一项上执行的函数，接收 3 个参数</td></tr><tr><td><code>thisArg</code></td><td>可选，执行回调时用作<code>this</code> 的对象。</td></tr></tbody></table><p>其中<code>callback</code>接收三个参数</p><table><thead><tr><th>callback的参数</th><th>说明</th></tr></thead><tbody><tr><td><code>element</code></td><td>当前遍历到的元素</td></tr><tr><td><code>index</code></td><td>当前遍历到的索引</td></tr><tr><td><code>array</code></td><td>数组本身</td></tr></tbody></table><h4 id="includes"><a href="#includes" class="headerlink" title="includes()"></a>includes()</h4><p><code>includes()</code> 方法用来判断一个数组是否包含一个指定的值，根据情况，如果包含则返回 true，否则返回false。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arr.includes(valueToFind[, fromIndex])</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td><code>valueToFind</code></td><td>需要查找的元素值,比较字符串和字符时是区分大小写。</td></tr><tr><td><code>fromIndex</code></td><td>从<code>fromIndex</code> 索引处开始查找 <code>valueToFind</code>。如果为负值，则按升序从 <code>array.length + fromIndex</code> 的索引开始搜 （即使从末尾开始往前跳 <code>fromIndex</code> 的绝对值个索引，然后往后搜寻）。默认为 0。</td></tr></tbody></table><h3 id="String的扩展方法"><a href="#String的扩展方法" class="headerlink" title="String的扩展方法"></a>String的扩展方法</h3><h4 id="模板字符串"><a href="#模板字符串" class="headerlink" title="模板字符串"></a>模板字符串</h4><p><strong>模板字面量</strong>是ES6中允许嵌入表达式的字符串字面量。可以使用多行字符串和字符串插值功能。它们在ES2015规范的先前版本中被称为“<strong>模板字符串</strong>”。模板字符串使用反引号 (``) 来代替普通字符串中的用双引号和单引号。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">`这个一个模板字符串`</span></span><br></pre></td></tr></table></figure><p>模板字符串中可以使用<code>${变量名/表达式}</code><strong>解析变量和表达式</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 模板字符串可以使用$&#123;&#125;解析变量和表达式</span></span><br><span class="line"><span class="keyword">let</span> myNickname = <span class="string">'辛猿毅码'</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">`Hello, my nickname is <span class="subst">$&#123;myNickname&#125;</span>`</span>); <span class="comment">//Hello, my nickname is 辛猿毅码</span></span><br><span class="line"><span class="keyword">let</span> num1 = <span class="number">4</span>;</span><br><span class="line"><span class="keyword">let</span> num2 = <span class="number">5</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">`4 + 5 = <span class="subst">$&#123;num1 + num2&#125;</span>`</span>); <span class="comment">// 4 + 5 = 9</span></span><br></pre></td></tr></table></figure><p>模板字符串中可以使用<code>${函数名()}</code><strong>调用函数</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 模板字符串可以使用$&#123;&#125;调用函数</span></span><br><span class="line"><span class="keyword">const</span> rap = <span class="function"><span class="params">()</span> =&gt;</span> <span class="string">'淡黄的长裙，蓬松的头发'</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">`请听我这一段rap:<span class="subst">$&#123;rap()&#125;</span>`</span>); <span class="comment">// 请听我这一段rap:淡黄的长裙，蓬松的头发</span></span><br></pre></td></tr></table></figure><p>模板字符串中可以<strong>换行</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> lis = <span class="string">`&lt;ul class="nickname"&gt;</span></span><br><span class="line"><span class="string">    &lt;li&gt;Tom&lt;/li&gt;</span></span><br><span class="line"><span class="string">    &lt;li&gt;Jack&lt;/li&gt;</span></span><br><span class="line"><span class="string">    &lt;li&gt;Michael&lt;/li&gt;</span></span><br><span class="line"><span class="string">&lt;/ul&gt;`</span>;</span><br></pre></td></tr></table></figure><h4 id="startsWith-和endsWith"><a href="#startsWith-和endsWith" class="headerlink" title="startsWith()和endsWith()"></a>startsWith()和endsWith()</h4><ul><li><code>startsWith()</code>：用来判断当前字符串是否以另外一个给定的子字符串开头，并根据判断结果返回 <code>true</code> 或 <code>false</code>。</li><li><code>endsWith</code>：用来判断当前字符串是否以另外一个给定的子字符串结尾，并根据判断结果返回 <code>true</code> 或 <code>false</code>。</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">str.startsWith(searchString[, position])</span><br><span class="line">str.endsWidth(searchString[, position])</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td><code>searchString</code></td><td>要搜索的子字符串。</td></tr><tr><td><code>position</code></td><td>在 <code>str</code> 中搜索 <code>searchString</code> 的开始位置，默认值为 0，也就是真正的字符串开头处。</td></tr></tbody></table><h4 id="repeat"><a href="#repeat" class="headerlink" title="repeat()"></a>repeat()</h4><p><code>repeat()</code>构造并返回一个新字符串，该字符串包含被连接在一起的指定数量的字符串的副本，即将原字符串重复n次</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">str.repeat(count)</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td><code>count</code></td><td>介于0和正无穷大之间的整数 : [0, +∞) 。表示在新构造的字符串中重复了多少遍原字符串。</td></tr></tbody></table><h4 id="Set数据结构"><a href="#Set数据结构" class="headerlink" title="Set数据结构"></a>Set数据结构</h4><p>ES6提供了新的数据结构Set，它类似于数组，但是<strong>成员的值都是唯一的</strong>，没有重复的值。</p><p><strong>Set的初始化</strong></p><p>Set本身是一个<strong>构造函数</strong>，用来生成Set数据结构，Set中有属性<strong>size</strong>定义数据的个数。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">set</span> = new Set();</span><br><span class="line">conlose.log(<span class="keyword">set</span>.size); // 0</span><br></pre></td></tr></table></figure><p>Set构造函数可以接受<strong>一个数组或可迭代对象作为参数</strong>，用来初始化</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用数组初始化Set</span></span><br><span class="line"><span class="keyword">const</span> s = <span class="keyword">new</span> <span class="built_in">Set</span>([<span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">5</span>]);</span><br><span class="line"><span class="built_in">console</span>.log(s);  <span class="comment">// Set(5) &#123;1, 2, 3, 4, 5&#125;</span></span><br><span class="line"><span class="built_in">console</span>.log(s.size); <span class="comment">// 5</span></span><br></pre></td></tr></table></figure><p><strong>Set的实例方法</strong></p><ul><li><code>add(value)</code>：添加某个值，返回Set结构本身</li><li><code>delete(value)</code>：删除某个值，返回一个布尔值，表示删除是否成功</li><li><code>has(value)</code>：返回一个布尔值，表示该值是否为Set的成员</li><li><code>clear()</code>：清除所有成员，没有返回值</li></ul><p><strong>Set的遍历</strong></p><p>Set结构的实例和数组一样，可以通过<code>forEach</code>方法进行遍历</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mySet.forEach(callback[, thisArg])</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td><code>callback</code></td><td>为集合中每个元素执行的回调函数，该函数接收三个参数</td></tr><tr><td><code>thisArg</code></td><td>回调函数执行过程中的 <code>this</code> 值。</td></tr></tbody></table><p>其中<code>callback</code>接收三个参数</p><table><thead><tr><th>callback的参数</th><th>说明</th></tr></thead><tbody><tr><td><code>currentValue</code></td><td>正在被操作的元素</td></tr><tr><td><code>currentKey</code></td><td>由于集合没有索引，所以 <code>currentKey</code>也表示这个正在被操作的元素。</td></tr><tr><td><code>set</code></td><td>调用当前 <code>forEach</code> 方法的集合对象</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;  &lt;em&gt;『 注 : 本笔记摘自视频 &lt;a href=&quot;https://www.bilibili.com/video/BV1Kt411w7MP&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;javaScript进阶面向对象ES6&lt;/a&gt;，如有侵权,请联系删除。』&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://www.hardape.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JavaScript" scheme="https://www.hardape.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="https://www.hardape.top/tags/JavaScript/"/>
    
      <category term="ES6" scheme="https://www.hardape.top/tags/ES6/"/>
    
  </entry>
  
  <entry>
    <title>20-JS的高级进阶-正则表达式</title>
    <link href="https://www.hardape.top/article/33a87acb.html"/>
    <id>https://www.hardape.top/article/33a87acb.html</id>
    <published>2020-05-08T00:03:39.000Z</published>
    <updated>2020-05-22T13:41:43.870Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>  <em>『 注 : 本笔记摘自视频 <a href="https://www.bilibili.com/video/BV1Kt411w7MP" target="_blank" rel="noopener">javaScript进阶面向对象ES6</a>，如有侵权,请联系删除。』</em></p></blockquote><a id="more"></a><h2 id="正则表达式概述"><a href="#正则表达式概述" class="headerlink" title="正则表达式概述"></a>正则表达式概述</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p><strong>正则表达式(Regular Expressioon)</strong>是用于匹配字符串中字符组合的模式。在JavaScript中，正则表达式也是对象。</p><h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><ul><li>正则表达式通常被用来检索、替换那些符合某个模式(规则)的文本，例如验证表单：用户名表单只能输入英文字母、数字或者下划线，昵称输入框中可以输入中文(<strong>匹配</strong>)。</li><li>正则表达式还常用于过滤掉页面中内容总的一些敏感词(<strong>替换</strong>)</li><li>正则表达式还用于从字符串中提取特定部分(<strong>提取</strong>)</li></ul><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><ul><li>灵活性、逻辑性和功能性非常强</li><li>可以迅速地用极简单的方式达到字符串的复杂控制</li><li>对于刚接触的人来说，比较晦涩难懂。</li><li>实际开发中，一般都是直接复制写好的正则表达式，但是要求会用正则表达式并且根据实际情况修改正则表达式。</li></ul><h2 id="正则表达式在JavaScript中的使用"><a href="#正则表达式在JavaScript中的使用" class="headerlink" title="正则表达式在JavaScript中的使用"></a>正则表达式在JavaScript中的使用</h2><h3 id="创建正则表达式"><a href="#创建正则表达式" class="headerlink" title="创建正则表达式"></a>创建正则表达式</h3><p>在JavaScript中，可以通过两种方式创建一个正则表达式</p><h4 id="通过RegExp对象"><a href="#通过RegExp对象" class="headerlink" title="通过RegExp对象"></a>通过RegExp对象</h4><p>第一种方式，通过<strong>调用RegExp对象的构造函数创建</strong>正则表达式</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.通过创建RegExp对象来创建正则表达式</span></span><br><span class="line"><span class="keyword">var</span> 变量名 = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="regexp">/表达式/</span>);</span><br></pre></td></tr></table></figure><h4 id="通过字面量"><a href="#通过字面量" class="headerlink" title="通过字面量"></a>通过字面量</h4><p>第二种方式，通过<strong>字面量</strong>创建正则表达式</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">// 2. 通过字面量创建正则表达式</span></span><br><span class="line"><span class="keyword">var</span> 变量名 = <span class="regexp">/表达式/</span>;</span><br></pre></td></tr></table></figure><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><ul><li><code>//</code>中间放表达式就是正则字面量</li><li>正则表达式中不需要加引号</li></ul><h3 id="测试正则表达式"><a href="#测试正则表达式" class="headerlink" title="测试正则表达式"></a>测试正则表达式</h3><p><code>test()</code>正则对象方法用于检测字符串是否符合正则表达式的规则，该对象会返回<code>true</code>或<code>false</code>，其参数是测试字符串</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">regexObj.test(str)</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td><code>regexObj</code></td><td>正则表达式</td></tr><tr><td><code>str</code></td><td>测试的文本</td></tr></tbody></table><h2 id="正则表达式中的特殊字符"><a href="#正则表达式中的特殊字符" class="headerlink" title="正则表达式中的特殊字符"></a>正则表达式中的特殊字符</h2><h3 id="正则表达式组成"><a href="#正则表达式组成" class="headerlink" title="正则表达式组成"></a>正则表达式组成</h3><p>一个正则表达式可以有简单的字符构成，比如<code>/abc/</code>，<strong>如果正则表达式中都是简单字符，那么只要含有这一系列简单字符字符串都匹配成功</strong>；也可以是简单和特殊字符的组合，比如<code>/ab*c/</code>，其中特殊字符也被称为<strong>元字符</strong>，在组织表达式中是具有特殊意义的专用符号，如<code>^</code>、<code>$</code>、<code>+</code>等。</p><p>特殊字符非常多，可以参考</p><ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expressions" target="_blank" rel="noopener">MDN-正则表达式</a></li><li><a href="http://tool.oschina.net/regex" target="_blank" rel="noopener">正则测试工具</a></li><li><a href="http://c.runoob.com/" target="_blank" rel="noopener">菜鸟工具</a></li></ul><h3 id="非打印字符"><a href="#非打印字符" class="headerlink" title="非打印字符"></a>非打印字符</h3><table><thead><tr><th>非打印字符</th><th>说明</th></tr></thead><tbody><tr><td><code>\cx</code></td><td>匹配由x指明的控制字符。例如， \cM 匹配一个 Control-M 或回车符。x 的值必须为 A-Z 或 a-z 之一。否则，将 c 视为一个原义的 ‘c’ 字符。</td></tr><tr><td><code>\f</code></td><td>匹配一个换页符。等价于 \x0c 和 \cL。</td></tr><tr><td><code>\n</code></td><td>匹配一个换行符。等价于 \x0a 和 \cJ。</td></tr><tr><td><code>\r</code></td><td>匹配一个回车符。等价于 \x0d 和 \cM。</td></tr><tr><td><code>\t</code></td><td>匹配一个制表符。等价于 \x09 和 \cI。</td></tr><tr><td><code>\v</code></td><td>匹配一个垂直制表符。等价于 \x0b 和 \cK。</td></tr></tbody></table><h3 id="边界符"><a href="#边界符" class="headerlink" title="边界符"></a>边界符</h3><p>正则表达式中的边界符(位置符)用来<strong>提示字符所处的位置</strong>，主要有两个字符。</p><table><thead><tr><th>便捷付</th><th>说明</th></tr></thead><tbody><tr><td><code>^</code></td><td>表示匹配行首的文本(以谁开始)</td></tr><tr><td><code>$</code></td><td>表示匹配行尾的文本(以谁结束)</td></tr></tbody></table><p><strong>注意</strong>：如果<code>^</code>和<code>$</code>在一起，表示必须是精确匹配。</p><h4 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 边界符^和$</span></span><br><span class="line"><span class="keyword">var</span> reg1 = <span class="regexp">/abc/</span>; <span class="comment">// /abc/只要包含abc这个字符串返回的都是true</span></span><br><span class="line"><span class="built_in">console</span>.log(reg1.test(<span class="string">'abc'</span>));  <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(reg1.test(<span class="string">'abcd'</span>)); <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(reg1.test(<span class="string">'dabc'</span>)); <span class="comment">// true</span></span><br><span class="line"><span class="keyword">var</span> reg2 = <span class="regexp">/^abc/</span>;</span><br><span class="line"><span class="built_in">console</span>.log(reg2.test(<span class="string">'abc'</span>));  <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(reg2.test(<span class="string">'abcd'</span>)); <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(reg2.test(<span class="string">'dabc'</span>)); <span class="comment">// false</span></span><br><span class="line"><span class="keyword">var</span> reg3 = <span class="regexp">/abc$/</span>;</span><br><span class="line"><span class="built_in">console</span>.log(reg3.test(<span class="string">'abc'</span>));  <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(reg3.test(<span class="string">'abcd'</span>)); <span class="comment">// false</span></span><br><span class="line"><span class="built_in">console</span>.log(reg3.test(<span class="string">'dabc'</span>)); <span class="comment">// true</span></span><br><span class="line"><span class="keyword">var</span> reg4 = <span class="regexp">/^abc$/</span> <span class="comment">// 精确匹配，要求必须是abc字符串才符合规范</span></span><br><span class="line"><span class="built_in">console</span>.log(reg4.test(<span class="string">'abc'</span>));  <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(reg4.test(<span class="string">'abcd'</span>)); <span class="comment">// false</span></span><br><span class="line"><span class="built_in">console</span>.log(reg4.test(<span class="string">'dabc'</span>)); <span class="comment">// false</span></span><br><span class="line"><span class="built_in">console</span>.log(reg4.test(<span class="string">'abcabc'</span>));<span class="comment">// false</span></span><br></pre></td></tr></table></figure><h3 id="字符类"><a href="#字符类" class="headerlink" title="字符类"></a>字符类</h3><p>字符类表示有一系列字符可供选择，只要匹配其中一个即可。<strong>所有可供选择的字符都放在方括号内</strong>。</p><h4 id="方括号"><a href="#方括号" class="headerlink" title="[]方括号"></a>[]方括号</h4><p>字符串只要包含方括号内字符串中的任意一个字符即匹配成功。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg1 = <span class="regexp">/[abc]/</span>;</span><br><span class="line"><span class="built_in">console</span>.log(reg1.test(<span class="string">'andy'</span>)); <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(reg1.test(<span class="string">'red'</span>));  <span class="comment">// false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> reg2 = <span class="regexp">/^[abc]$/</span>; <span class="comment">// 三选一，只能是a或者b或c才能返回true</span></span><br><span class="line"><span class="built_in">console</span>.log(reg2.test(<span class="string">'abc'</span>));  <span class="comment">// false</span></span><br><span class="line"><span class="built_in">console</span>.log(reg2.test(<span class="string">'andy'</span>)); <span class="comment">// false</span></span><br><span class="line"><span class="built_in">console</span>.log(reg2.test(<span class="string">'a'</span>));    <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(reg2.test(<span class="string">'b'</span>));    <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(reg2.test(<span class="string">'c'</span>));    <span class="comment">// true</span></span><br></pre></td></tr></table></figure><h4 id="方括号内部范围符"><a href="#方括号内部范围符" class="headerlink" title="[-]方括号内部范围符 -"></a>[-]方括号内部范围符 -</h4><p>方括号内部加上<code>-</code>表示<strong>范围</strong>，只要在该范围内的字符都返回true</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 26个英文小写字母任何一个字母返回 true</span></span><br><span class="line">/^[a-z]$/.test(<span class="string">'c'</span>); <span class="comment">// true</span></span><br></pre></td></tr></table></figure><h4 id="方括号内部取反符"><a href="#方括号内部取反符" class="headerlink" title="[^]方括号内部取反符^"></a>[^]方括号内部取反符^</h4><p>方括号内部加上<code>^</code>表示<strong>取反</strong>，写在要取反的模式的前面，只要包含方括号内的字符都返回false,注意和边界符<code>^</code>区别开来。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/^[^a-z]$/.test(<span class="string">'c'</span>); <span class="comment">// false</span></span><br></pre></td></tr></table></figure><h4 id="字符组合"><a href="#字符组合" class="headerlink" title="字符组合"></a>字符组合</h4><p>方括号内部可以使用字符组合</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 字符组合，26个英文字母(大小写都可以)任何一个字母返回true</span></span><br><span class="line">/^[a-zA-Z]$/.test(<span class="string">'C'</span>);  <span class="comment">// true</span></span><br></pre></td></tr></table></figure><h3 id="量词符"><a href="#量词符" class="headerlink" title="量词符"></a>量词符</h3><p>量词符用来<strong>设定某个模式出现的次数</strong>，量词符写在要规定次数的模式的后面</p><table><thead><tr><th>量词</th><th>说明</th></tr></thead><tbody><tr><td><code>*</code></td><td>重复零次或更多次</td></tr><tr><td><code>+</code></td><td>重复一次或更多次</td></tr><tr><td><code>?</code></td><td>重复零次或一次</td></tr><tr><td><code>{n}</code></td><td>重复n次</td></tr><tr><td><code>{n,}</code></td><td>重复n次或更多次</td></tr><tr><td><code>{n,m}</code></td><td>重复n到m次，注意中间不能有空格</td></tr></tbody></table><h3 id="括号"><a href="#括号" class="headerlink" title="括号"></a>括号</h3><ul><li><strong>大括号{}</strong>：量词符，里面表示重复次数</li><li><strong>中括号[]</strong>：字符集合，匹配方括号中的任意字符</li><li><strong>小括号()</strong>：表示优先级</li></ul><h3 id="预定义类"><a href="#预定义类" class="headerlink" title="预定义类"></a>预定义类</h3><p>预定义类指的是<strong>某些常见模式的简写方式</strong></p><table><thead><tr><th>预定义类</th><th>说明</th></tr></thead><tbody><tr><td><code>\d</code></td><td>匹配0-9之间的任一数字，相当于<code>[0-9]</code></td></tr><tr><td><code>\D</code></td><td>匹配所有0-9以外的字符，相当于<code>[^0-9]</code></td></tr><tr><td><code>\w</code></td><td>匹配任意的字母、数字和下划线，相当于<code>[A-Za-z0-9_]</code></td></tr><tr><td><code>\W</code></td><td>除所有字母、数字和下划线以为的字符，相当于<code>[^A-Za-z0-9_]</code></td></tr><tr><td><code>\s</code></td><td>匹配空格(包括换行符、制表符、空格符等)，相当于<code>[\t\r\n\v\f]</code></td></tr><tr><td><code>\S</code></td><td>匹配非空格的字符，相当于<code>[^\t\r\n\v\f]</code></td></tr></tbody></table><h3 id="其他特殊字符"><a href="#其他特殊字符" class="headerlink" title="其他特殊字符"></a>其他特殊字符</h3><table><thead><tr><th>特殊字符</th><th>说明</th></tr></thead><tbody><tr><td>|</td><td>指明两项之间的一个选择。</td></tr><tr><td><code>.</code></td><td>匹配除换行符 \n 之外的任何单字符。</td></tr><tr><td><code>\</code></td><td>将下一个字符标记为或特殊字符、或原义字符、或向后引用、或八进制转义符。例如， ‘<code>n</code>‘ 匹配字符 ‘n’。’<code>\n</code>‘ 匹配换行符。序列 ‘<code>\\</code>‘ 匹配 “\“，而 ‘<code>\(</code>‘ 则匹配 “(“。</td></tr></tbody></table><h2 id="常用特殊正则表达式"><a href="#常用特殊正则表达式" class="headerlink" title="常用特殊正则表达式"></a>常用特殊正则表达式</h2><blockquote><p>  详见<a href="https://c.runoob.com/front-end/854" target="_blank" rel="noopener">菜鸟工具-正则表达式</a></p></blockquote><ul><li>汉字：<strong>^[\u4e00-\u9fa5]{0,}$</strong></li><li>Email地址：<strong><code>^\w+([-+.]\w+)\*@\w+([-.]\w+)\*\.\w+([-.]\w+)\*$</code></strong></li></ul><ul><li>域名：<strong><code>[a-zA-Z0-9][-a-zA-Z0-9]{0,62}(\.[a-zA-Z0-9][-a-zA-Z0-9]{0,62})+\.?</code></strong></li><li>InternetURL：<strong><code>[a-zA-z]+://[^\s]\* 或 ^http://([\w-]+\.)+[\w-]+(/[\w-./?%&amp;=]\*)?$</code></strong></li><li>手机号码：<strong><code>^(13[0-9]|14[5|7]|15[0|1|2|3|4|5|6|7|8|9]|18[0|1|2|3|5|6|7|8|9])\d{8}$</code></strong></li><li>电话号码(“XXX-XXXXXXX”、”XXXX-XXXXXXXX”、”XXX-XXXXXXX”、”XXX-XXXXXXXX”、”XXXXXXX”和”XXXXXXXX)：<strong><code>^(\(\d{3,4}-)|\d{3.4}-)?\d{7,8}$</code></strong></li></ul><h2 id="正则表达式参数"><a href="#正则表达式参数" class="headerlink" title="正则表达式参数"></a>正则表达式参数</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/表达式/[<span class="keyword">switch</span>]</span><br></pre></td></tr></table></figure><p>switch(也称为修饰符)规定表达式按照什么样的模式匹配，有三种值：</p><ul><li><code>g</code>：全局匹配</li><li><code>i</code>：忽略大小写</li><li><code>gi</code>/<code>ig</code>：全局匹配+忽略大小写</li></ul><h2 id="正则表达式中的替换"><a href="#正则表达式中的替换" class="headerlink" title="正则表达式中的替换"></a>正则表达式中的替换</h2><h3 id="replace替换"><a href="#replace替换" class="headerlink" title="replace替换"></a>replace替换</h3><p><code>replace()</code>方法可以实现替换字符操作，用来替换的参数可以是一个字符字符串或是一个正则表达式</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stringObject.replace(regexp|substr, newSubStr)</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td><code>regexp</code></td><td>一个RegExp对象或者其字面量。该正则所匹配的内容会被第二个参数的返回值替换掉。</td></tr><tr><td><code>substr</code></td><td>一个将被 <code>newSubStr</code> 替换的字符串。其被视为一整个字符串，而不是一个正则表达式。仅第一个匹配项会被替换。</td></tr><tr><td><code>newSubStr</code></td><td>用于替换掉第一个参数在原字符串中的匹配部分的字符串</td></tr></tbody></table><h2 id="正则表达式案例"><a href="#正则表达式案例" class="headerlink" title="正则表达式案例"></a>正则表达式案例</h2><h3 id="用户名验证"><a href="#用户名验证" class="headerlink" title="用户名验证"></a>用户名验证</h3><h4 id="功能需求"><a href="#功能需求" class="headerlink" title="功能需求"></a>功能需求</h4><ol><li>合法的用户名为大小写字母、数字、短划线、下划线的组合，且位数为6-16位</li><li>如果用户名输入合法，后面提示信息为：用户名合法，并且颜色为绿色</li><li>如果用户名输入不合法，后面提示信息为：用户名不符合规范，并且颜色为红色</li></ol><h4 id="结构-HTML"><a href="#结构-HTML" class="headerlink" title="结构(HTML)"></a>结构(HTML)</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 用户名验证 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">"username"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"info"</span>&gt;</span>请输入用户名<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="样式-CSS"><a href="#样式-CSS" class="headerlink" title="样式(CSS)"></a>样式(CSS)</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.info</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ccc</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.right</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: green;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.wrong</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="结构-JS"><a href="#结构-JS" class="headerlink" title="结构(JS)"></a>结构(JS)</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> unameRegex = <span class="regexp">/^[a-zA-Z0-9_-]&#123;6,16&#125;$/</span>;</span><br><span class="line"><span class="keyword">var</span> unameIpt = <span class="built_in">document</span>.querySelector(<span class="string">'#username'</span>);</span><br><span class="line"><span class="keyword">var</span> info = <span class="built_in">document</span>.querySelector(<span class="string">'.info'</span>);</span><br><span class="line">unameIpt.addEventListener(<span class="string">'keyup'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> uname = unameIpt.value.trim();</span><br><span class="line">    <span class="keyword">if</span> (!uname) &#123;</span><br><span class="line">        info.innerHTML = <span class="string">'请输入用户名'</span>;</span><br><span class="line">        info.className = <span class="string">'info'</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (unameRegex.test(uname)) &#123;</span><br><span class="line">        info.innerHTML = <span class="string">'用户名合法'</span>;</span><br><span class="line">        info.className = <span class="string">'right'</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        info.innerHTML = <span class="string">'用户名不符合规范'</span>;</span><br><span class="line">        info.className = <span class="string">'wrong'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h4><p><img src= /img/loading.gif data-src="https://gitee.com/code-ape/blogImage/raw/master/img/js-username-regex.gif" alt="js-username-regex"></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;  &lt;em&gt;『 注 : 本笔记摘自视频 &lt;a href=&quot;https://www.bilibili.com/video/BV1Kt411w7MP&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;javaScript进阶面向对象ES6&lt;/a&gt;，如有侵权,请联系删除。』&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://www.hardape.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JavaScript" scheme="https://www.hardape.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="https://www.hardape.top/tags/JavaScript/"/>
    
      <category term="regex" scheme="https://www.hardape.top/tags/regex/"/>
    
  </entry>
  
  <entry>
    <title>19-JS的高级进阶-函数进阶</title>
    <link href="https://www.hardape.top/article/3fcb384a.html"/>
    <id>https://www.hardape.top/article/3fcb384a.html</id>
    <published>2020-05-08T00:02:22.000Z</published>
    <updated>2020-05-22T13:41:39.269Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>  <em>『 注 : 本笔记摘自视频 <a href="https://www.bilibili.com/video/BV1Kt411w7MP" target="_blank" rel="noopener">javaScript进阶面向对象ES6</a>，如有侵权,请联系删除。』</em></p></blockquote><a id="more"></a><h2 id="函数的定义和调用"><a href="#函数的定义和调用" class="headerlink" title="函数的定义和调用"></a>函数的定义和调用</h2><h3 id="函数定义方式"><a href="#函数定义方式" class="headerlink" title="函数定义方式"></a>函数定义方式</h3><ol><li>函数声明方式<code>function关键字</code>(命名函数)</li><li>函数表达式(匿名函数)</li><li><code>new Function()</code></li></ol><blockquote><p>  详见<a href="https://code-ape.gitee.io/article/bc1cebfd.html" target="_blank" rel="noopener">JS的函数</a></p></blockquote><ul><li>所有函数都是<code>Function</code>的实例(对象)</li><li>函数也是对象</li></ul><img src= /img/loading.gif data-src="https://gitee.com/code-ape/blogImage/raw/master/img/image-20200506175008362.png" alt="image-20200506175008362" style="zoom: 67%;" /><h3 id="函数的调用方式"><a href="#函数的调用方式" class="headerlink" title="函数的调用方式"></a>函数的调用方式</h3><h4 id="普通函数"><a href="#普通函数" class="headerlink" title="普通函数"></a>普通函数</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">函数名();</span><br></pre></td></tr></table></figure><h4 id="对象方法"><a href="#对象方法" class="headerlink" title="对象方法"></a>对象方法</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">对象名.方法名();</span><br></pre></td></tr></table></figure><h4 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">new 构造函数名();</span><br></pre></td></tr></table></figure><h4 id="绑定事件函数"><a href="#绑定事件函数" class="headerlink" title="绑定事件函数"></a>绑定事件函数</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">节点对象.绑定事件名 = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 函数体</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="定时器函数"><a href="#定时器函数" class="headerlink" title="定时器函数"></a>定时器函数</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定时器自动调用</span></span><br><span class="line">setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;, timeout)</span><br></pre></td></tr></table></figure><h4 id="立即执行函数"><a href="#立即执行函数" class="headerlink" title="立即执行函数"></a>立即执行函数</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 立即执行函数自动调用</span></span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;)()</span><br></pre></td></tr></table></figure><h2 id="this"><a href="#this" class="headerlink" title="this"></a>this</h2><h3 id="函数内this的指向"><a href="#函数内this的指向" class="headerlink" title="函数内this的指向"></a>函数内this的指向</h3><p>这些this的指向，是当我们调用函数的时候确定的。调用方式的不同决定了this的指向不同。一般指向我们的调用者。</p><table><thead><tr><th>调用方式</th><th>this指向</th></tr></thead><tbody><tr><td>普通函数调用</td><td>window</td></tr><tr><td>构造函数调用</td><td>实例对象，原型对象里面的方法也指向实例对象</td></tr><tr><td>对象方法调用</td><td>该方法所属对象</td></tr><tr><td>事件绑定方法</td><td>绑定事件对象</td></tr><tr><td>定时器函数</td><td>window</td></tr><tr><td>立即执行函数</td><td>window</td></tr></tbody></table><h3 id="改变函数内部this指向"><a href="#改变函数内部this指向" class="headerlink" title="改变函数内部this指向"></a>改变函数内部this指向</h3><p>JavaScript专门提供了一些函数方法来更优雅地处理函数内部this的指向问题，常用的有<code>bind()</code>、<code>call()</code>、<code>apply()</code>三种方法。</p><h4 id="call"><a href="#call" class="headerlink" title="call()"></a>call()</h4><p>call()用于调用这个函数，并且修改函数运行的this指向</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fun.call(thisArg, arg1, arg2, ...)</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td><code>thisArg</code></td><td>当前调用函数this的指向对象</td></tr><tr><td><code>arg1,arg2...</code></td><td>传递的其他参数</td></tr></tbody></table><h4 id="apply"><a href="#apply" class="headerlink" title="apply()"></a>apply()</h4><p><code>apply()</code>方法调用一个函数，而且它可以改变函数的this指向</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fun.apply(thisArg, [argsArray])</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td><code>thisArg</code></td><td>当前调用函数this的指向对象</td></tr><tr><td><code>argsArray</code></td><td>传递的参数，必须包含在(伪)数组里面</td></tr></tbody></table><p>可以利用<code>apply</code>中参数为数组的特点借助于数学内置对象快速求数组最值</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// apply的应用,使用Math.max/Math.min快速求得数组中的最值</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">9</span>, <span class="number">56</span>, <span class="number">78</span>, <span class="number">99</span>, <span class="number">43</span>, <span class="number">2</span>, <span class="number">25</span>];</span><br><span class="line"><span class="keyword">var</span> max = <span class="built_in">Math</span>.max.apply(<span class="built_in">Math</span>, arr);</span><br><span class="line"><span class="keyword">var</span> min = <span class="built_in">Math</span>.min.apply(<span class="built_in">Math</span>, arr);</span><br><span class="line"><span class="built_in">console</span>.log(max, min);  <span class="comment">// 99 2</span></span><br></pre></td></tr></table></figure><h4 id="bind"><a href="#bind" class="headerlink" title="bind()"></a>bind()</h4><p><code>bind()</code>方法不会调用函数，但是能改变函数内部的this指向</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fun.bind(thisArg, arg1, arg2, ...)</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td><code>thisArg</code></td><td>当前调用函数this的指向对象</td></tr><tr><td><code>arg1,arg2...</code></td><td>传递的其他参数</td></tr></tbody></table><ul><li>注意：<code>bind()</code>返回由指定的this值和初始化参数改造的<strong>原函数拷贝</strong></li><li>如果有的函数不需要立即调用，但是又想改变这个函数内部的this指向，比如改变定时器内部的this指向，此时使用bind</li></ul><p><strong>例子</strong>：多个按钮，当点击一个按钮后禁用该按钮，3秒后开启该按钮</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// bind的巧妙用法</span></span><br><span class="line"><span class="keyword">var</span> btns = <span class="built_in">document</span>.querySelectorAll(<span class="string">'button'</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; btns.length; i++) &#123;</span><br><span class="line">    btns[i].onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.disabled = <span class="literal">true</span>;</span><br><span class="line">        setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.disabled = <span class="literal">false</span>;</span><br><span class="line">        &#125;.bind(<span class="keyword">this</span>), <span class="number">3000</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="严格模式"><a href="#严格模式" class="headerlink" title="严格模式"></a>严格模式</h2><blockquote><p>  详见 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Strict_mode" target="_blank" rel="noopener">MDN-严格模式</a></p></blockquote><h3 id="什么是严格模式"><a href="#什么是严格模式" class="headerlink" title="什么是严格模式"></a>什么是严格模式</h3><ul><li>JavaScript除了提供正常模式外，还提供了<strong>严格模式(strict mode)</strong>。ES5的严格模式是采用具有限制性JavaScript变体的一种方式，即在严格模式的条件下运行JS代码</li><li>严格模式在IE10以上版本的浏览器中才会被支持，旧版本浏览器中会被忽略。</li></ul><p>严格模式对正常的JavaScript语义做了一些更改：</p><ul><li>消除了JavaScript语法的一些不合理、不严谨之处，减少了一些怪异行为</li><li>消除代码运行的一些不安全之处，保证代码运行安全</li><li>提高编译器的效率，提升运行速度</li><li>禁用了再ECMAScript的未来版本中可能会定义的一些语法，为未来新版本的JavaScript做好铺垫。比如一些保留字如：class,enum,extends,import,super不能做变量名</li></ul><h3 id="开启严格模式"><a href="#开启严格模式" class="headerlink" title="开启严格模式"></a>开启严格模式</h3><p>严格模式可以应用到<strong>整个脚本</strong>或<strong>个别函数</strong>中。因此在使用时，我们可以将开启严格模式分为<strong>为脚本开启严格模式</strong>和<strong>为函数开启严格模式</strong>两种情况。</p><h4 id="为脚本开启严格模式"><a href="#为脚本开启严格模式" class="headerlink" title="为脚本开启严格模式"></a>为脚本开启严格模式</h4><p>为整个脚本开启严格模式，需要在<strong>所有语句之前放一个特定语句<code>&quot;use strict&quot;;</code>(或<code>&#39;use strict&#39;;</code>)</strong>。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="meta">    'use strict'</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 下面的代码按照严格模式执行</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>有的script脚本是严格模式，有的script脚本是正常模式，这样不利于文件合并，所有可以将整个脚本文件放在一个立即执行和匿名函数之中。这样独立创建一个作用域而不影响其他script脚本文件。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    (<span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="meta">        'use strict'</span>;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 下面的代码按照严格模式执行</span></span></span><br><span class="line">    &#125;)();</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="为函数开启严格模式"><a href="#为函数开启严格模式" class="headerlink" title="为函数开启严格模式"></a>为函数开启严格模式</h4><p>要给某个函数开启严格模式，需要把<strong><code>&quot;use strict&quot;;</code>(或<code>&#39;use strict&#39;;</code>)声明放在函数体所有语句之前</strong>。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="meta">    "use strict"</span>;</span><br><span class="line">    <span class="comment">// 下面的代码按照严格模式执行</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="严格模式中的变化"><a href="#严格模式中的变化" class="headerlink" title="严格模式中的变化"></a>严格模式中的变化</h3><p>严格模式对JavaScript的语法和行为，都做了一些改变。</p><h4 id="变量规定"><a href="#变量规定" class="headerlink" title="变量规定"></a>变量规定</h4><ul><li>在正常模式中，如果一个变量没有声明就赋值，默认是全局变量。严格模式禁止这种写法，变量都必须先用var命令声明，然后再使用。</li><li>严禁删除已经声明的变量。例如<code>delete x</code>语法是错误的。</li></ul><h4 id="严格模式下this指向问题"><a href="#严格模式下this指向问题" class="headerlink" title="严格模式下this指向问题"></a>严格模式下this指向问题</h4><ul><li>正常模式下全局作用域函数中的this指向window对象；严格模式下全局作用域中的this的<strong>undefined</strong></li><li>正常模式下构造函数不加new也可以调用，当普通函数，this指向window；严格模式下如果构造函数不加new直接调用，this指向的是undefined，如果给其赋值会报错</li><li>严格模式下定时器中this还是指向window</li><li>严格模式下new实例化的构造函数还是指向创建的对象实例，事件、对象还是指向调用者。</li></ul><h4 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h4><ul><li>函数不能有重名的参数</li><li>函数必须声明在顶层，新版本的JavaScript会引入”块级作用域”(ES6中已引入)。为了与新版本接轨，<strong>不允许在非函数的代码块内声明函数</strong>。</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">"use strict"</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"></span>) </span>&#123; &#125; <span class="comment">// !!! 语法错误</span></span><br><span class="line">    f();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">f2</span>(<span class="params"></span>) </span>&#123; &#125; <span class="comment">// !!! 语法错误</span></span><br><span class="line">    f2();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">baz</span>(<span class="params"></span>) </span>&#123; <span class="comment">// 合法</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">eit</span>(<span class="params"></span>) </span>&#123; &#125; <span class="comment">// 同样合法</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="高阶函数"><a href="#高阶函数" class="headerlink" title="高阶函数"></a>高阶函数</h2><p><strong>高阶函数</strong>是对象其他函数进行操作的函数，它<strong>接收函数作为参数</strong>或<strong>将函数作为返回值</strong></p><h3 id="接收函数作为参数"><a href="#接收函数作为参数" class="headerlink" title="接收函数作为参数"></a>接收函数作为参数</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 高阶函数-接收函数作为参数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn1</span>(<span class="params">callback</span>) </span>&#123;</span><br><span class="line">    callback &amp;&amp; callback();</span><br><span class="line">&#125;</span><br><span class="line">fn1(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    alert(<span class="string">"淡黄的长裙"</span>)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="将函数作为返回值"><a href="#将函数作为返回值" class="headerlink" title="将函数作为返回值"></a>将函数作为返回值</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 高阶函数-将函数作为返回值</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn2</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        alert(<span class="string">"蓬松的头发"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">fn2()();</span><br></pre></td></tr></table></figure><h2 id="闭包"><a href="#闭包" class="headerlink" title="闭包"></a>闭包</h2><h3 id="变量作用域"><a href="#变量作用域" class="headerlink" title="变量作用域"></a>变量作用域</h3><p>变量根据作用域的不同分为两种：全局变量和局部变量。</p><ul><li>函数内部可以使用全局变量</li><li>函数外部不可以使用局部变量</li><li>当函数执行完毕，本作用域内的局部变量会被销毁</li></ul><h3 id="什么是闭包"><a href="#什么是闭包" class="headerlink" title="什么是闭包"></a>什么是闭包</h3><ul><li><strong>闭包(closure)</strong>指有权访问另一个函数作用域中变量的<strong>函数</strong>。——《JavaScirpt高级程序设计》</li><li>简单理解：一个作用域可以访问另外一个函数内部的局部变量</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn1</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> num = <span class="number">10</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">fn2</span>(<span class="params"></span>) </span>&#123; <span class="comment">// fn2 就是闭包函数</span></span><br><span class="line">        <span class="built_in">console</span>.log(num); <span class="comment">//10</span></span><br><span class="line">    &#125;</span><br><span class="line">    fn2();</span><br><span class="line">&#125;</span><br><span class="line">fn1();</span><br></pre></td></tr></table></figure><h3 id="在Chrome中调试闭包"><a href="#在Chrome中调试闭包" class="headerlink" title="在Chrome中调试闭包"></a>在Chrome中调试闭包</h3><ol><li>打开Chrome浏览器，按F12键启动调试工具</li><li>设置断点</li><li>找到Scope(作用域)选项</li><li>当我们重新刷新页面，会进入断点调试，Scope里面会有两个参数(global全局作用域，local局部作用域)</li><li>当执行到fn2()时，Scope里面会多一个Closure参数，这就表明产生了闭包。</li></ol><h3 id="闭包的作用"><a href="#闭包的作用" class="headerlink" title="闭包的作用"></a>闭包的作用</h3><p>提问：以上述代码为例，如何在fn1()函数外面访问fn1()中的局部变量num呢？</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用高级函数，将函数作为返回值，产生闭包</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn1</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> num = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(num); <span class="comment">//10</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> f = fn();</span><br><span class="line">f(); <span class="comment">//f就是闭包函数，它访问到了fn1中的局部变量num</span></span><br></pre></td></tr></table></figure><p><strong>闭包的作用：延伸了变量的作用范围</strong></p><h3 id="闭包案例"><a href="#闭包案例" class="headerlink" title="闭包案例"></a>闭包案例</h3><h4 id="点击li打印当前索引号"><a href="#点击li打印当前索引号" class="headerlink" title="点击li打印当前索引号"></a>点击li打印当前索引号</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 闭包案例-点击li输出当前li的索引号</span></span><br><span class="line"><span class="comment">// 1. 利用动态添加属性的方式</span></span><br><span class="line"><span class="keyword">var</span> lis = <span class="built_in">document</span>.querySelector(<span class="string">'ul'</span>).querySelectorAll(<span class="string">'li'</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; lis.length; i++) &#123;</span><br><span class="line">    lis[i].index = i;</span><br><span class="line">    lis[i].onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.index);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 2. 利用闭包获取li的索引号</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; lis.length; i++) &#123;</span><br><span class="line">    <span class="comment">// 每次循环都创建一个立即执行函数</span></span><br><span class="line">    <span class="comment">// 立即执行函数也称为小闭包，一个立即执行函数里面的任何一个函数可以使用它的变量i</span></span><br><span class="line">    (<span class="function"><span class="keyword">function</span> (<span class="params">i</span>) </span>&#123;</span><br><span class="line">        lis[i].onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)(i)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3秒钟后打印所有li元素的内容"><a href="#3秒钟后打印所有li元素的内容" class="headerlink" title="3秒钟后打印所有li元素的内容"></a>3秒钟后打印所有li元素的内容</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> lis = <span class="built_in">document</span>.querySelector(<span class="string">'ul'</span>).querySelectorAll(<span class="string">'li'</span>);</span><br><span class="line"><span class="comment">// 闭包案例-3秒钟后打印所有li元素的内容</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; lis.length; i++) &#123;</span><br><span class="line">    (<span class="function"><span class="keyword">function</span> (<span class="params">i</span>) </span>&#123;</span><br><span class="line">        setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(lis[i].innerHTML);</span><br><span class="line">        &#125;, <span class="number">3000</span>)</span><br><span class="line">    &#125;)(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h2><h3 id="什么是递归"><a href="#什么是递归" class="headerlink" title="什么是递归"></a>什么是递归</h3><ul><li>如果<strong>一个函数在内部调用其本身</strong>，那么这个函数就是<strong>递归函数</strong></li><li>简单理解：函数内部自己调用自己，这个函数就是递归函数</li><li>递归函数的作用和循环效果一致</li><li>由于递归很容易发生<strong>“栈溢出”错误( stack overflow )</strong>，所以<strong>必须要加退出条件return</strong></li></ul><h3 id="递归案例"><a href="#递归案例" class="headerlink" title="递归案例"></a>递归案例</h3><h4 id="求1-n的阶乘"><a href="#求1-n的阶乘" class="headerlink" title="求1~n的阶乘"></a>求1~n的阶乘</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 利用递归求1~n的阶乘</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">factorial</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (n === <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> n * factorial(n - <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(factorial(<span class="number">4</span>));  <span class="comment">// 24</span></span><br></pre></td></tr></table></figure><h4 id="求斐波那契数列"><a href="#求斐波那契数列" class="headerlink" title="求斐波那契数列"></a>求斐波那契数列</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 利用递归求斐波那契数列(兔子数列) 1,1,2,3,5,8,13,21</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fibonacci</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (n === <span class="number">1</span> || n === <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> fibonacci(n - <span class="number">2</span>) + fibonacci(n - <span class="number">1</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(fibonacci(<span class="number">8</span>));</span><br></pre></td></tr></table></figure><h2 id="浅拷贝和深拷贝"><a href="#浅拷贝和深拷贝" class="headerlink" title="浅拷贝和深拷贝"></a>浅拷贝和深拷贝</h2><h3 id="浅拷贝"><a href="#浅拷贝" class="headerlink" title="浅拷贝"></a>浅拷贝</h3><p>浅拷贝只是拷贝一层，更深层次对象/数组级别的只拷贝引用，在JS中可以使用<code>for...in</code>遍历对象实现</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 浅拷贝</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">shallowCopy</span>(<span class="params">newObj, oldObj</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> k <span class="keyword">in</span> oldObj) &#123;</span><br><span class="line">        newObj[k] = oldObj[k];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="深拷贝"><a href="#深拷贝" class="headerlink" title="深拷贝"></a>深拷贝</h3><p>深拷贝拷贝多层，每一级别的数据都会拷贝，在JS中可以利用递归实现</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 深拷贝</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">deepCopy</span>(<span class="params">newObj, oldObj</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> k <span class="keyword">in</span> oldObj) &#123;</span><br><span class="line">        <span class="keyword">var</span> item = oldObj[k];</span><br><span class="line">        <span class="keyword">if</span> (item <span class="keyword">instanceof</span> <span class="built_in">Array</span>) &#123;</span><br><span class="line">            newObj[k] = [];</span><br><span class="line">            deepCopy(newObj[k], item);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (item <span class="keyword">instanceof</span> <span class="built_in">Object</span>) &#123;</span><br><span class="line">            newObj[k] = &#123;&#125;;</span><br><span class="line">            deepCopy(newObj[k], item);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            newObj[k] = item;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Object-assign"><a href="#Object-assign" class="headerlink" title="Object.assign()"></a>Object.assign()</h3><p>ES6新增方法<code>Objec.assign()</code>可以实现浅拷贝，<code>Object.assign()</code> 方法用于将所有可枚举属性的值从一个或多个源对象复制到目标对象。它将返回目标对象。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Object</span>.assign(target, ...sources)</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td><code>target</code></td><td>目标对象</td></tr><tr><td><code>sources</code></td><td>源对象</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;  &lt;em&gt;『 注 : 本笔记摘自视频 &lt;a href=&quot;https://www.bilibili.com/video/BV1Kt411w7MP&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;javaScript进阶面向对象ES6&lt;/a&gt;，如有侵权,请联系删除。』&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://www.hardape.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JavaScript" scheme="https://www.hardape.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="https://www.hardape.top/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>18-JS的高级进阶-构造函数和原型</title>
    <link href="https://www.hardape.top/article/55b1b3df.html"/>
    <id>https://www.hardape.top/article/55b1b3df.html</id>
    <published>2020-05-08T00:00:39.000Z</published>
    <updated>2020-05-22T13:41:34.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>  <em>『 注 : 本笔记摘自视频 <a href="https://www.bilibili.com/video/BV1Kt411w7MP" target="_blank" rel="noopener">javaScript进阶面向对象ES6</a>，如有侵权,请联系删除。』</em></p></blockquote><a id="more"></a><h2 id="构造函数和原型"><a href="#构造函数和原型" class="headerlink" title="构造函数和原型"></a>构造函数和原型</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><ul><li>在典型的OOP语言中(如Java)，都存在类的概念，类就是对象的模板，对象就是类的实例，但在ES6之前，JS中并没有引入类的概念。</li><li>ES6，全称ECMAScript6.0，2015.06发版，但是目前浏览器的JavaScript是ES5版本，大多数高版本的浏览器也支持ES6，不过只实现了ES6的部分特性和功能。</li><li>在ES6之前，对象不是基于类创建的，而是用一种称为<strong>构造函数</strong>的特殊函数来定义对象和他们的特征</li><li>创建对象的三种方式：对象字面量、new Object()、自定义构造函数，详见<a href="https://code-ape.gitee.io/article/a9eff881.html" target="_blank" rel="noopener">JS的对象</a></li></ul><h3 id="实例成员和静态成员"><a href="#实例成员和静态成员" class="headerlink" title="实例成员和静态成员"></a>实例成员和静态成员</h3><p>JavaScript的构造函数中可以添加一些成员，可以在构造函数本身上添加，也可以在构造函数内部的this上添加。通过这两种方式添加的成员，分别称为<strong>静态成员</strong>和<strong>实例成员</strong></p><h4 id="静态成员"><a href="#静态成员" class="headerlink" title="静态成员"></a>静态成员</h4><p>在构造函数上添加的成员称为<strong>静态成员</strong>，<strong>只能由构造函数本身来访问</strong></p><h4 id="实例成员"><a href="#实例成员" class="headerlink" title="实例成员"></a>实例成员</h4><p>在构造函数内部创建的对象成员称为<strong>实例成员</strong>，<strong>只能由实例化的对象来访问</strong></p><h4 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Student</span>(<span class="params">name,age</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 实例成员</span></span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">    <span class="keyword">this</span>.age = age;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 静态成员</span></span><br><span class="line">Student.task = <span class="string">'Study'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> codeApe = <span class="keyword">new</span> Student(<span class="string">'辛猿毅码'</span>,<span class="number">18</span>);</span><br><span class="line"><span class="built_in">console</span>.log(codeApe.name);</span><br><span class="line"><span class="built_in">console</span>.log(Student.task);</span><br></pre></td></tr></table></figure><h3 id="构造函数的问题"><a href="#构造函数的问题" class="headerlink" title="构造函数的问题"></a>构造函数的问题</h3><p>构造函数方法很好用，但是<strong>存在浪费内存的问题</strong></p><img src= /img/loading.gif data-src="https://gitee.com/code-ape/blogImage/raw/master/img/image-20200505214219181.png" alt="image-20200505214219181" style="zoom:50%;" /><p>我们希望所有的对象使用同一个函数，这样就比较节省内存，故引入<strong>原型prototype</strong>。</p><h3 id="构造函数原型prototype"><a href="#构造函数原型prototype" class="headerlink" title="构造函数原型prototype"></a>构造函数原型prototype</h3><ul><li>构造函数通过原型分配的函数时所有对象所<strong>共享的</strong></li><li>JavaScript规定，<strong>每一个构造函数都有一个prototype属性</strong>，指向另一个对象。注意这个prototype就是一个对象，这个对象的所有属性和方法，都会被构造函数所拥有。</li><li><strong>我们可以把一些不变的方法，直接定义在prototype对象上，这样所有对象的实例就可以共享这些方法</strong></li><li>一般情况下，公共属性定义到构造函数里面，公共方法定义在原型对象上。</li></ul><h4 id="例子-1"><a href="#例子-1" class="headerlink" title="例子"></a>例子</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Student</span>(<span class="params">name, age</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 实例成员</span></span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">    <span class="keyword">this</span>.age = age;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 使用原型prototype定义公共方法</span></span><br><span class="line">Student.prototype.intro = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'我的名字是'</span> + <span class="keyword">this</span>.name + <span class="string">',今年'</span> + <span class="keyword">this</span>.age + <span class="string">'岁'</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">codeApe.intro();</span><br></pre></td></tr></table></figure><h3 id="对象原型-proto"><a href="#对象原型-proto" class="headerlink" title="对象原型__proto__"></a>对象原型<code>__proto__</code></h3><p>在JS中，每个对象都会有一个属性<code>__proto__</code>(两个双下划线)指向构造函数的prototype原型对象，对象可以使用构造函数prototype的属性和方法，就是因为对象有<code>__proto__</code>原型的存在。</p><ul><li><code>__proto__</code>对象原型和原型对象prototype是<strong>等价</strong>的</li><li><code>__proto__</code>对象原型的意义就在于为对象的查找机制提供一个方向，或者说一条路线，但是它是一个非标准属性，因此在实际开发中，不可以使用这个属性，它只是内部指向原型对象prototype。</li></ul><img src= /img/loading.gif data-src="https://gitee.com/code-ape/blogImage/raw/master/img/image-20200505222151138.png" alt="image-20200505222151138" style="zoom:50%;" /><p>方法的查找规则：首先看看ldh对象上是否有sing方法，如果有就执行这个对象上的sing，如果没有，因为有<code>__proto__</code>的存在，就去构造函数原型对象prototype上去查找。</p><h3 id="constructor构造函数"><a href="#constructor构造函数" class="headerlink" title="constructor构造函数"></a>constructor构造函数</h3><ul><li><strong>对象原型(<code>__proto__</code>)</strong>和<strong>构造函数(prototype)</strong>里面都有一个<strong>constructor</strong>属性，constuctor我们称为构造函数，因为它指会构造函数本身。</li><li>constructor主要用于记录该对象引用于哪个构造函数，它可以让原型对象重新指向原来的构造函数</li></ul><h4 id="例子-2"><a href="#例子-2" class="headerlink" title="例子"></a>例子</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">unction Student(name, age) &#123;</span><br><span class="line">    <span class="comment">// 实例成员</span></span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">    <span class="keyword">this</span>.age = age;</span><br><span class="line">&#125;</span><br><span class="line">Student.prototype = &#123;</span><br><span class="line">    <span class="comment">// 如果我们修改了原来的原型对象，给原型对象赋值的是一个对象，</span></span><br><span class="line">    <span class="comment">// 则必须手动地利用constructor指回原来的构造函数</span></span><br><span class="line">    <span class="keyword">constructor</span>: Student,</span><br><span class="line">    intro: function () &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'我的名字是'</span> + <span class="keyword">this</span>.name + <span class="string">',今年'</span> + <span class="keyword">this</span>.age + <span class="string">'岁'</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    task: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'我的主要任务是学习，积累知识'</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> codeApe = <span class="keyword">new</span> Student(<span class="string">'辛猿毅码'</span>, <span class="number">18</span>);</span><br><span class="line">codeApe.intro();</span><br><span class="line"><span class="built_in">console</span>.log(Student.prototype);</span><br><span class="line"><span class="built_in">console</span>.log(codeApe.__proto__);</span><br></pre></td></tr></table></figure><h3 id="构造函数、实例、原型对象三者之间的关系"><a href="#构造函数、实例、原型对象三者之间的关系" class="headerlink" title="构造函数、实例、原型对象三者之间的关系"></a>构造函数、实例、原型对象三者之间的关系</h3><img src= /img/loading.gif data-src="https://gitee.com/code-ape/blogImage/raw/master/img/image-20200505235840821.png" alt="image-20200505235840821" style="zoom:50%;" /><h3 id="原型链"><a href="#原型链" class="headerlink" title="原型链"></a>原型链</h3><img src= /img/loading.gif data-src="https://gitee.com/code-ape/blogImage/raw/master/img/image-20200506000258315.png" alt="image-20200506000258315" style="zoom:80%;" /><h3 id="JavaScript的成员查找机制-规则"><a href="#JavaScript的成员查找机制-规则" class="headerlink" title="JavaScript的成员查找机制(规则)"></a>JavaScript的成员查找机制(规则)</h3><ol><li>当访问一个对象的属性(包括方法)时，首先查找这个<strong>对象自身</strong>有没有该属性</li><li>如果没有就查找它的原型(也就是<code>__proto__</code>指向的<strong>prototype原型对象</strong>)</li><li>如果还没有就查找原型对象的原型(<strong>Object的原型对象</strong>)</li><li>以此类推一直找到Object为止(<strong>null</strong>)</li></ol><h3 id="原型对象this指向"><a href="#原型对象this指向" class="headerlink" title="原型对象this指向"></a>原型对象this指向</h3><ul><li>在构造函数中，里面this指向的是对象实例</li><li>原型对象函数里面的this指向的是实例对象</li></ul><h3 id="扩展内置对象"><a href="#扩展内置对象" class="headerlink" title="扩展内置对象"></a>扩展内置对象</h3><p>可以通过原型对象，对原来的内置对象进行扩展自定义的方法</p><h4 id="例子-扩展Array对象增加求和功能"><a href="#例子-扩展Array对象增加求和功能" class="headerlink" title="例子-扩展Array对象增加求和功能"></a>例子-扩展Array对象增加求和功能</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 扩展Array内置对象增加求和功能</span></span><br><span class="line"><span class="built_in">Array</span>.prototype.sum = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>.length; i++) &#123;</span><br><span class="line">        sum += <span class="keyword">this</span>[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line"><span class="built_in">console</span>.log(arr.sum());</span><br></pre></td></tr></table></figure><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><p>数组和字符串等内置对象不能给原型对象覆盖操作如<code>Array.prototype = {}</code>，只能是<code>Array.prototype.xxx = function(){}</code>的形式</p><h2 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h2><p>ES6之前并没有给我们提供extends继承。我们可以通过<strong>构造函数+原型对象</strong>模拟实现继承，被称为<strong>组合继承</strong>。</p><h3 id="call"><a href="#call" class="headerlink" title="call()"></a>call()</h3><p>call()用于调用这个函数，并且修改函数运行的this指向</p><h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fun.call(thisArg, arg1, arg2, ...)</span><br></pre></td></tr></table></figure><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td><code>thisArg</code></td><td>当前调用函数this的指向对象</td></tr><tr><td><code>arg1,arg2...</code></td><td>传递的其他参数</td></tr></tbody></table><h4 id="例子-3"><a href="#例子-3" class="headerlink" title="例子"></a>例子</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// call方法</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">coding</span>(<span class="params">lan</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (lan) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.uname + <span class="string">"在使用"</span> + lan + <span class="string">"语言进行开发"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"程序员在打代码中..."</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> user = &#123;</span><br><span class="line">    uname: <span class="string">'辛猿毅码'</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// call()可以调用函数</span></span><br><span class="line">coding.call();</span><br><span class="line"><span class="comment">// coding函数中的this原本指向window,</span></span><br><span class="line"><span class="comment">// 而call()可以改变着函数的this指向，</span></span><br><span class="line"><span class="comment">// 此时这个函数的this就指向了user这个对象</span></span><br><span class="line">coding.call(user, <span class="string">'JavaScript'</span>)</span><br></pre></td></tr></table></figure><h3 id="借用构造函数继承父类型属性"><a href="#借用构造函数继承父类型属性" class="headerlink" title="借用构造函数继承父类型属性"></a>借用构造函数继承父类型属性</h3><h4 id="核心原理"><a href="#核心原理" class="headerlink" title="核心原理"></a>核心原理</h4><p>通过<code>call()</code>把父类型的this指向子类型的this，这样就可以实现子类型继承父类型的属性。</p><h4 id="例子-4"><a href="#例子-4" class="headerlink" title="例子"></a>例子</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 借用父构造函数继承属性</span></span><br><span class="line"><span class="comment">// 父构造函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Father</span>(<span class="params">uname, age</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// this指向父构造函数的对象实例</span></span><br><span class="line">    <span class="keyword">this</span>.uname = uname;</span><br><span class="line">    <span class="keyword">this</span>.age = age;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 子构造函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Son</span>(<span class="params">uname, age</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// this指向子构造函数的对象实例</span></span><br><span class="line">    Father.call(<span class="keyword">this</span>, uname, age);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="借用原型对象继承父类型方法"><a href="#借用原型对象继承父类型方法" class="headerlink" title="借用原型对象继承父类型方法"></a>借用原型对象继承父类型方法</h3><h4 id="核心原理-1"><a href="#核心原理-1" class="headerlink" title="核心原理"></a>核心原理</h4><ul><li>通过设置子构造函数的原型对象指向父类型的实例对象实现继承父类型方法</li><li>此时利用对象的形式修改了子类型的原型对象，需利用constructor指回原来的原型对象</li></ul><h4 id="例子-5"><a href="#例子-5" class="headerlink" title="例子"></a>例子</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 借用父构造函数继承属性,借用原型对象继承方法</span></span><br><span class="line"><span class="comment">// 父构造函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Father</span>(<span class="params">uname, age</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// this指向父构造函数的对象实例</span></span><br><span class="line">    <span class="keyword">this</span>.uname = uname;</span><br><span class="line">    <span class="keyword">this</span>.age = age;</span><br><span class="line">&#125;</span><br><span class="line">Father.prototype.study = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'活到老学到老'</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 子构造函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Son</span>(<span class="params">uname, age</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// this指向子构造函数的对象实例</span></span><br><span class="line">    Father.call(<span class="keyword">this</span>, uname, age);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 利用原型对象继承父类型方法</span></span><br><span class="line"><span class="comment">// 不能使用Son.prototype = Father.prototype</span></span><br><span class="line"><span class="comment">// 这样直接赋值会有问题，如果修改了子原型对象，父原型对象也会随之变化</span></span><br><span class="line">Son.prototype = <span class="keyword">new</span> Father();</span><br><span class="line"><span class="comment">// 使用constructor指回原来的原型对象</span></span><br><span class="line">Son.prototype.constructor = Son;</span><br></pre></td></tr></table></figure><h4 id="原型链图例"><a href="#原型链图例" class="headerlink" title="原型链图例"></a>原型链图例</h4><img src= /img/loading.gif data-src="https://gitee.com/code-ape/blogImage/raw/master/img/Father-son-prototype.png" alt="Father-son-prototype" style="zoom: 80%;" /><h2 id="类的本质"><a href="#类的本质" class="headerlink" title="类的本质"></a>类的本质</h2><p><strong>类的本质其实是一个函数</strong>，可以简单地认为类就是构造函数的另外一个写法</p><h3 id="构造函数的特点"><a href="#构造函数的特点" class="headerlink" title="构造函数的特点"></a>构造函数的特点</h3><ul><li>构造函数有原型对象prototype</li><li>构造函数原型对象prototype里面有constructor指向构造函数本身</li><li>构造函数可以通过原型对象添加方法</li><li>构造函数创建的实例对象有<code>__proto__</code>原型指向函数的原型对象</li></ul><h3 id="类的本质是函数"><a href="#类的本质是函数" class="headerlink" title="类的本质是函数"></a>类的本质是函数</h3><ul><li>class本质还是function</li><li>类拥有以上构造函数的4个特点</li><li>类的所有方法都定义在类的prototype属性上</li><li>类创建的实例里面也有<code>__proto__</code>原型指向类的prototype原型对象</li><li>所以ES6的类的绝大部分功能，ES5都可以做到，新的class写法只是让对象原型的写法更加清晰、更像面向对象编程的语法而已。</li><li>所以ES6的类其实就是<strong>语法糖</strong></li><li><strong>语法糖</strong>：语法糖就是一种便捷写法。简单理解，有两种方法可以实现同样的功能，但是一种写法更加清晰、方便，那么这个方法就是语法糖。</li></ul><h2 id="ES5中的常用新增方法"><a href="#ES5中的常用新增方法" class="headerlink" title="ES5中的常用新增方法"></a>ES5中的常用新增方法</h2><p>ES5中给我们新增了一些方法，可以很方便的操作数组或者字符串，这些方法主要包括：<strong>数组方法</strong>、<strong>字符串方法</strong>、<strong>对象方法</strong></p><h3 id="数组方法"><a href="#数组方法" class="headerlink" title="数组方法"></a>数组方法</h3><h4 id="forEach"><a href="#forEach" class="headerlink" title="forEach()"></a>forEach()</h4><p><code>forEach()</code> 方法对数组的每个元素执行一次给定的函数，可以用于数组遍历</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">currentValue, index, arr</span>))</span></span><br></pre></td></tr></table></figure><h4 id="filter"><a href="#filter" class="headerlink" title="filter()"></a>filter()</h4><p><code>filter()</code> 方法创建一个新数组, 其包含通过所提供函数实现的过滤的所有元素。 </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array.filter(<span class="function"><span class="keyword">function</span>(<span class="params">currentValue, index, arr</span>))</span></span><br></pre></td></tr></table></figure><ul><li><code>filter()</code>方法创建一个新数组，新数组中的元素是通过检查指定数组中符合条件的所有元素，主要用于<strong>筛选数组</strong></li><li>注意它直接返回一个数组，不会影响原来的数组</li><li>在函数中通过<code>return</code>筛选出新数组，如<code>var newArr = arr.filter(function(value) {return value &gt;= 20})</code></li></ul><h4 id="some"><a href="#some" class="headerlink" title="some()"></a>some()</h4><p><code>some()</code> 方法测试数组中是不是至少有1个元素通过了被提供的函数测试。它返回的是一个Boolean类型的值。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array.some(<span class="function"><span class="keyword">function</span>(<span class="params">currentValue, index, arr</span>))</span></span><br></pre></td></tr></table></figure><ul><li><code>some()</code>方法用于检测数组中的元素是否满足指定条件，即查找数组中是否后满足条件的元素</li><li>注意它的返回值是布尔值，如果找到这个元素，就返回true，如果查找不到就返回false</li><li>如果找到第一个满足条件的元素，则终止循环，不再继续查找</li><li>在函数中通过<code>return</code>判断是否满足指定条件，如<code>var hasEven = arr.some(function(value) {return value % 2 == 0})</code></li></ul><h4 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h4><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td><code>currentValue</code></td><td>数组当前项的值</td></tr><tr><td><code>index</code></td><td>数组当前项的索引</td></tr><tr><td><code>arr</code></td><td>数组对象本身</td></tr></tbody></table><h4 id="案例-查询商品"><a href="#案例-查询商品" class="headerlink" title="案例-查询商品"></a>案例-查询商品</h4><p>结构(HTML)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">按照价格查询:</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">"price-from"</span> <span class="attr">placeholder</span>=<span class="string">"最低价"</span>&gt;</span></span><br><span class="line">~</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">"price-to"</span> <span class="attr">placeholder</span>=<span class="string">"最高价"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"搜索"</span> <span class="attr">id</span>=<span class="string">"price-search"</span>&gt;</span></span><br><span class="line">按照商品名称查询:</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">"goods-name"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"查询"</span> <span class="attr">id</span>=<span class="string">"name-search"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>id<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>产品名称<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>价格<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tbody</span>&gt;</span><span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><p>样式(CSS)</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">table</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">border-collapse</span>: collapse;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">20px</span> auto;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">80px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">3px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[type=button]</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: auto;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">td</span>,</span><br><span class="line"><span class="selector-tag">th</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">5px</span> <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>行为(JS)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 动态渲染商品数据</span></span><br><span class="line"><span class="keyword">var</span> data = [&#123;</span><br><span class="line">    id: <span class="number">1</span>,</span><br><span class="line">    name: <span class="string">'小米'</span>,</span><br><span class="line">    price: <span class="number">3999</span></span><br><span class="line">&#125;, &#123;</span><br><span class="line">    id: <span class="number">2</span>,</span><br><span class="line">    name: <span class="string">'oppo'</span>,</span><br><span class="line">    price: <span class="number">2999</span></span><br><span class="line">&#125;, &#123;</span><br><span class="line">    id: <span class="number">3</span>,</span><br><span class="line">    name: <span class="string">'荣耀'</span>,</span><br><span class="line">    price: <span class="number">1299</span></span><br><span class="line">&#125;, &#123;</span><br><span class="line">    id: <span class="number">4</span>,</span><br><span class="line">    name: <span class="string">'华为'</span>,</span><br><span class="line">    price: <span class="number">1999</span></span><br><span class="line">&#125;, &#123;</span><br><span class="line">    id: <span class="number">5</span>,</span><br><span class="line">    name: <span class="string">'红米'</span>,</span><br><span class="line">    price: <span class="number">999</span></span><br><span class="line">&#125;]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> tbody = <span class="built_in">document</span>.querySelector(<span class="string">'tbody'</span>);</span><br><span class="line"><span class="comment">// 动态显示商品数据</span></span><br><span class="line">showData(data);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">showData</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">    tbody.innerHTML = <span class="string">''</span>;</span><br><span class="line">    data.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">value, index, arr</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> tr = <span class="string">'&lt;tr&gt;&lt;td&gt;'</span> + value.id + <span class="string">'&lt;/td&gt;&lt;td&gt;'</span> + value.name + <span class="string">'&lt;/td&gt;&lt;td&gt;'</span> + value.price + <span class="string">'&lt;/td&gt;&lt;/tr&gt;'</span></span><br><span class="line">        tbody.insertAdjacentHTML(<span class="string">"beforeend"</span>, tr);</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 按照价格查询商品</span></span><br><span class="line"><span class="keyword">var</span> priceSearch = <span class="built_in">document</span>.getElementById(<span class="string">'price-search'</span>)</span><br><span class="line">priceSearch.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> priceFrom = <span class="built_in">document</span>.getElementById(<span class="string">'price-from'</span>).value;</span><br><span class="line">    <span class="keyword">var</span> priceTo = <span class="built_in">document</span>.getElementById(<span class="string">'price-to'</span>).value;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">Number</span>(priceFrom) &gt; <span class="built_in">Number</span>(priceTo) || <span class="built_in">isNaN</span>(priceFrom) || <span class="built_in">isNaN</span>(priceTo)) &#123;</span><br><span class="line">        showData(data);</span><br><span class="line">        alert(<span class="string">'请输入正确的价格区间!'</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!priceFrom &amp;&amp; !priceTo) &#123;<span class="comment">// 价格区间都不填入的时候显示全部数据</span></span><br><span class="line">        showData(data);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> filterData = data.filter(<span class="function"><span class="keyword">function</span> (<span class="params">value</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> value.price &gt;= priceFrom &amp;&amp; value.price &lt;= priceTo</span><br><span class="line">        &#125;)</span><br><span class="line">        showData(filterData);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 按照商品名称查询</span></span><br><span class="line"><span class="keyword">var</span> nameSearch = <span class="built_in">document</span>.getElementById(<span class="string">'name-search'</span>);</span><br><span class="line">nameSearch.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> goodsName = <span class="built_in">document</span>.getElementById(<span class="string">'goods-name'</span>).value;</span><br><span class="line">    <span class="keyword">if</span> (goodsName) &#123;</span><br><span class="line">        <span class="keyword">var</span> filterData = data.filter(<span class="function"><span class="keyword">function</span> (<span class="params">value</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> value.name.indexOf(goodsName) !== <span class="number">-1</span>;</span><br><span class="line">        &#125;)</span><br><span class="line">        showData(filterData);</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        showData(data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果</p><p><img src= /img/loading.gif data-src="https://gitee.com/code-ape/blogImage/raw/master/img/js-goods-search.gif" alt="js-goods-search"></p><h3 id="字符串方法"><a href="#字符串方法" class="headerlink" title="字符串方法"></a>字符串方法</h3><h4 id="trim"><a href="#trim" class="headerlink" title="trim()"></a>trim()</h4><p><code>trim()</code>方法会从一个字符串的两端删除空白字符</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">str.trim()</span><br></pre></td></tr></table></figure><p><code>trim()</code>方法并不影响原字符串本身，它返回的是一个新的字符串</p><h3 id="对象方法"><a href="#对象方法" class="headerlink" title="对象方法"></a>对象方法</h3><h4 id="Object-keys"><a href="#Object-keys" class="headerlink" title="Object.keys()"></a>Object.keys()</h4><p><code>Object.keys()</code> 方法会返回一个由一个给定对象的自身<strong>可枚举属性</strong>组成的数组</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Object.keys(obj)</span><br></pre></td></tr></table></figure><ul><li>效果类似 <code>for..in</code></li><li>返回一个有属性名组成的数组</li></ul><h4 id="Object-defineProperty"><a href="#Object-defineProperty" class="headerlink" title="Object.defineProperty()"></a>Object.defineProperty()</h4><p><code>Object.defineProperty()</code>定义对象中新属性或修改原有的属性</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Object</span>.defineProperty(obj, prop, descriptor)</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td><code>obj</code></td><td>必需，目标对象</td></tr><tr><td><code>prop</code></td><td>必需，需定义或修改的属性的名字</td></tr><tr><td><code>descriptor</code></td><td>必需，目标属性所拥有的特性</td></tr></tbody></table><p><code>Object.defineProperty()</code>第三个参数<code>descriptor</code>说明：以对象形式{}书写</p><ul><li><code>value</code>：设置属性的值，默认为<code>undefined</code></li><li><code>writable</code>：值是否可以重写。<code>true | false</code>，默认为<code>false</code></li><li><code>enumerable</code>：目标属性是否可以被枚举。<code>true | false</code>，默认为<code>false</code></li><li><code>configurable</code>：目标属性是否可以被删除或是否可以再次修改特性<code>descriptor</code>。<code>true | false</code>，默认为<code>false</code></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;  &lt;em&gt;『 注 : 本笔记摘自视频 &lt;a href=&quot;https://www.bilibili.com/video/BV1Kt411w7MP&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;javaScript进阶面向对象ES6&lt;/a&gt;，如有侵权,请联系删除。』&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://www.hardape.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JavaScript" scheme="https://www.hardape.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="https://www.hardape.top/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>17-JS的高级进阶-面向对象</title>
    <link href="https://www.hardape.top/article/2d383f1.html"/>
    <id>https://www.hardape.top/article/2d383f1.html</id>
    <published>2020-05-07T23:57:41.000Z</published>
    <updated>2020-05-22T13:41:29.339Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>  <em>『 注 : 本笔记摘自视频 <a href="https://www.bilibili.com/video/BV1Kt411w7MP" target="_blank" rel="noopener">javaScript进阶面向对象ES6</a>，如有侵权,请联系删除。』</em></p></blockquote><a id="more"></a><h2 id="面向对象编程"><a href="#面向对象编程" class="headerlink" title="面向对象编程"></a>面向对象编程</h2><h3 id="面向过程编程"><a href="#面向过程编程" class="headerlink" title="面向过程编程"></a>面向过程编程</h3><p>面向过程编程(<strong>POP，Process Oriented Progamming</strong>)就是分析出解决问题所需要的步骤，然后用函数把这些步骤一步一步实现，使用的时候再一个一个地依次调用。</p><h3 id="面向对象编程-1"><a href="#面向对象编程-1" class="headerlink" title="面向对象编程"></a>面向对象编程</h3><ul><li>面向对象(<strong>OOP，Object Oriented Progamming</strong>)是把一个事务分解成一个个对象，然后由对象之间分工与合作。</li><li>面向对象的特性：<strong>封装性</strong>、<strong>继承性</strong>、<strong>多态性</strong></li></ul><h3 id="面向过程和面向对象的对比"><a href="#面向过程和面向对象的对比" class="headerlink" title="面向过程和面向对象的对比"></a>面向过程和面向对象的对比</h3><h4 id="面向过程"><a href="#面向过程" class="headerlink" title="面向过程"></a>面向过程</h4><ul><li>优点：性能比面向对象高，适合和硬件联系和紧密的程序，例如单片机就采用面向过程编程。</li><li>缺点：没有面向对象易维护、易复用、易扩展。</li></ul><h4 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h4><ul><li>优点：易维护、易复用、易扩展，由于面向对象有封装、继承、多态的特性，可以设计出低耦合的系统，使系统更加灵活，更加易于维护</li><li>缺点：性能比面向过程低</li></ul><h2 id="ES6中的类和对象"><a href="#ES6中的类和对象" class="headerlink" title="ES6中的类和对象"></a>ES6中的类和对象</h2><h3 id="面向对象的思维特点"><a href="#面向对象的思维特点" class="headerlink" title="面向对象的思维特点"></a>面向对象的思维特点</h3><ul><li>抽取(抽象)对象共用的属性和行为组织(封装)成一个类(模板)</li><li>对类进行实例化，获取类的对象</li></ul><h3 id="对象-object"><a href="#对象-object" class="headerlink" title="对象(object)"></a>对象(object)</h3><ul><li>在现实生活中，万物皆对象，对象是一个具体的事物，例如，一本书、一辆汽车、一个人可以是”对象”，一个数据库、一张网页、一个远程服务器的连接也可以是”对象”。</li><li>在JavaScript中，对象是一组<strong>无序的相关属性和方法的集合</strong>，所有的事物都是对象，例如字符串、数值、数组、函数等。</li><li>对象是由<strong>属性</strong>和<strong>方法</strong>组成的。</li><li>属性：事物的特征，在对象中用属性来表示(常用名词表示)</li><li>方法：事物的行为，在对象中用方法来表示(常用动词表示)</li></ul><h3 id="类-class"><a href="#类-class" class="headerlink" title="类(class)"></a>类(class)</h3><ul><li>在ES6中新增加了类的概念，可以使用<strong>class</strong>关键字声明一个类，之后以这个类来实例化对象。</li><li>类抽象了对象的公共部分，它泛指某一大类。</li><li>对象特指一个，通过类实例化一个具体的对象。</li></ul><h3 id="创建类"><a href="#创建类" class="headerlink" title="创建类"></a>创建类</h3><h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">name</span> </span>&#123;</span><br><span class="line">    <span class="comment">// class body</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="创建实例"><a href="#创建实例" class="headerlink" title="创建实例"></a>创建实例</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> xx = <span class="keyword">new</span> name();</span><br></pre></td></tr></table></figure><ul><li>注意：类必须使用<strong>new</strong>实例化对象</li></ul><h3 id="类constructor构造函数"><a href="#类constructor构造函数" class="headerlink" title="类constructor构造函数"></a>类constructor构造函数</h3><p><code>constructor()</code>方法是类的构造函数(默认方法)，<strong>用于传递参数，返回实例对象</strong>，通过new命令生成对象实例时，自动调用该方法，如果没有显示定义，类内部会自动创建一个空构造器<code>constructor()</code>。</p><h4 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建学生类并定构造器</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>(sname, sage) &#123;</span><br><span class="line">        <span class="keyword">this</span>.sname = sname;</span><br><span class="line">        <span class="keyword">this</span>.sage = sage;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 利用构造方法实例化对象</span></span><br><span class="line"><span class="keyword">var</span> codeApe = <span class="keyword">new</span> Student(<span class="string">"辛猿毅码"</span>,<span class="number">18</span>);</span><br></pre></td></tr></table></figure><h3 id="类添加方法"><a href="#类添加方法" class="headerlink" title="类添加方法"></a>类添加方法</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建学生类并定于构造器</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>(sname, sage) &#123;</span><br><span class="line">        <span class="keyword">this</span>.sname = sname;</span><br><span class="line">        <span class="keyword">this</span>.sage = sage;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 类添加方法</span></span><br><span class="line">    code() &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.sname + <span class="string">'秃头中...'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    study(subject) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.sname + <span class="string">"上"</span> + subject + <span class="string">"课划水中..."</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 利用构造方法实例化对象</span></span><br><span class="line"><span class="keyword">var</span> codeApe = <span class="keyword">new</span> Student(<span class="string">"辛猿毅码"</span>,<span class="number">18</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用对象方法</span></span><br><span class="line">codeApe.code();</span><br><span class="line">codeApe.study(<span class="string">"高数"</span>);</span><br></pre></td></tr></table></figure><ul><li>类中的方法不需要写<code>function</code>关键字</li><li>多个类方法之间不能添加逗号分隔</li></ul><h3 id="类的继承"><a href="#类的继承" class="headerlink" title="类的继承"></a>类的继承</h3><p>子类可以继承父类的一些<strong>属性</strong>和<strong>方法</strong>，在JS中使用<strong>extends</strong>关键字实现继承。</p><h4 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Father</span> </span>&#123;<span class="comment">// 父类</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Son</span> <span class="keyword">extends</span> <span class="title">Father</span> </span>&#123;<span class="comment">// 子类继承父类</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>继承中，如果实例化子类输出一个方法，先看子类中有没有该方法，如果有就执行子类的方法；如果没有，就取查找父类中有没有该方法，如果父类中有，就执行(<strong>就近原则</strong>)</li></ul><h3 id="super关键字"><a href="#super关键字" class="headerlink" title="super关键字"></a>super关键字</h3><p><strong>super</strong>关键字用于访问和调用对象父类上的函数。可以调用父类的构造函数，也可以调用父类的普通函数。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 调用父类的构造函数</span></span><br><span class="line"><span class="keyword">super</span>([pram1, pram2, ...])</span><br><span class="line"><span class="comment">// 调用父类的普通函数</span></span><br><span class="line"><span class="keyword">super</span>.函数名([pram1, pram2, ...])</span><br></pre></td></tr></table></figure><ul><li>注意：子类在构造函数中使用<code>super</code>，必须放到<code>this</code>前面(必须先调用父类的构造方法，再使用子类的构造方法)</li></ul><h3 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h3><ul><li>在ES6中类没有变量提升，所以必须先定义类，才能通过类实例化对象。</li><li>类里面的共有的属性和方法要添加<code>this</code>使用和调用</li><li><code>constructor</code>里面的<code>this</code>指向的是创建的实例对象，方法里面的<code>this</code>指向这个方法的调用者</li></ul><h2 id="面向对象案例-Tab栏"><a href="#面向对象案例-Tab栏" class="headerlink" title="面向对象案例-Tab栏"></a>面向对象案例-Tab栏</h2><h3 id="功能需求"><a href="#功能需求" class="headerlink" title="功能需求"></a>功能需求</h3><ol><li>点击tab栏，可以实现切换效果</li><li>点击+号，可以添加tab项和内容项</li><li>点击x号，可以删除当前的tab项和内容项</li><li>双击tab项文字或内容文字，可以修改里面的文字内容</li></ol><h3 id="知识点补充"><a href="#知识点补充" class="headerlink" title="知识点补充"></a>知识点补充</h3><h4 id="双击禁止选定文字"><a href="#双击禁止选定文字" class="headerlink" title="双击禁止选定文字"></a>双击禁止选定文字</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.getSelection ? <span class="built_in">window</span>.getSelection().removeAllRanges() : <span class="built_in">document</span>.selection.empty();</span><br></pre></td></tr></table></figure><h3 id="结构-HTML"><a href="#结构-HTML" class="headerlink" title="结构(HTML)"></a>结构(HTML)</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>JS面向对象-标签页<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"tabsbox"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">"tabsnav"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"li-current"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h4</span>&gt;</span>测试1<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span>&gt;</span>×<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h4</span>&gt;</span>测试2<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span>&gt;</span>×<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h4</span>&gt;</span>测试3<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span>&gt;</span>×<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tabadd"</span>&gt;</span>+<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tabscon"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">"sec-current"</span>&gt;</span>测试1<span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">section</span>&gt;</span>测试2<span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">section</span>&gt;</span>测试3<span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="样式-CSS"><a href="#样式-CSS" class="headerlink" title="样式(CSS)"></a>样式(CSS)</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">h2</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">20px</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">ul</span> &#123;</span><br><span class="line">    <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">h2</span> &#123;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#tabsbox</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">900px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">3px</span> solid <span class="number">#50cdf8</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#tabsbox</span> <span class="selector-tag">input</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">70%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">80%</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#tabsbox</span> <span class="selector-tag">nav</span> <span class="selector-class">.tabadd</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">13px</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">18px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">18px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#50cdf8</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#50cdf8</span>;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#tabsbox</span> <span class="selector-tag">nav</span> <span class="selector-class">.tabadd</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#50cdf8</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#tabsbox</span> <span class="selector-tag">nav</span> <span class="selector-tag">ul</span> &#123;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#tabsbox</span> <span class="selector-tag">nav</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">border-right</span>: <span class="number">2px</span> solid <span class="number">#50cdf8</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.li-current</span> &#123;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">3px</span> solid <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">999</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#tabsbox</span> <span class="selector-tag">nav</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#tabsbox</span> <span class="selector-tag">nav</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: right;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">border-bottom-left-radius</span>: <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#90e0fa</span>;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#tabsbox</span> <span class="selector-tag">nav</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">span</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#50cdf8</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.tabscon</span> &#123;</span><br><span class="line">    <span class="attribute">border-top</span>: <span class="number">2px</span> solid <span class="number">#50cdf8</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">350px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.tabscon</span> <span class="selector-tag">section</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.sec-current</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="行为-JS"><a href="#行为-JS" class="headerlink" title="行为(JS)"></a>行为(JS)</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用面向对象动态完成标签页</span></span><br><span class="line"><span class="keyword">var</span> that;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Tab</span> </span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>(id) &#123;</span><br><span class="line">        that = <span class="keyword">this</span>;</span><br><span class="line">        <span class="comment">// 获取元素</span></span><br><span class="line">        <span class="keyword">this</span>.main = <span class="built_in">document</span>.getElementById(id);</span><br><span class="line">        <span class="keyword">this</span>.addBtn = <span class="keyword">this</span>.main.querySelector(<span class="string">'.tabadd'</span>);</span><br><span class="line">        <span class="keyword">this</span>.nav = <span class="keyword">this</span>.main.querySelector(<span class="string">'.tabsnav'</span>);</span><br><span class="line">        <span class="keyword">this</span>.con = <span class="keyword">this</span>.main.querySelector(<span class="string">'.tabscon'</span>);</span><br><span class="line">        <span class="keyword">this</span>.init();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 获取更新的HTML节点</span></span><br><span class="line">    getUpdatedNode() &#123;</span><br><span class="line">        <span class="keyword">this</span>.navLis = <span class="keyword">this</span>.nav.querySelectorAll(<span class="string">'li'</span>);</span><br><span class="line">        <span class="keyword">this</span>.conSecs = <span class="keyword">this</span>.con.querySelectorAll(<span class="string">'section'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 初始化获取各个HTML元素并注册事件</span></span><br><span class="line">    init() &#123;</span><br><span class="line">        <span class="keyword">this</span>.getUpdatedNode();</span><br><span class="line">        <span class="keyword">this</span>.addBtn.onclick = <span class="keyword">this</span>.addTab;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>.navLis.length; i++) &#123;</span><br><span class="line">            <span class="keyword">this</span>.navLis[i].index = i;</span><br><span class="line">            <span class="keyword">this</span>.navLis[i].onclick = <span class="keyword">this</span>.toggleTab;</span><br><span class="line">            <span class="keyword">this</span>.navLis[i].querySelector(<span class="string">'span'</span>).onclick = <span class="keyword">this</span>.removeTab;</span><br><span class="line">            <span class="keyword">this</span>.navLis[i].querySelector(<span class="string">'h4'</span>).ondblclick = <span class="keyword">this</span>.editTab;</span><br><span class="line">            <span class="keyword">this</span>.conSecs[i].ondblclick = <span class="keyword">this</span>.editTab;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 清除标签导航栏和内容的类名</span></span><br><span class="line">    clearClass() &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>.navLis.length; i++) &#123;</span><br><span class="line">            <span class="keyword">this</span>.navLis[i].className = <span class="string">''</span>;</span><br><span class="line">            <span class="keyword">this</span>.conSecs[i].className = <span class="string">''</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 切换标签页功能</span></span><br><span class="line">    toggleTab() &#123;</span><br><span class="line">        that.clearClass();</span><br><span class="line">        <span class="keyword">this</span>.className = <span class="string">'li-current'</span>;</span><br><span class="line">        that.conSecs[<span class="keyword">this</span>.index].className = <span class="string">'sec-current'</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 添加标签页功能</span></span><br><span class="line">    addTab() &#123;</span><br><span class="line">        that.clearClass();</span><br><span class="line">        <span class="keyword">var</span> length = that.navLis.length + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">var</span> li = <span class="string">'&lt;li class="li-current"&gt;&lt;h4&gt;未命名-'</span> + length + <span class="string">'&lt;/h4&gt;&lt;span&gt;×&lt;/span&gt;&lt;/li&gt;'</span>;</span><br><span class="line">        <span class="keyword">var</span> sec = <span class="string">'&lt;section class="sec-current"&gt;空白页-'</span> + length + <span class="string">'&lt;/section&gt;'</span>;</span><br><span class="line">        that.nav.querySelector(<span class="string">'ul'</span>).insertAdjacentHTML(<span class="string">'beforeend'</span>, li);</span><br><span class="line">        that.con.insertAdjacentHTML(<span class="string">'beforeend'</span>, sec);</span><br><span class="line">        that.init();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 删除标签页功能</span></span><br><span class="line">    removeTab(e) &#123;</span><br><span class="line">        e.stopPropagation();<span class="comment">// 阻止冒泡 防止触发li 的切换点击事件</span></span><br><span class="line">        <span class="keyword">var</span> index = <span class="keyword">this</span>.parentNode.index</span><br><span class="line">        that.navLis[index].remove();</span><br><span class="line">        that.conSecs[index].remove();</span><br><span class="line">        that.init();</span><br><span class="line">        <span class="keyword">if</span> (that.nav.querySelector(<span class="string">'.li-current'</span>)) <span class="keyword">return</span>;</span><br><span class="line">        that.navLis[that.navLis.length - <span class="number">1</span>] &amp;&amp; that.navLis[that.navLis.length - <span class="number">1</span>].click();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 修改标签页功能</span></span><br><span class="line">    editTab() &#123;</span><br><span class="line">        <span class="comment">// 双击禁止选定文字</span></span><br><span class="line">        <span class="built_in">window</span>.getSelection ? <span class="built_in">window</span>.getSelection().removeAllRanges() : <span class="built_in">document</span>.selection.empty();</span><br><span class="line">        <span class="keyword">var</span> str = <span class="keyword">this</span>.innerHTML;</span><br><span class="line">        <span class="keyword">this</span>.innerHTML = <span class="string">'&lt;input type = "text" /&gt;'</span>;</span><br><span class="line">        <span class="keyword">var</span> input = <span class="keyword">this</span>.children[<span class="number">0</span>];</span><br><span class="line">        input.value = str;</span><br><span class="line">        input.select();<span class="comment">// 文本框里面的文字处于选定状态</span></span><br><span class="line">        input.onblur = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.parentNode.innerHTML = <span class="keyword">this</span>.value;</span><br><span class="line">        &#125;;</span><br><span class="line">        input.onkeyup = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (e.keyCode === <span class="number">13</span>) &#123;</span><br><span class="line">                <span class="comment">// 手动调用表单失去焦点事件  不需要鼠标离开操作</span></span><br><span class="line">                <span class="keyword">this</span>.blur();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Tab(<span class="string">'tabsbox'</span>);</span><br></pre></td></tr></table></figure><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p><img src= /img/loading.gif data-src="https://gitee.com/code-ape/blogImage/raw/master/img/js-tab.gif" alt="js-tab"></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;  &lt;em&gt;『 注 : 本笔记摘自视频 &lt;a href=&quot;https://www.bilibili.com/video/BV1Kt411w7MP&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;javaScript进阶面向对象ES6&lt;/a&gt;，如有侵权,请联系删除。』&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://www.hardape.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JavaScript" scheme="https://www.hardape.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="https://www.hardape.top/tags/JavaScript/"/>
    
      <category term="OOP" scheme="https://www.hardape.top/tags/OOP/"/>
    
      <category term="ES6" scheme="https://www.hardape.top/tags/ES6/"/>
    
  </entry>
  
  <entry>
    <title>04-jQuery案例</title>
    <link href="https://www.hardape.top/article/bc683c32.html"/>
    <id>https://www.hardape.top/article/bc683c32.html</id>
    <published>2020-04-23T05:04:13.000Z</published>
    <updated>2020-05-22T13:32:59.153Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>  <em>『 注 : 本笔记摘自视频 <a href="https://www.bilibili.com/video/BV1a4411w7Gx" target="_blank" rel="noopener">jQuery网页开发案例精讲</a>，如有侵权,请联系删除。』</em></p></blockquote><a id="more"></a><h2 id="仿新浪下拉菜单"><a href="#仿新浪下拉菜单" class="headerlink" title="仿新浪下拉菜单"></a>仿新浪下拉菜单</h2><h3 id="结构-HTML"><a href="#结构-HTML" class="headerlink" title="结构(HTML)"></a>结构(HTML)</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 仿新浪下拉菜单 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"sina-nav"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>微博<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"sina-subnav"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>私信<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>评论<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>@我<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>博客<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"sina-subnav"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>博客评论<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>未读提醒<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>邮箱<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"sina-subnav"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>免费邮箱<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>VIP邮箱<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>企业邮箱<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="样式-CSS"><a href="#样式-CSS" class="headerlink" title="样式(CSS)"></a>样式(CSS)</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ul</span> &#123;</span><br><span class="line">    <span class="attribute">list-style</span>: none;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#4c4c4c</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.sina-nav</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">border-top</span>: <span class="number">3px</span> solid <span class="number">#ff8500</span>;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#edeef0</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fcfcfc</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.sina-nav</span>&gt;<span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.sina-nav</span>&gt;<span class="selector-tag">li</span>&gt;<span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">18px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.sina-nav</span>&gt;<span class="selector-tag">li</span>&gt;<span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#edeef0</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ff8400</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.sina-subnav</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.sina-subnav</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#fecc5b</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">border-top</span>: none;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">29px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">29px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">18px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.sina-subnav</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff5da</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#e67902</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="行为-JQuery"><a href="#行为-JQuery" class="headerlink" title="行为(JQuery)"></a>行为(JQuery)</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// // 鼠标经过</span></span><br><span class="line">    <span class="comment">// $(".sina-nav&gt;li").mouseover(function() &#123;</span></span><br><span class="line">    <span class="comment">//     $(this).children("ul").slideDown(300);</span></span><br><span class="line">    <span class="comment">// &#125;)</span></span><br><span class="line">    <span class="comment">// $(".sina-nav&gt;li").mouseout(function() &#123;</span></span><br><span class="line">    <span class="comment">//     $(this).children("ul").slideUp(300);</span></span><br><span class="line">    <span class="comment">// &#125;)</span></span><br><span class="line">    <span class="comment">// $('.sina-nav&gt;li').hover(function () &#123;</span></span><br><span class="line">    <span class="comment">//     $(this).children("ul").slideDown(300);</span></span><br><span class="line">    <span class="comment">// &#125;, function () &#123;</span></span><br><span class="line">    <span class="comment">//     $(this).children("ul").slideUp(300);</span></span><br><span class="line">    <span class="comment">// &#125;);</span></span><br><span class="line">    $(<span class="string">'.sina-nav&gt;li'</span>).hover(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// stop方法必须写到动画的前面</span></span><br><span class="line">        $(<span class="keyword">this</span>).children(<span class="string">"ul"</span>).stop().slideToggle(<span class="number">300</span>);</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><img src= /img/loading.gif data-src="https://gitee.com/code-ape/blogImage/raw/master/img/jquery-sina-nav.gif" alt="jquery-sina-nav" style="zoom: 80%;" /><h2 id="仿淘宝精品服饰"><a href="#仿淘宝精品服饰" class="headerlink" title="仿淘宝精品服饰"></a>仿淘宝精品服饰</h2><h3 id="结构-HTML-1"><a href="#结构-HTML-1" class="headerlink" title="结构(HTML)"></a>结构(HTML)</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 仿淘宝精品服饰 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"taobao-clothes"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>女靴<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>雪地靴<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>连衣裙<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>呢大衣<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>毛衣<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>男棉服<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>铅笔裤<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>羽绒服<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>牛仔裤<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/女靴.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/雪地靴.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/连衣裙.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/呢大衣.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/毛衣.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/男棉服.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/铅笔裤.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/羽绒服.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/牛仔裤.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="样式-CSS-1"><a href="#样式-CSS-1" class="headerlink" title="样式(CSS)"></a>样式(CSS)</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">ul</span> &#123;</span><br><span class="line">    <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.taobao-clothes</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">250px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">248px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid pink;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.nav</span>,</span><br><span class="line"><span class="selector-class">.content</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.nav</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(img/li.jpg) repeat-x;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">48px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">27px</span>;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid pink;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">27px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.nav</span> <span class="selector-tag">li</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(img/abg.gif);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.content</span> &#123;</span><br><span class="line">    <span class="attribute">border-left</span>: <span class="number">1px</span> solid pink;</span><br><span class="line">    <span class="attribute">border-right</span>: <span class="number">1px</span> solid pink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="行为-JQuery-1"><a href="#行为-JQuery-1" class="headerlink" title="行为(JQuery)"></a>行为(JQuery)</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">".nav li"</span>).mouseover(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 获取当前li的索引号</span></span><br><span class="line">        <span class="keyword">var</span> index = $(<span class="keyword">this</span>).index();</span><br><span class="line">        <span class="comment">// 链式编程</span></span><br><span class="line">        $(<span class="string">".content div"</span>).eq(index).show().siblings().hide();</span><br><span class="line"></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="built_in">console</span>.log($(<span class="string">'div'</span>).css(<span class="string">'width'</span>));</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="效果-1"><a href="#效果-1" class="headerlink" title="效果"></a>效果</h3><img src= /img/loading.gif data-src="https://gitee.com/code-ape/blogImage/raw/master/img/jquery-taobao-clothes.gif" alt="jquery-taobao-clothes" style="zoom: 80%;" /><h2 id="仿京东tab栏切换"><a href="#仿京东tab栏切换" class="headerlink" title="仿京东tab栏切换"></a>仿京东tab栏切换</h2><h3 id="结构-HTML-2"><a href="#结构-HTML-2" class="headerlink" title="结构(HTML)"></a>结构(HTML)</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 仿京东商品信息tab栏切换 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"goods-tab"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"current"</span>&gt;</span>商品介绍<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>规格与包装<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>售后保障<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>商品评价(143万+)<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>手机社区<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span> <span class="attr">style</span>=<span class="string">"display: block;"</span>&gt;</span></span><br><span class="line">    商品介绍模块</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">    规格与包装模块</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">    售后保障模块</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">    商品评价模块</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">    手机社区模块</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="样式-CSS-2"><a href="#样式-CSS-2" class="headerlink" title="样式(CSS)"></a>样式(CSS)</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ul</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.goods-tab</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">38px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">38px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#f7f7f7</span>;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#e4393c</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.goods-tab</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">25px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.goods-tab</span> <span class="selector-tag">li</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.current</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#e4393c</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="行为-JQuery-2"><a href="#行为-JQuery-2" class="headerlink" title="行为(JQuery)"></a>行为(JQuery)</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">'.goods-tab&gt;li'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 得到当前li的索引号</span></span><br><span class="line">        <span class="keyword">var</span> index = $(<span class="keyword">this</span>).index();</span><br><span class="line">        $(<span class="keyword">this</span>).addClass(<span class="string">'current'</span>).siblings().removeClass(<span class="string">'current'</span>);</span><br><span class="line">        $(<span class="string">'.item'</span>).eq(index).show().siblings(<span class="string">'.item'</span>).hide();</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="效果-2"><a href="#效果-2" class="headerlink" title="效果"></a>效果</h3><img src= /img/loading.gif data-src="https://gitee.com/code-ape/blogImage/raw/master/img/jquery-jd-tab.gif" alt="jquery-jd-tab" style="zoom: 80%;" /><h2 id="照片墙高亮显示"><a href="#照片墙高亮显示" class="headerlink" title="照片墙高亮显示"></a>照片墙高亮显示</h2><h3 id="结构-HTML-3"><a href="#结构-HTML-3" class="headerlink" title="结构(HTML)"></a>结构(HTML)</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"highlight"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/01.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/02.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/03.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/04.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/05.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/06.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="样式-CSS-3"><a href="#样式-CSS-3" class="headerlink" title="样式(CSS)"></a>样式(CSS)</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#000</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">ul</span> &#123;</span><br><span class="line">    <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.highlight</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">630px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">394px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.highlight</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.highlight</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">10px</span> <span class="number">10px</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.highlight</span> <span class="selector-tag">li</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="行为-JQuery-3"><a href="#行为-JQuery-3" class="headerlink" title="行为(JQuery)"></a>行为(JQuery)</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">'.highlight li'</span>).hover(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="keyword">this</span>).siblings().stop().fadeTo(<span class="number">300</span>, <span class="number">.5</span>);</span><br><span class="line">    &#125;, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="keyword">this</span>).siblings().stop().fadeTo(<span class="number">300</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="效果-3"><a href="#效果-3" class="headerlink" title="效果"></a>效果</h3><img src= /img/loading.gif data-src="https://gitee.com/code-ape/blogImage/raw/master/img/jquery-photo-highlight.gif" alt="jquery-photo-highlight" style="zoom: 67%;" /><h2 id="仿王者荣耀手风琴动画"><a href="#仿王者荣耀手风琴动画" class="headerlink" title="仿王者荣耀手风琴动画"></a>仿王者荣耀手风琴动画</h2><h3 id="结构-HTML-4"><a href="#结构-HTML-4" class="headerlink" title="结构(HTML)"></a>结构(HTML)</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"pvp"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/m1.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"small"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/m.png"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"big"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/l1.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"small"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/l.png"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"big"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/c1.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"small"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/c.png"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"big"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/w1.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"small"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/w.png"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"big"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/z1.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"small"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/z.png"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"big"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/h1.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"small"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/h.png"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"big"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/t1.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"small"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/t.png"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"big"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="样式-CSS-4"><a href="#样式-CSS-4" class="headerlink" title="样式(CSS)"></a>样式(CSS)</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">ul</span> &#123;</span><br><span class="line">    <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.pvp</span> &#123;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(img/bg.png);</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">852px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.pvp</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">69px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">69px</span>;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.small</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">69px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">69px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.big</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">224px</span>;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.pvp</span> <span class="selector-tag">li</span><span class="selector-pseudo">:first-child</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">224px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.pvp</span> <span class="selector-tag">li</span><span class="selector-pseudo">:first-child</span> <span class="selector-class">.big</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.pvp</span> <span class="selector-tag">li</span><span class="selector-pseudo">:first-child</span> <span class="selector-class">.small</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="行为-JQuery-4"><a href="#行为-JQuery-4" class="headerlink" title="行为(JQuery)"></a>行为(JQuery)</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">".pvp li"</span>).mouseenter(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 当前li宽度变为224px，同时里面的小图片淡出，大图片淡入</span></span><br><span class="line">        $(<span class="keyword">this</span>).stop().animate(&#123;</span><br><span class="line">            width: <span class="number">224</span></span><br><span class="line">        &#125;).find(<span class="string">".small"</span>).stop().fadeOut().siblings(<span class="string">".big"</span>).stop().fadeIn();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 当其他li宽度变为64px，同时里面的大图片淡出，小图片淡入</span></span><br><span class="line">        $(<span class="keyword">this</span>).siblings().stop().animate(&#123;</span><br><span class="line">            width: <span class="number">69</span></span><br><span class="line">        &#125;).find(<span class="string">".big"</span>).stop().fadeOut().siblings(<span class="string">".small"</span>).stop().fadeIn();;</span><br><span class="line"></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="效果-4"><a href="#效果-4" class="headerlink" title="效果"></a>效果</h3><p><img src= /img/loading.gif data-src="https://gitee.com/code-ape/blogImage/raw/master/img/jQuery-pvp.gif" alt="jQuery-pvp"></p><h2 id="商品购物车综合"><a href="#商品购物车综合" class="headerlink" title="商品购物车综合"></a>商品购物车综合</h2><h3 id="功能需求"><a href="#功能需求" class="headerlink" title="功能需求"></a>功能需求</h3><ul><li>商品选择、全选/取消选择框功能</li><li>商品数量加减功能</li><li>统计单类商品小计功能</li><li>统计选中商品件数、商品总价功能</li><li>商品单类商品删除、删除选中商品、清空购物车功能</li></ul><h3 id="结构-HTML-5"><a href="#结构-HTML-5" class="headerlink" title="结构(HTML)"></a>结构(HTML)</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 商品购物车综合案例 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"goods"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">thead</span> <span class="attr">id</span>=<span class="string">"goodsHead"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"checkAll"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>商品<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>单价<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>数量<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>小计<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tbody</span> <span class="attr">id</span>=<span class="string">"goodsList"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"check"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>纯棉T恤<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"price"</span>&gt;</span>￥39.50<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"sub"</span>&gt;</span>-<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"num"</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"add"</span>&gt;</span>+<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"sum"</span>&gt;</span>￥39.50<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"remove"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"check"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>牛皮腰带<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"price"</span>&gt;</span>￥29.90<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"sub"</span>&gt;</span>-<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"num"</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"add"</span>&gt;</span>+<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"sum"</span>&gt;</span>￥29.90<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"remove"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"check"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>千寻护目镜<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"price"</span>&gt;</span>￥22.00<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"sub"</span>&gt;</span>-<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"num"</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"add"</span>&gt;</span>+<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"sum"</span>&gt;</span>￥22.00<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"remove"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"check"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>魅可(MAC)经典唇膏<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"price"</span>&gt;</span>￥155.00<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"sub"</span>&gt;</span>-<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"num"</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"add"</span>&gt;</span>+<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"sum"</span>&gt;</span>￥155.00<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"remove"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tfoot</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> &gt;</span>共 <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"goodsSumNum"</span>&gt;</span>0<span class="tag">&lt;/<span class="name">span</span>&gt;</span> 件<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"removeSelected"</span>&gt;</span>删除选中的商品<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"removeAll"</span>&gt;</span>清空购物车<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span>总价 <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"goodsSumPrice"</span>&gt;</span>￥0.00<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>结算<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tfoot</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="样式-CSS-5"><a href="#样式-CSS-5" class="headerlink" title="样式(CSS)"></a>样式(CSS)</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span> &#123;</span><br><span class="line">    <span class="attribute">outline</span>: none;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.goods</span> &#123;</span><br><span class="line">    <span class="attribute">border-collapse</span>: collapse;</span><br><span class="line">    <span class="attribute">border-spacing</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid orange;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.goods</span> <span class="selector-tag">th</span>,</span><br><span class="line"><span class="selector-class">.goods</span> <span class="selector-tag">td</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid orange;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#404060</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.goods</span> <span class="selector-tag">th</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ff692f</span>;</span><br><span class="line">    <span class="attribute">font</span>: bold <span class="number">16px</span> <span class="string">"微软雅黑"</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.goods</span> <span class="selector-tag">td</span> &#123;</span><br><span class="line">    <span class="attribute">font</span>: <span class="number">14px</span> <span class="string">"微软雅黑"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-id">#goodsList</span> <span class="selector-tag">tr</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fafafa</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#goodsList</span> <span class="selector-tag">tr</span> <span class="selector-tag">td</span><span class="selector-pseudo">:first-child</span> &#123;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#goodsList</span> <span class="selector-class">.sub</span>,</span><br><span class="line"><span class="selector-id">#goodsList</span> <span class="selector-class">.add</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#goodsList</span> <span class="selector-class">.num</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">45px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.goods</span> <span class="selector-tag">tfoot</span> <span class="selector-tag">tr</span> <span class="selector-tag">td</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.goodsSumNum</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">700</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ff4400</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.goodsSumPrice</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">18px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">700</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ff4400</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.goods</span> <span class="selector-tag">tfoot</span> <span class="selector-tag">tr</span> <span class="selector-tag">td</span><span class="selector-pseudo">:last-child</span> &#123;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ff692f</span>;</span><br><span class="line">    <span class="attribute">font</span>: bold <span class="number">16px</span> <span class="string">"微软雅黑"</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.goods</span> <span class="selector-tag">tfoot</span> <span class="selector-tag">tr</span> <span class="selector-tag">td</span><span class="selector-pseudo">:last-child</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ff4400</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.goods</span> <span class="selector-tag">tfoot</span> <span class="selector-tag">tr</span> <span class="selector-tag">td</span><span class="selector-pseudo">:nth-child(4)</span> &#123;</span><br><span class="line">    <span class="attribute">text-align</span>: right;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.removeSelected</span><span class="selector-pseudo">:hover</span>,</span><br><span class="line"><span class="selector-class">.removeAll</span><span class="selector-pseudo">:hover</span>,</span><br><span class="line"><span class="selector-class">.remove</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ff4400</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.remove</span> &#123;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="行为-JQuery-5"><a href="#行为-JQuery-5" class="headerlink" title="行为(JQuery)"></a>行为(JQuery)</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 当全选框的状态改变时，其他选择框状态与其一致</span></span><br><span class="line">    $(<span class="string">".checkAll"</span>).change(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="string">".check"</span>).prop(<span class="string">"checked"</span>, $(<span class="keyword">this</span>).prop(<span class="string">"checked"</span>));</span><br><span class="line"></span><br><span class="line">    &#125;)</span><br><span class="line">    $(<span class="string">".check"</span>).change(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 检查全选按钮的状态</span></span><br><span class="line">        checkoutCheckAll()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 封装函数计算选中商品的总数量   </span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">calSumNum</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> sumNum = <span class="number">0</span>;</span><br><span class="line">        $(<span class="string">".check:checked"</span>).each(<span class="function"><span class="keyword">function</span> (<span class="params">index, domEle</span>) </span>&#123;</span><br><span class="line">            sumNum += <span class="built_in">parseInt</span>($(domEle).parents(<span class="string">"tr"</span>).find(<span class="string">".num"</span>).val());</span><br><span class="line">        &#125;)</span><br><span class="line">        $(<span class="string">".goodsSumNum"</span>).text(sumNum);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 封装函数计算选中商品的总金额</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">calSumPrice</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> sumPrice = <span class="number">0</span>;</span><br><span class="line">        $(<span class="string">".check:checked"</span>).each(<span class="function"><span class="keyword">function</span> (<span class="params">index, domEle</span>) </span>&#123;</span><br><span class="line">            sumPrice += <span class="built_in">parseFloat</span>($(domEle).parents(<span class="string">"tr"</span>).find(<span class="string">".sum"</span>).text().substr(<span class="number">1</span>));</span><br><span class="line">        &#125;)</span><br><span class="line">        $(<span class="string">".goodsSumPrice"</span>).text(<span class="string">"￥"</span> + sumPrice.toFixed(<span class="number">2</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 当选择框的状态改变时，计算总数量和总金额</span></span><br><span class="line">    $(<span class="string">":checkbox"</span>).change(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 计算选中总数量</span></span><br><span class="line">        calSumNum();</span><br><span class="line">        <span class="comment">// 计算选中商品的总金额</span></span><br><span class="line">        calSumPrice();</span><br><span class="line">        <span class="comment">// 改变背景颜色</span></span><br><span class="line">        setCheckBgc();</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 数量增减 */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 数量减少</span></span><br><span class="line">    $(<span class="string">"#goodsList .sub"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> num = $(<span class="keyword">this</span>).siblings(<span class="string">".num"</span>).val();</span><br><span class="line">        <span class="comment">// </span></span><br><span class="line">        <span class="keyword">if</span> (num == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        num--;</span><br><span class="line">        $(<span class="keyword">this</span>).siblings(<span class="string">".num"</span>).val(num);</span><br><span class="line">        <span class="comment">// 小计计算</span></span><br><span class="line">        <span class="keyword">var</span> price = $(<span class="keyword">this</span>).parent().siblings(<span class="string">".price"</span>).text().substr(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> sum = (num * price).toFixed(<span class="number">2</span>);</span><br><span class="line">        $(<span class="keyword">this</span>).parent().siblings(<span class="string">".sum"</span>).text(<span class="string">"￥"</span> + sum);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 计算选中总数量</span></span><br><span class="line">        calSumNum();</span><br><span class="line">        <span class="comment">// 计算选中商品的总金额</span></span><br><span class="line">        calSumPrice();</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 数量增加</span></span><br><span class="line">    $(<span class="string">"#goodsList .add"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> num = $(<span class="keyword">this</span>).siblings(<span class="string">".num"</span>).val();</span><br><span class="line">        num++;</span><br><span class="line">        $(<span class="keyword">this</span>).siblings(<span class="string">".num"</span>).val(num);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 小计计算</span></span><br><span class="line">        <span class="keyword">var</span> price = $(<span class="keyword">this</span>).parent().siblings(<span class="string">".price"</span>).text().substr(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">var</span> sum = (num * price).toFixed(<span class="number">2</span>);</span><br><span class="line">        $(<span class="keyword">this</span>).parent().siblings(<span class="string">".sum"</span>).text(<span class="string">"￥"</span> + sum);</span><br><span class="line">        <span class="comment">// 计算选中总数量</span></span><br><span class="line">        calSumNum();</span><br><span class="line">        <span class="comment">// 计算选中商品的总金额</span></span><br><span class="line">        calSumPrice();</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 数量改变时计算单个商品的小计</span></span><br><span class="line">    $(<span class="string">"#goodsList .num"</span>).change(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 当用户输入的值不大于0或不为数字时强制将数量设置为1</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">isNaN</span>($(<span class="keyword">this</span>).val()));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ($(<span class="keyword">this</span>).val() &lt;= <span class="number">0</span> || <span class="built_in">isNaN</span>($(<span class="keyword">this</span>).val())) &#123;</span><br><span class="line">            $(<span class="keyword">this</span>).val(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 小计计算</span></span><br><span class="line">        <span class="keyword">var</span> num = $(<span class="keyword">this</span>).val();</span><br><span class="line">        <span class="keyword">var</span> price = $(<span class="keyword">this</span>).parent().siblings(<span class="string">".price"</span>).text().substr(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">var</span> sum = (num * price).toFixed(<span class="number">2</span>);</span><br><span class="line">        $(<span class="keyword">this</span>).parent().siblings(<span class="string">".sum"</span>).text(<span class="string">"￥"</span> + sum);</span><br><span class="line">        <span class="comment">// 计算选中总数量</span></span><br><span class="line">        calSumNum();</span><br><span class="line">        <span class="comment">// 计算选中商品的总金额</span></span><br><span class="line">        calSumPrice();</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 单类商品删除</span></span><br><span class="line">    $(<span class="string">".remove"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="keyword">this</span>).parent().remove();</span><br><span class="line">        <span class="comment">// 计算选中总数量</span></span><br><span class="line">        calSumNum();</span><br><span class="line">        <span class="comment">// 计算选中商品的总金额</span></span><br><span class="line">        calSumPrice();</span><br><span class="line">        <span class="comment">// 检查全选按钮的状态</span></span><br><span class="line">        checkoutCheckAll();</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 删除选中的商品</span></span><br><span class="line">    $(<span class="string">".removeSelected"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="string">".check:checked"</span>).parents(<span class="string">'tr'</span>).remove();</span><br><span class="line">        <span class="comment">// 计算选中总数量</span></span><br><span class="line">        calSumNum();</span><br><span class="line">        <span class="comment">// 计算选中商品的总金额</span></span><br><span class="line">        calSumPrice();</span><br><span class="line">        <span class="comment">// 检查全选按钮的状态</span></span><br><span class="line">        checkoutCheckAll();</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 清空购物车</span></span><br><span class="line">    $(<span class="string">".removeAll"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="string">"#goodsList"</span>).empty();</span><br><span class="line">        <span class="comment">// 计算选中总数量</span></span><br><span class="line">        calSumNum();</span><br><span class="line">        <span class="comment">// 计算选中商品的总金额</span></span><br><span class="line">        calSumPrice();</span><br><span class="line">        <span class="comment">// 检查全选按钮的状态</span></span><br><span class="line">        checkoutCheckAll();</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 检查全选按钮的状态</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">checkoutCheckAll</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 使用:checked选择器选择已选择的选择器并加以判断</span></span><br><span class="line">        <span class="keyword">if</span> ($(<span class="string">".check:checked"</span>).length == $(<span class="string">".check"</span>).length &amp;&amp; $(<span class="string">".check"</span>).length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            $(<span class="string">".checkAll"</span>).prop(<span class="string">"checked"</span>, <span class="literal">true</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $(<span class="string">".checkAll"</span>).prop(<span class="string">"checked"</span>, <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置选中行的背景颜色</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">setCheckBgc</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="string">".check"</span>).parents(<span class="string">"tr"</span>).css(<span class="string">"background-color"</span>, <span class="string">"#fafafa"</span>);</span><br><span class="line">        $(<span class="string">".check:checked"</span>).parents(<span class="string">"tr"</span>).css(<span class="string">"background-color"</span>, <span class="string">"#fff4e8"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="效果-5"><a href="#效果-5" class="headerlink" title="效果"></a>效果</h3><p><img src= /img/loading.gif data-src="https://gitee.com/code-ape/blogImage/raw/master/img/jQuery-shopping-car.gif" alt="jQuery-shopping-car"></p><h2 id="仿淘宝侧边栏电梯特效综合"><a href="#仿淘宝侧边栏电梯特效综合" class="headerlink" title="仿淘宝侧边栏电梯特效综合"></a>仿淘宝侧边栏电梯特效综合</h2><h3 id="功能需求-1"><a href="#功能需求-1" class="headerlink" title="功能需求"></a>功能需求</h3><ul><li>滚动条滚动至一定位置显示返回顶部按钮，否则隐藏</li><li>点击返回顶部按钮返回顶部</li><li>侧边栏点击滚动条滚动到指定模块</li><li>滚动条滚动侧边栏响应模块高亮显示</li></ul><h3 id="结构-HTML-6"><a href="#结构-HTML-6" class="headerlink" title="结构(HTML)"></a>结构(HTML)</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 仿淘宝固定侧边栏电梯特效 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"w"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"top"</span>&gt;</span>top<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"banner"</span>&gt;</span>banner<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 内容模块 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/goods.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/shopping.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/good-store.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/live.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/life.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/play.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/shihui.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/love.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"footer"</span>&gt;</span>footer<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 侧边栏 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"fixed-tool"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"shopping-goods current lift"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>爱逛好货<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"store-live lift"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>好店直播<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"quality-feature lift"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>品质特色<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"benefit-hot lift"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>实惠热卖<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"guess-love lift"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>猜你喜欢<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"return-top"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>顶部<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"feed-back"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>反馈<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"tip-off"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>暴恐举报<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="样式-CSS-6"><a href="#样式-CSS-6" class="headerlink" title="样式(CSS)"></a>样式(CSS)</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#3c3c3c</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">ul</span> &#123;</span><br><span class="line">    <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#f4f4f4</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.w</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">1190px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.top</span> &#123;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ff8600</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.banner</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ffc229</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.content</span>&gt;<span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">500px</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.content</span> <span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">text-align</span>: left;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.content</span>&gt;<span class="selector-tag">div</span><span class="selector-pseudo">:nth-child(n+4)</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#31ba98</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.content</span>&gt;<span class="selector-tag">div</span><span class="selector-pseudo">:nth-child(3)</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.left</span>,</span><br><span class="line"><span class="selector-class">.right</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">49%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.left</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.right</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.left</span> <span class="selector-tag">img</span>,</span><br><span class="line"><span class="selector-class">.right</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">24px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.footer</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">500px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#997aff</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.fixed-tool</span> &#123;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">548px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">600px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">7px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.fixed-tool</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.fixed-tool</span> <span class="selector-tag">li</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">-webkit-linear-gradient</span>(left top, #ff971b, #ff5000);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.fixed-tool</span> <span class="selector-tag">li</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid transparent <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.fixed-tool</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#efefef</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.fixed-tool</span> <span class="selector-tag">li</span><span class="selector-pseudo">:last-child</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.shopping-goods</span> <span class="selector-tag">a</span>,</span><br><span class="line"><span class="selector-class">.guess-love</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ff4400</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.store-live</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ff0055</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.quality-feature</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#8d7afb</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.return-top</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.benefit-hot</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#a8c001</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.current</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">-webkit-linear-gradient</span>(left top, #ff971b, #ff5000);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.current</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid transparent <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="行为-JQuery-6"><a href="#行为-JQuery-6" class="headerlink" title="行为(JQuery)"></a>行为(JQuery)</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> toolTop = $(<span class="string">".fixed-tool"</span>).offset().top;</span><br><span class="line">    <span class="keyword">var</span> contentTop = $(<span class="string">".content"</span>).offset().top;</span><br><span class="line">    <span class="comment">// 节流阀/互斥锁，当点击侧边栏li时不需要执行页面滚动事件里面电梯导航的样式改变代码</span></span><br><span class="line">    <span class="keyword">var</span> flag = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    $(<span class="built_in">window</span>).scroll(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 显示/隐藏返回顶部按钮并固定侧边栏</span></span><br><span class="line">        <span class="keyword">if</span> ($(<span class="built_in">window</span>).scrollTop() &gt;= contentTop) &#123;</span><br><span class="line">            $(<span class="string">".return-top"</span>).show();</span><br><span class="line">            $(<span class="string">".fixed-tool"</span>).css(&#123;</span><br><span class="line">                position: <span class="string">"fixed"</span>,</span><br><span class="line">                top: <span class="number">30</span></span><br><span class="line">            &#125;)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $(<span class="string">".return-top"</span>).hide();</span><br><span class="line">            $(<span class="string">".fixed-tool"</span>).css(&#123;</span><br><span class="line">                position: <span class="string">"absolute"</span>,</span><br><span class="line">                top: toolTop</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 侧边栏中的电梯导航样式改变</span></span><br><span class="line">        <span class="keyword">if</span> ($(<span class="built_in">window</span>).scrollTop() &lt;= $(<span class="string">".content&gt;div:first"</span>).offset().top) &#123;</span><br><span class="line">            $(<span class="string">".fixed-tool .lift:first"</span>).addClass(<span class="string">"current"</span>).siblings(<span class="string">".lift"</span>).removeClass(<span class="string">"current"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">            $(<span class="string">".content&gt;div"</span>).each(<span class="function"><span class="keyword">function</span> (<span class="params">index, domEle</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> ($(<span class="built_in">window</span>).scrollTop() &gt;= $(domEle).offset().top) &#123;</span><br><span class="line">                    $(<span class="string">".fixed-tool .lift"</span>).eq(index).addClass(<span class="string">"current"</span>).siblings(<span class="string">".lift"</span>).removeClass(<span class="string">"current"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 点击侧边栏中的电梯导航</span></span><br><span class="line">    $(<span class="string">".fixed-tool .lift"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 点击后关闭节流阀</span></span><br><span class="line">        flag = <span class="literal">false</span>;</span><br><span class="line">        <span class="comment">// 改变样式</span></span><br><span class="line">        $(<span class="keyword">this</span>).addClass(<span class="string">"current"</span>).siblings(<span class="string">".lift"</span>).removeClass(<span class="string">"current"</span>);</span><br><span class="line">        <span class="comment">// 获取索引号滑动到指定模块</span></span><br><span class="line">        <span class="keyword">var</span> index = $(<span class="keyword">this</span>).index();</span><br><span class="line">        <span class="keyword">var</span> top = $(<span class="string">".content&gt;div"</span>).eq(index).offset().top;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 在滚动动画完成后在回调函数中打开节流阀</span></span><br><span class="line">        $(<span class="string">"html,body"</span>).stop().animate(&#123;</span><br><span class="line">            scrollTop: top</span><br><span class="line">        &#125;, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            flag = <span class="literal">true</span>;</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 点击返回顶部按钮返回顶部</span></span><br><span class="line">    $(<span class="string">".return-top"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        flag = <span class="literal">false</span>;</span><br><span class="line">        $(<span class="string">"html,body"</span>).stop().animate(&#123;</span><br><span class="line">            scrollTop: <span class="number">0</span></span><br><span class="line">        &#125;, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            flag = <span class="literal">true</span>;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="效果-6"><a href="#效果-6" class="headerlink" title="效果"></a>效果</h3><img src= /img/loading.gif data-src="https://gitee.com/code-ape/blogImage/raw/master/img/jquery-taobao-fixed-tool.gif" alt="jquery-taobao-fixed-tool" style="zoom:80%;" /><h2 id="仿todolist综合"><a href="#仿todolist综合" class="headerlink" title="仿todolist综合"></a>仿todolist综合</h2><blockquote><p>  todolist网站：<a href="http://www.todolist.cn/" target="_blank" rel="noopener">http://www.todolist.cn/</a></p></blockquote><h3 id="功能需求-2"><a href="#功能需求-2" class="headerlink" title="功能需求"></a>功能需求</h3><p>最简单的待办事件列表——关闭浏览器待办事件列表不会消失</p><h3 id="结构-HTML-7"><a href="#结构-HTML-7" class="headerlink" title="结构(HTML)"></a>结构(HTML)</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"w"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"todo-input"</span>&gt;</span>ToDoList<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">"todo-input"</span> <span class="attr">placeholder</span>=<span class="string">"键入Enter添加ToDo"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">"w"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span></span><br><span class="line">        正在进行</span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"todo-count"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span></span><br><span class="line">        已经完成</span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"done-count"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">footer</span> <span class="attr">class</span>=<span class="string">"w"</span>&gt;</span></span><br><span class="line">    Copyright © 2014 todolist.cn</span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span> <span class="attr">class</span>=<span class="string">"clear"</span>&gt;</span>clear<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="样式-CSS-7"><a href="#样式-CSS-7" class="headerlink" title="样式(CSS)"></a>样式(CSS)</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#cdcdcd</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">ul</span>,</span><br><span class="line"><span class="selector-tag">ol</span> &#123;</span><br><span class="line">    <span class="attribute">list-style</span>: none;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#999</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">outline</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.w</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">620px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">header</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#323232</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">header</span> <span class="selector-tag">label</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">24px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ddd</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">header</span> <span class="selector-tag">input</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">60%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">24px</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">text-indent</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">1px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.24</span>), <span class="number">0</span> <span class="number">1px</span> <span class="number">6px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.45</span>) inset</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">section</span> <span class="selector-tag">h2</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#e6e6fa</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#66667e</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">section</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">32px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">32px</span>;</span><br><span class="line">    <span class="attribute">border-left</span>: <span class="number">5px</span> solid <span class="number">#629a9c</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">45px</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">1px</span> <span class="number">2px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.07</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">section</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">border-left</span>: <span class="number">5px</span> solid <span class="number">#999</span>;</span><br><span class="line">    <span class="attribute">opacity</span>: .<span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">section</span> <span class="selector-tag">li</span> <span class="selector-tag">input</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">22px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">22px</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">2px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">section</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">4px</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">6px</span> double <span class="number">#FFF</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">section</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#66667e</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">footer</span> &#123;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#666</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">footer</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="行为-JQuery-7"><a href="#行为-JQuery-7" class="headerlink" title="行为(JQuery)"></a>行为(JQuery)</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 渲染页面</span></span><br><span class="line">    load();</span><br><span class="line">    <span class="comment">// 监听输入框的键盘事件，键入Enter存储数据并渲染页面</span></span><br><span class="line">    $(<span class="string">"#todo-input"</span>).on(<span class="string">"keydown"</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (e.keyCode === <span class="number">13</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> ($(<span class="keyword">this</span>).val() === <span class="string">""</span>) &#123;</span><br><span class="line">                alert(<span class="string">"请输入toDo事项"</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// 获取数据</span></span><br><span class="line">                <span class="keyword">var</span> data = getData();</span><br><span class="line">                data.push(&#123; <span class="attr">title</span>: $(<span class="keyword">this</span>).val(), <span class="attr">done</span>: <span class="literal">false</span> &#125;)</span><br><span class="line">                <span class="comment">// 保存数据到localStorage</span></span><br><span class="line">                saveData(data);</span><br><span class="line">                <span class="comment">// 渲染页面</span></span><br><span class="line">                load();</span><br><span class="line">                <span class="comment">// 清空文本框数据</span></span><br><span class="line">                $(<span class="keyword">this</span>).val(<span class="string">""</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">// 删除事件监听</span></span><br><span class="line">    $(<span class="string">"ol,ul"</span>).on(<span class="string">"click"</span>, <span class="string">"a"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> index = $(<span class="keyword">this</span>).attr(<span class="string">"id"</span>);</span><br><span class="line">        <span class="keyword">var</span> data = getData();</span><br><span class="line">        data.splice(index, <span class="number">1</span>);</span><br><span class="line">        saveData(data);</span><br><span class="line">        load();</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">// 使用事件委托监听事项的checkbox的点击事件</span></span><br><span class="line">    $(<span class="string">"ol,ul"</span>).on(<span class="string">"click"</span>, <span class="string">"input"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> index = $(<span class="keyword">this</span>).siblings(<span class="string">"a"</span>).attr(<span class="string">"id"</span>);</span><br><span class="line">        <span class="keyword">var</span> data = getData();</span><br><span class="line">        data[index].done = $(<span class="keyword">this</span>).prop(<span class="string">"checked"</span>);</span><br><span class="line">        saveData(data);</span><br><span class="line">        load();</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 清空事件监听</span></span><br><span class="line">    $(<span class="string">".clear"</span>).on(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> data = [];</span><br><span class="line">        saveData(data);</span><br><span class="line">        load();</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 存数据到localStorage</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">saveData</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">    localStorage.setItem(<span class="string">"todoList"</span>, <span class="built_in">JSON</span>.stringify(data));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取localStorage中的数据</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getData</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> data = localStorage.getItem(<span class="string">"todoList"</span>)</span><br><span class="line">    <span class="keyword">if</span> (data) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">JSON</span>.parse(data);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> [];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将localStorage中的数据渲染到页面中</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">load</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> datas = getData();</span><br><span class="line">    <span class="comment">// 记录正在进行和已经完成事项的个数</span></span><br><span class="line">    <span class="keyword">var</span> todoCount = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">var</span> doneCount = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 渲染页面前先清空页面数据</span></span><br><span class="line">    $(<span class="string">"ul,ol"</span>).empty();</span><br><span class="line">    $.each(datas, <span class="function"><span class="keyword">function</span> (<span class="params">index, ele</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (ele.done) &#123;</span><br><span class="line">            <span class="comment">// 渲染至已经完成模块</span></span><br><span class="line">            <span class="keyword">var</span> li = $(<span class="string">"&lt;li&gt;&lt;input type='checkbox' checked&gt;&lt;p&gt;"</span> + ele.title + <span class="string">"&lt;/p&gt;&lt;a href='javascript:;' id='"</span> + index + <span class="string">"'&gt;×&lt;/a&gt;&lt;/li&gt;"</span>)</span><br><span class="line">            $(<span class="string">"ul"</span>).prepend(li);</span><br><span class="line">            doneCount++;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 渲染至正在进行模块</span></span><br><span class="line">            <span class="keyword">var</span> li = $(<span class="string">"&lt;li&gt;&lt;input type='checkbox'&gt;&lt;p&gt;"</span> + ele.title + <span class="string">"&lt;/p&gt;&lt;a href='javascript:;' id='"</span> + index + <span class="string">"'&gt;×&lt;/a&gt;&lt;/li&gt;"</span>)</span><br><span class="line">            $(<span class="string">"ol"</span>).prepend(li);</span><br><span class="line">            todoCount++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">// 渲染事项个数</span></span><br><span class="line">    $(<span class="string">"#todo-count"</span>).text(todoCount);</span><br><span class="line">    $(<span class="string">"#done-count"</span>).text(doneCount);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="效果-7"><a href="#效果-7" class="headerlink" title="效果"></a>效果</h3><img src= /img/loading.gif data-src="https://gitee.com/code-ape/blogImage/raw/master/img/jquery-todolist.gif" alt="jquery-todolist" style="zoom:67%;" />]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;  &lt;em&gt;『 注 : 本笔记摘自视频 &lt;a href=&quot;https://www.bilibili.com/video/BV1a4411w7Gx&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;jQuery网页开发案例精讲&lt;/a&gt;，如有侵权,请联系删除。』&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://www.hardape.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="jQuery" scheme="https://www.hardape.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/jQuery/"/>
    
    
      <category term="jQuery" scheme="https://www.hardape.top/tags/jQuery/"/>
    
  </entry>
  
  <entry>
    <title>03-jQuery事件</title>
    <link href="https://www.hardape.top/article/b4f786d0.html"/>
    <id>https://www.hardape.top/article/b4f786d0.html</id>
    <published>2020-04-23T05:02:39.000Z</published>
    <updated>2020-05-22T13:32:31.988Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>  <em>『 注 : 本笔记摘自视频 <a href="https://www.bilibili.com/video/BV1a4411w7Gx" target="_blank" rel="noopener">jQuery网页开发案例精讲</a>，如有侵权,请联系删除。』</em></p></blockquote><a id="more"></a><h1 id="jQuery事件"><a href="#jQuery事件" class="headerlink" title="jQuery事件"></a>jQuery事件</h1><h2 id="this"><a href="#this" class="headerlink" title="$(this)"></a>$(this)</h2><p>在jQuery事件中，<code>$(this)</code>指向接收事件的<strong>jQuery对象</strong></p><h2 id="jQuery事件注册"><a href="#jQuery事件注册" class="headerlink" title="jQuery事件注册"></a>jQuery事件注册</h2><h3 id="单个事件注册"><a href="#单个事件注册" class="headerlink" title="单个事件注册"></a>单个事件注册</h3><h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">element.事件([<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;事件处理程序&#125;])</span><br></pre></td></tr></table></figure><ul><li>事件名称和原生JS的事件名称(不加on)基本一致，如<code>click</code>、<code>mouseover</code>、<code>mouseout</code>、<code>blur</code>、<code>focus</code>、<code>change</code>、<code>keydown</code>、<code>keyup</code>、<code>resize</code>、<code>scroll</code>等</li><li>jQuery事件注册不能给动态创建的元素注册事件。</li><li>当省略触发事件时，调用相应事件方法会自动触发该事件。如<code>$(&quot;button&quot;).click()</code></li></ul><h4 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"button"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    alert(<span class="string">"Hello World!"</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="jQuery事件处理"><a href="#jQuery事件处理" class="headerlink" title="jQuery事件处理"></a>jQuery事件处理</h2><h3 id="on-绑定事件"><a href="#on-绑定事件" class="headerlink" title="on()绑定事件"></a>on()绑定事件</h3><p><code>on()</code>方法用于在匹配元素上绑定一个或多个事件的事件处理函数。</p><h4 id="语法1"><a href="#语法1" class="headerlink" title="语法1"></a>语法1</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">element.on(events, [selector][, data], fn)</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td><code>events</code></td><td>一个或多个用<strong>空格</strong>分隔的事件类型，如<code>&quot;click&quot;</code>、<code>&quot;focus&quot;</code>等</td></tr><tr><td><code>selector</code></td><td>一个选择器字符串，用于过滤出被选中的元素中能触发事件的后代元素。如果选择器是 <code>null</code> 或者忽略了该选择器，那么被选中的元素总是能触发事件。</td></tr><tr><td><code>data</code></td><td>当一个事件被触发时，要传递给事件处理函数的<code>event.data</code>,该传递的数据可以是对象类型，比如<code>{name:&quot;张三&quot;,age:18}</code>。</td></tr><tr><td><code>fn</code></td><td>事件被触发时，执行的函数。若该函数只是要执行<code>return false</code>的话，那么该参数位置可以直接简写成 <code>false</code>。</td></tr></tbody></table><h4 id="语法2"><a href="#语法2" class="headerlink" title="语法2"></a>语法2</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">element.on( events [, selector ] [, data ] )</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td><code>events</code></td><td>一个对象，键是由一个或多个由空格分隔的事件类型及可选的名字空间，值是这些事件类型所对应的事件处理函数。</td></tr><tr><td><code>selector</code></td><td>一个选择器字符串，用于过滤出被选中的元素中能触发事件的后代元素。如果选择器是 <code>null</code> 或者忽略了该选择器，那么被选中的元素总是能触发事件。</td></tr><tr><td><code>data</code></td><td>当一个事件被触发时，要传递给事件处理函数的<code>event.data</code>,该传递的数据可以是对象类型，比如<code>{name:&quot;张三&quot;,age:18}</code>。</td></tr></tbody></table><h4 id="例子-1"><a href="#例子-1" class="headerlink" title="例子"></a>例子</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 第一种形式</span></span><br><span class="line">$(<span class="string">"div"</span>).on(<span class="string">"mouseenter mouseleave"</span>, &#123; <span class="attr">className</span>: <span class="string">"current"</span> &#125;, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">    $(<span class="keyword">this</span>).toggleClass(e.data.className);</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 2. 第二种形式</span></span><br><span class="line">$(<span class="string">"div"</span>).on(&#123;</span><br><span class="line">    mouseenter: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="keyword">this</span>).css(<span class="string">"background"</span>, <span class="string">"skyblue"</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    click: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="keyword">this</span>).css(<span class="string">"background"</span>, <span class="string">"purple"</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    mouseleave: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="keyword">this</span>).css(<span class="string">"background"</span>, <span class="string">"blue"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><ul><li><code>on()</code>方法可以使用<code>selector</code>参数进行事件委派操作</li><li>事件委派：把原来加给子元素身上的绑定事件绑定在父元素身上，就是把事件委派给父元素</li><li>在此之前有<code>bind()</code>、<code>live()</code>、<code>delegate()</code>等方法来处理事件绑定或事件委派，最新版本的请用<code>on</code>代替它们</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 事件委派，click是绑定在ul上，但是触发click事件是ul的子元素li</span></span><br><span class="line">$(<span class="string">"ul"</span>).on(<span class="string">"click"</span>, <span class="string">"li"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    alert(<span class="string">"奥利给"</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li><code>on()</code>方法可以给动态生成的元素绑定事件，而jQuery事件注册的方法不能。</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// on()方法可以给动态生成的元素绑定事件</span></span><br><span class="line">$(<span class="string">"ol"</span>).on(<span class="string">"click"</span>, <span class="string">"li"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    alert(<span class="string">"奥利给"</span>);</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">var</span> li = $(<span class="string">"&lt;li&gt;我是被动态创建的&lt;/li&gt;"</span>);</span><br><span class="line">$(<span class="string">"ol"</span>).append(li);</span><br></pre></td></tr></table></figure><h3 id="off-解绑事件"><a href="#off-解绑事件" class="headerlink" title="off()解绑事件"></a>off()解绑事件</h3><p><code>off()</code>方法可以移除通过<code>on()</code>方法添加的事件处理程序</p><h4 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.off( events [, selector ] [, fn] )</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td><code>events</code></td><td>一个或多个用<strong>空格</strong>分隔的事件类型，如<code>&quot;click&quot;</code>、<code>&quot;focus&quot;</code>等</td></tr><tr><td><code>selector</code></td><td>一个选择器，当绑定事件处理程序时最初传递给 <code>.on()</code>的那个。</td></tr><tr><td><code>fn</code></td><td>事件处理程序函数以前附加事件名，或特殊值<code>false</code>.</td></tr></tbody></table><h4 id="例子-2"><a href="#例子-2" class="headerlink" title="例子"></a>例子</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 解绑p元素所有事件处理程序</span></span><br><span class="line">$(<span class="string">"p"</span>).off();</span><br><span class="line"><span class="comment">// 解绑p元素上的点击事件</span></span><br><span class="line">$(<span class="string">"p"</span>).off(<span class="string">"click"</span>);</span><br><span class="line"><span class="comment">// 解绑事件委托/委派</span></span><br><span class="line">$(<span class="string">"ul"</span>).off(<span class="string">"click"</span>, <span class="string">"li"</span>);</span><br></pre></td></tr></table></figure><h3 id="one-触发一次事件"><a href="#one-触发一次事件" class="headerlink" title="one()触发一次事件"></a>one()触发一次事件</h3><ul><li><code>one()</code>为元素的事件添加处理函数。处理函数在每个元素上每种事件类型最<strong>多执行一次</strong>。</li><li><code>one()</code>的语法和参数与<code>on()</code>基本一致</li></ul><h4 id="语法1-1"><a href="#语法1-1" class="headerlink" title="语法1"></a>语法1</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">element.one(events, [selector][, data], fn)</span><br></pre></td></tr></table></figure><h4 id="语法2-1"><a href="#语法2-1" class="headerlink" title="语法2"></a>语法2</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">element.one( events [, selector ] [, data ] )</span><br></pre></td></tr></table></figure><h3 id="自动触发事件"><a href="#自动触发事件" class="headerlink" title="自动触发事件"></a>自动触发事件</h3><p>有些事件希望自动触发，比如轮播图自动播放功能和点击右侧按钮一致，可以利用定时器自动触发右侧按钮点击事件，不必鼠标点击触发。</p><h4 id="使用事件名"><a href="#使用事件名" class="headerlink" title="使用事件名()"></a>使用事件名()</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">element.事件()</span><br></pre></td></tr></table></figure><ul><li>使用<code>element.事件()</code>会自动触发该事件，如<code>$(&quot;button&quot;).click()</code></li></ul><h4 id="使用trigger"><a href="#使用trigger" class="headerlink" title="使用trigger()"></a>使用trigger()</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">element.trigger(<span class="string">"事件"</span>)</span><br></pre></td></tr></table></figure><ul><li>使用<code>element.trigger(&quot;事件&quot;)</code>会自动触发该事件，如<code>$(&quot;button&quot;).trigger(&quot;click&quot;)</code></li></ul><h4 id="使用triggerHandler"><a href="#使用triggerHandler" class="headerlink" title="使用triggerHandler()"></a>使用triggerHandler()</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">element.triggerHandler(<span class="string">"事件"</span>)</span><br></pre></td></tr></table></figure><ul><li>使用<code>element.triggerHandler(&quot;事件&quot;)</code>会自动触发该事件，如<code>$(&quot;button&quot;).triggerHandler(&quot;click&quot;)</code></li><li><code>.triggerHandler()</code> 方法并不会触发事件的默认行为</li><li><code>.trigger()</code> 会影响所有与 jQuery 对象相匹配的元素，而 <code>.triggerHandler()</code> 仅影响第一个匹配到的元素。</li><li>使用 <code>.triggerHandler()</code> 创建的事件，并不会在 DOM 树中向上冒泡。如果事件没有被目标元素直接处理，那么它就不会进行任何处理。</li></ul><h2 id="jQuery事件对象"><a href="#jQuery事件对象" class="headerlink" title="jQuery事件对象"></a>jQuery事件对象</h2><p>事件被触发，就会有事件对象的产生</p><h3 id="常用的事件对象方法"><a href="#常用的事件对象方法" class="headerlink" title="常用的事件对象方法"></a>常用的事件对象方法</h3><table><thead><tr><th>常用事件对象方法</th><th>说明</th></tr></thead><tbody><tr><td><code>event.preventDefault()</code></td><td>阻止默认行为，也可以在事件函数中使用<code>return false</code>阻止事件的默认行为</td></tr><tr><td><code>event.stopPropagation()</code></td><td>阻止冒泡</td></tr></tbody></table><h1 id="jQuery其他方法"><a href="#jQuery其他方法" class="headerlink" title="jQuery其他方法"></a>jQuery其他方法</h1><h2 id="jQuery对象拷贝"><a href="#jQuery对象拷贝" class="headerlink" title="jQuery对象拷贝"></a>jQuery对象拷贝</h2><p>如果想要把某个对象拷贝(合并)给另外一个对象使用，此时可以使用<code>$.extend()</code>方法</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$.extend([deep], target, object1, [objectN])</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td><code>deep</code></td><td>如果设为<code>true</code>为深拷贝，默认为<code>false</code>浅拷贝</td></tr><tr><td><code>target</code></td><td>要拷贝的目标对象</td></tr><tr><td><code>object1</code></td><td>第一个被合并的对象</td></tr><tr><td><code>objectN</code></td><td>第N个被合并的对象</td></tr></tbody></table><ul><li><strong>浅拷贝</strong>是把被拷贝的对象<strong>复杂数据类型中的地址</strong>拷贝给目标对象，修改目标对象会影响被拷贝对象。</li><li><strong>深拷贝</strong>，完全克隆(<strong>拷贝的是对象</strong>，而不是地址)，修改目标对象不会影响被拷贝对象，如果里面有不冲突的属性，会合并到一起。</li></ul><h2 id="jQuery多库共存"><a href="#jQuery多库共存" class="headerlink" title="jQuery多库共存"></a>jQuery多库共存</h2><h3 id="问题概述"><a href="#问题概述" class="headerlink" title="问题概述"></a>问题概述</h3><p>jQuery使用$作为标识符，随着jQuery的流行，其他js库也会用$作为标识符，这样一起使用会引起冲突，例如自己封装一个$函数：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 封装一个$函数可以实现使用选择器获取指定元素的第一个，使用时会与jQuery冲突</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">$</span>(<span class="params">ele</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">document</span>.querySelector(ele);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="客观需求"><a href="#客观需求" class="headerlink" title="客观需求"></a>客观需求</h3><p>需要一个解决方案，让jQuery和其他的JS库不存在冲突，可以同时存在，这就叫做<strong>多库共存</strong></p><h3 id="jQuery解决方案"><a href="#jQuery解决方案" class="headerlink" title="jQuery解决方案"></a>jQuery解决方案</h3><h4 id="第一种解决方案"><a href="#第一种解决方案" class="headerlink" title="第一种解决方案"></a>第一种解决方案</h4><p>把jQuery代码中的<code>$</code>符号统一改为<code>jQuery</code>，比如<code>jQuery(&quot;div&quot;)</code></p><h4 id="第二种解决方案"><a href="#第二种解决方案" class="headerlink" title="第二种解决方案"></a>第二种解决方案</h4><p>jQuery允许用户使用<code>$.noConflict()</code>或<code>jQuery.noConflict()</code>给jQuery变量自定义新的名称</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 放弃jQuery控制$变量，自定义jQuery变量</span></span><br><span class="line"><span class="keyword">var</span> myJQuery = $.noConflict();</span><br><span class="line"><span class="comment">// 使用自定义的jQuery变量调用jQuery方法</span></span><br><span class="line">myJQuery(<span class="string">"button"</span>).on(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    alert(<span class="string">"淡黄的长裙"</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="jQuery插件"><a href="#jQuery插件" class="headerlink" title="jQuery插件"></a>jQuery插件</h2><ul><li>jQuery功能比较有限，想要更复杂的特效效果，可以借助于jQuery插完成</li><li>注意：这些插件也是依赖于jQuery来完成的，所以必须<strong>先引入jQuery文件</strong>，因此也称为jQuery插件</li></ul><h3 id="jQuery插件常用的网站"><a href="#jQuery插件常用的网站" class="headerlink" title="jQuery插件常用的网站"></a>jQuery插件常用的网站</h3><ul><li><a href="http://www.jq22.com" target="_blank" rel="noopener">jQuery插件库</a></li><li><a href="http://www.htmleaf.com/" target="_blank" rel="noopener">jQuery之家</a>(推荐)</li></ul><h3 id="jQuery插件使用步骤"><a href="#jQuery插件使用步骤" class="headerlink" title="jQuery插件使用步骤"></a>jQuery插件使用步骤</h3><ol><li>引入相关文件(jQuery文件和插件文件)</li><li>复制相关html、css、js(调用插件)</li><li>修改相关结构和参数</li></ol><h3 id="图片懒加载技术"><a href="#图片懒加载技术" class="headerlink" title="图片懒加载技术"></a>图片懒加载技术</h3><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><ul><li>当页面滑动到可视区域时，再显示图片</li><li>图片使用延迟加载可以提高网页加载速度，它也能帮助减轻服务器负载</li></ul><h4 id="图片懒加载插件EasyLazyLoad-js"><a href="#图片懒加载插件EasyLazyLoad-js" class="headerlink" title="图片懒加载插件EasyLazyLoad.js"></a>图片懒加载插件EasyLazyLoad.js</h4><blockquote><p>  详见 <a href="http://www.jq22.com/jquery-info11629" target="_blank" rel="noopener">EasyLazyload.js 超好用js图片延迟加载</a></p></blockquote><ol><li>引入 EasyLazyload.js </li><li>将图片 src 替换为 data-lazy-src，即<code>&lt;img data-lazy-src=&quot;...&quot; /&gt;</code></li><li>调用相关JS代码</li><li>【注意：此时的JS引入文件必须写到DOM元素(图片)的最后面】</li></ol><h3 id="全屏滚动插件fullpage-js"><a href="#全屏滚动插件fullpage-js" class="headerlink" title="全屏滚动插件fullpage.js"></a>全屏滚动插件fullpage.js</h3><blockquote><p>  GitHub地址： <a href="https://github.com/alvarotrigo/fullPage.js" target="_blank" rel="noopener">fullPage.js</a></p><p>  中文翻译网站：<a href="http://www.dowebok.com/demo/2014/77/" target="_blank" rel="noopener">jQuery全屏滚动插件fullPage.js演示</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;  &lt;em&gt;『 注 : 本笔记摘自视频 &lt;a href=&quot;https://www.bilibili.com/video/BV1a4411w7Gx&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;jQuery网页开发案例精讲&lt;/a&gt;，如有侵权,请联系删除。』&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://www.hardape.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="jQuery" scheme="https://www.hardape.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/jQuery/"/>
    
    
      <category term="jQuery" scheme="https://www.hardape.top/tags/jQuery/"/>
    
  </entry>
  
  <entry>
    <title>02-jQuery常用API</title>
    <link href="https://www.hardape.top/article/c69b7a16.html"/>
    <id>https://www.hardape.top/article/c69b7a16.html</id>
    <published>2020-04-23T05:01:25.000Z</published>
    <updated>2020-05-22T13:31:59.363Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>  <em>『 注 : 本笔记摘自视频 <a href="https://www.bilibili.com/video/BV1a4411w7Gx" target="_blank" rel="noopener">jQuery网页开发案例精讲</a>，如有侵权,请联系删除。』</em></p></blockquote><a id="more"></a><blockquote><p>  详见<a href="https://www.jquery123.com/" target="_blank" rel="noopener">jQuery API 中文文档</a></p></blockquote><h2 id="jQuery选择器"><a href="#jQuery选择器" class="headerlink" title="jQuery选择器"></a>jQuery选择器</h2><p>原生JS获取元素方式多且杂，而且兼容性情况不一致，因此jQuery对这些方式进行封装，使获取元素统一标准</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"选择器"</span>)<span class="comment">//里面选择器直接写CSS选择器即可，但是要加引号(单引号双引号都可以)</span></span><br></pre></td></tr></table></figure><h3 id="jQuery基础选择器"><a href="#jQuery基础选择器" class="headerlink" title="jQuery基础选择器"></a>jQuery基础选择器</h3><table><thead><tr><th>名称</th><th>用法</th><th>描述</th></tr></thead><tbody><tr><td>ID选择器</td><td><code>$(&quot;#id&quot;)</code></td><td>获取指定ID的元素</td></tr><tr><td>全选选择器</td><td><code>$(&quot;*&quot;)</code></td><td>匹配所有元素</td></tr><tr><td>类选择器</td><td><code>$(&quot;.class&quot;)</code></td><td>获取同一类class的元素</td></tr><tr><td>标签选择器</td><td><code>$(&quot;div&quot;)</code></td><td>获取统一类名标签的所有元素</td></tr><tr><td>并集选择器</td><td><code>$(&quot;div,p,li&quot;)</code></td><td>获取多个元素</td></tr><tr><td>交集选择器</td><td><code>$(&quot;li.current&quot;)</code></td><td>交集元素</td></tr></tbody></table><h3 id="jQuery层级选择器"><a href="#jQuery层级选择器" class="headerlink" title="jQuery层级选择器"></a>jQuery层级选择器</h3><table><thead><tr><th>名称</th><th>用法</th><th>描述</th></tr></thead><tbody><tr><td>子代选择器</td><td><code>$(&quot;ul&gt;li&quot;)</code></td><td>使用<code>&gt;</code>号，获取亲儿子层级的元素，不会获取孙子层级的元素</td></tr><tr><td>后代选择器</td><td><code>$(&quot;ul li&quot;)</code></td><td>使用空格，代表后代选择器，包括所有孙子层级的元素</td></tr></tbody></table><h3 id="jQuery筛选选择器"><a href="#jQuery筛选选择器" class="headerlink" title="jQuery筛选选择器"></a>jQuery筛选选择器</h3><table><thead><tr><th>语法</th><th>用法</th><th>描述</th></tr></thead><tbody><tr><td><code>:first</code></td><td><code>$(&quot;li:first&quot;)</code></td><td>获取第一个li元素</td></tr><tr><td><code>:last</code></td><td><code>$(&quot;li:last&quot;)</code></td><td>获取最后一个li元素</td></tr><tr><td><code>:eq(index)</code></td><td><code>$(&quot;li:eq(2)&quot;)</code></td><td>从获取到的li元素中选择索引号为2的li元素，索引号从0开始</td></tr><tr><td><code>:odd</code></td><td><code>$(&quot;li:odd&quot;)</code></td><td>从获取到的li元素中选择<strong>索引号为奇数</strong>的li元素</td></tr><tr><td><code>:even</code></td><td><code>$(&quot;li:even&quot;)</code></td><td>从获取到的li元素中选择<strong>索引号为偶数</strong>的li元素</td></tr><tr><td><code>:checked</code></td><td><code>$(&quot;input:checked&quot;)</code></td><td>选取所有被选中的元素（复选框或单选按钮）</td></tr></tbody></table><h2 id="jQuery筛选方法"><a href="#jQuery筛选方法" class="headerlink" title="jQuery筛选方法"></a>jQuery筛选方法</h2><table><thead><tr><th>语法</th><th>用法</th><th>说明</th></tr></thead><tbody><tr><td><code>parent([selector])</code></td><td><code>$(&quot;li&quot;).parent()</code></td><td>查找父级，最近一级的指定选择器的父级元素</td></tr><tr><td><code>parents([selector])</code></td><td><code>$(&quot;li&quot;).parents()</code></td><td>查找指定选择器的祖先级元素</td></tr><tr><td><code>children([selector])</code></td><td><code>$(&quot;ul&quot;).children(&quot;li&quot;)</code></td><td>相当于<code>$(&quot;ul&gt;li&quot;)</code>，查找子代中指定选择器的元素，选择器省略时选择所有子代元素，最近一级(亲儿子)</td></tr><tr><td><code>find([selector])</code></td><td><code>$(&quot;ul&quot;).find(&quot;li&quot;)</code></td><td>相当于<code>$(&quot;ul li&quot;)</code>，查找后代中指定选择器的元素</td></tr><tr><td><code>siblings([selector])</code></td><td><code>$(&quot;.first&quot;).siblings(&quot;li&quot;)</code></td><td>查找兄弟节点中指定选择器的元素，选择器省略时选择所有兄弟元素，不包括自己本身</td></tr><tr><td><code>nextAll([expr])</code></td><td><code>$(&quot;first&quot;).nextAll()</code></td><td>查找当前元素之后所有的同辈元素</td></tr><tr><td><code>prevAll([expr])</code></td><td><code>$(&quot;first&quot;).prevAll()</code></td><td>查找当前元素之前所有的同辈元素</td></tr><tr><td><code>hasClass(class)</code></td><td><code>$(&#39;div&#39;).hasClass(&quot;protected&quot;)</code></td><td>检查当前的元素是否含有某个特定的类名，如果有，则返回true，否则返回false</td></tr><tr><td><code>eq(index)</code></td><td><code>$(&#39;li&#39;).eq(2)</code></td><td>相当于<code>$(&quot;li:eq(2)&quot;)</code>，index从0开始，推荐使用该方法</td></tr></tbody></table><h2 id="jQuery样式操作"><a href="#jQuery样式操作" class="headerlink" title="jQuery样式操作"></a>jQuery样式操作</h2><h3 id="操作css方法"><a href="#操作css方法" class="headerlink" title="操作css方法"></a>操作css方法</h3><p>jQuery可以使用css方法来修改简单元素样式</p><h4 id="获取样式属性值"><a href="#获取样式属性值" class="headerlink" title="获取样式属性值"></a>获取样式属性值</h4><p>参数只写属性名，则是返回属性值</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="keyword">this</span>).css(<span class="string">'color'</span>);</span><br></pre></td></tr></table></figure><h4 id="设置单组样式属性值"><a href="#设置单组样式属性值" class="headerlink" title="设置单组样式属性值"></a>设置单组样式属性值</h4><p>参数是属性名和属性值，逗号分隔，是设置一组样式，属性必须加引号，值如果是数字可以不用跟单位和引号</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="keyword">this</span>).css(<span class="string">"color"</span>, <span class="string">"red"</span>);</span><br></pre></td></tr></table></figure><h4 id="设置多组样式属性值"><a href="#设置多组样式属性值" class="headerlink" title="设置多组样式属性值"></a>设置多组样式属性值</h4><p>参数可以是对象形式，方便设置多组样式。属性名和属性值用冒号隔开，属性名可以不用加引号，但不加引号的属性名遵循<strong>驼峰命名法</strong>。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="keyword">this</span>).css(&#123;</span><br><span class="line">    color: <span class="string">'red'</span>,</span><br><span class="line">    fontSize: <span class="number">20</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="设置类样式"><a href="#设置类样式" class="headerlink" title="设置类样式"></a>设置类样式</h3><p>作用等同于原生JS中的classList，可以操作类样式，<strong>注意操作类里面的参数不加点号</strong></p><h4 id="添加类addClass"><a href="#添加类addClass" class="headerlink" title="添加类addClass"></a>添加类addClass</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="keyword">this</span>).addClass(<span class="string">'current'</span>);</span><br></pre></td></tr></table></figure><h4 id="移除类removeClass"><a href="#移除类removeClass" class="headerlink" title="移除类removeClass"></a>移除类removeClass</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="keyword">this</span>).removeClass(<span class="string">'current'</span>);</span><br></pre></td></tr></table></figure><h4 id="切换类toggleClass"><a href="#切换类toggleClass" class="headerlink" title="切换类toggleClass"></a>切换类toggleClass</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="keyword">this</span>).toggleClass(<span class="string">'current'</span>);</span><br></pre></td></tr></table></figure><h2 id="jQuery隐式迭代"><a href="#jQuery隐式迭代" class="headerlink" title="jQuery隐式迭代"></a>jQuery隐式迭代</h2><ul><li>jQuery遍历内部元素(伪数组形式存储)的过程就称为<strong>隐式迭代</strong></li><li>简单理解：给匹配到的所有元素进行循环遍历，执行相应的方法，而不需要开发者再进行循环，简化操作。</li></ul><h2 id="jQuery链式编程"><a href="#jQuery链式编程" class="headerlink" title="jQuery链式编程"></a>jQuery链式编程</h2><ul><li>链式编程：是将多个操作（多行代码）通过点号”.”链接在一起成为一句代码。</li><li>链式编程是为了节省代码量，看起来更优雅。</li><li>使用链式编程一定要注意是哪个对象执行样式。</li></ul><h2 id="jQuery排他思想"><a href="#jQuery排他思想" class="headerlink" title="jQuery排他思想"></a>jQuery排他思想</h2><ul><li>排他思想：同一组元素，想要某一种元素实现某种样式</li><li>在jQuery中可利用jQuery隐式迭代的特性快速实现排他思想</li><li>实现：当前元素设置样式，其余的兄弟( 利用<code>siblings([selector])</code>   )清除样式</li></ul><h2 id="jQuery效果"><a href="#jQuery效果" class="headerlink" title="jQuery效果"></a>jQuery效果</h2><p>jQuery封装了很多动画效果，如<strong>显示隐藏</strong>、<strong>滑动</strong>、<strong>淡入淡出</strong>、<strong>自定义动画</strong>等等</p><h3 id="显示隐藏效果"><a href="#显示隐藏效果" class="headerlink" title="显示隐藏效果"></a>显示隐藏效果</h3><h4 id="显示语法规范"><a href="#显示语法规范" class="headerlink" title="显示语法规范"></a>显示语法规范</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show([speed,[easing,[fn]]])</span><br></pre></td></tr></table></figure><h4 id="隐藏语法规范"><a href="#隐藏语法规范" class="headerlink" title="隐藏语法规范"></a>隐藏语法规范</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hide([speed,[easing,[fn]]])</span><br></pre></td></tr></table></figure><h4 id="切换语法规范"><a href="#切换语法规范" class="headerlink" title="切换语法规范"></a>切换语法规范</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">toggle([speed,[easing,[fn]]])</span><br></pre></td></tr></table></figure><h4 id="显示-隐藏参数"><a href="#显示-隐藏参数" class="headerlink" title="显示/隐藏参数"></a>显示/隐藏参数</h4><p>参数都可以省略，不写任何参数即无动画直接显示</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td><code>speed</code></td><td>规定显示隐藏效果的速度。值可以是特定字符串(“<code>slow</code>“,”<code>normal</code>“,<code>fast</code>)或表示动画时长的毫秒数值(如：1000)</td></tr><tr><td><code>easing</code></td><td>规定在动画的不同点上元素的速度。默认值为 “<code>swing</code>“。可取值：”<code>swing</code>“ - 在开头/结尾移动慢，在中间移动快；”<code>linear</code>“ - 匀速运动</td></tr><tr><td><code>fn</code></td><td>回调函数，在动画完成时执行的函数</td></tr></tbody></table><h3 id="滑动效果"><a href="#滑动效果" class="headerlink" title="滑动效果"></a>滑动效果</h3><h4 id="上滑语法规范"><a href="#上滑语法规范" class="headerlink" title="上滑语法规范"></a>上滑语法规范</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">slideUp([speed,[easing],[fn]])</span><br></pre></td></tr></table></figure><h4 id="下滑语法规范"><a href="#下滑语法规范" class="headerlink" title="下滑语法规范"></a>下滑语法规范</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">slideDown([speed,[easing],[fn]])</span><br></pre></td></tr></table></figure><h4 id="切换语法规范-1"><a href="#切换语法规范-1" class="headerlink" title="切换语法规范"></a>切换语法规范</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">slideToggle([speed,[easing],[fn]])</span><br></pre></td></tr></table></figure><h4 id="上滑下滑参数"><a href="#上滑下滑参数" class="headerlink" title="上滑下滑参数"></a>上滑下滑参数</h4><p>参数都可以省略</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td><code>speed</code></td><td>规定上滑下滑效果的速度。值可以是特定字符串(“<code>slow</code>“,”<code>normal</code>“,<code>fast</code>)或表示动画时长的毫秒数值(如：1000)，默认为”<code>normal</code>“。</td></tr><tr><td><code>easing</code></td><td>规定在动画的不同点上元素的速度。默认值为 “<code>swing</code>“。可取值：”<code>swing</code>“ - 在开头/结尾移动慢，在中间移动快；”<code>linear</code>“ - 匀速运动</td></tr><tr><td><code>fn</code></td><td>回调函数，在动画完成时执行的函数</td></tr></tbody></table><h3 id="事件切换"><a href="#事件切换" class="headerlink" title="事件切换"></a>事件切换</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hover([over,]out)</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td><code>over</code></td><td>鼠标移动到元素上要触发的函数(相当于<code>mouseenter</code>)</td></tr><tr><td><code>out</code></td><td>鼠标移出元素要触发的函数(相当于<code>mouseleave</code>)</td></tr></tbody></table><ul><li>当只有一个函数作为参数时，当鼠标移到元素上或移出元素时都会触发执行该函数</li><li><code>hover</code>配合<code>toggle</code>、<code>slideToggle</code>等动画切换函数可以以简洁的代码实现动画效果</li></ul><h3 id="动画队列及其停止排队方法"><a href="#动画队列及其停止排队方法" class="headerlink" title="动画队列及其停止排队方法"></a>动画队列及其停止排队方法</h3><h4 id="动画或效果队列"><a href="#动画或效果队列" class="headerlink" title="动画或效果队列"></a>动画或效果队列</h4><p>动画或者效果一旦触发就会执行，如果多次触发，就造成多个动画或者效果排队执行</p><h4 id="停止排队"><a href="#停止排队" class="headerlink" title="停止排队"></a>停止排队</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stop()</span><br></pre></td></tr></table></figure><ul><li><code>stop</code>方法用于停止动画或效果</li><li>注意：<code>stop</code>写到动画或者效果的<strong>前面</strong>，<strong>相当于停止结束上一次的动画</strong>。</li></ul><h3 id="淡入淡出效果"><a href="#淡入淡出效果" class="headerlink" title="淡入淡出效果"></a>淡入淡出效果</h3><h4 id="淡入语法规范"><a href="#淡入语法规范" class="headerlink" title="淡入语法规范"></a>淡入语法规范</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fadeIn([speed,[easing],[fn]])</span><br></pre></td></tr></table></figure><h4 id="淡出语法规范"><a href="#淡出语法规范" class="headerlink" title="淡出语法规范"></a>淡出语法规范</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fadeOut([speed,[easing],[fn]])</span><br></pre></td></tr></table></figure><h4 id="切换语法规范-2"><a href="#切换语法规范-2" class="headerlink" title="切换语法规范"></a>切换语法规范</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fadeToggle([speed,[easing],[fn]])</span><br></pre></td></tr></table></figure><h4 id="渐进方式调整到指定的不透明度"><a href="#渐进方式调整到指定的不透明度" class="headerlink" title="渐进方式调整到指定的不透明度"></a>渐进方式调整到指定的不透明度</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fadeTo(speed,opacity,[[easing],[fn]])</span><br></pre></td></tr></table></figure><h4 id="淡入淡出参数"><a href="#淡入淡出参数" class="headerlink" title="淡入淡出参数"></a>淡入淡出参数</h4><p>除<code>fadeTo</code>中的<code>speed</code>和<code>opacity</code>参数必须写，其他参数都可以省略</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td><code>speed</code></td><td>规定淡入淡出效果的速度。值可以是特定字符串(“<code>slow</code>“,”<code>normal</code>“,<code>fast</code>)或表示动画时长的毫秒数值(如：1000)，默认为”<code>normal</code>“。</td></tr><tr><td><code>easing</code></td><td>规定在动画的不同点上元素的速度。默认值为 “<code>swing</code>“。可取值：”<code>swing</code>“ - 在开头/结尾移动慢，在中间移动快；”<code>linear</code>“ - 匀速运动</td></tr><tr><td><code>fn</code></td><td>回调函数，在动画完成时执行的函数</td></tr><tr><td><code>opacity</code></td><td>透明度必须写，取值0~1之间</td></tr></tbody></table><h3 id="自定义动画"><a href="#自定义动画" class="headerlink" title="自定义动画"></a>自定义动画</h3><h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">animate(params,[speed],[easing],[fn])</span><br></pre></td></tr></table></figure><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td><code>params</code></td><td>想要更改的样式属性，以<strong>对象形式</strong>传递，必须写。属性名可以不用带引号，如果是复合属性需要采取<strong>驼峰命名法</strong>(如borderLeft)，其余参数可以省略。</td></tr><tr><td><code>speed</code></td><td>规定淡入淡出效果的速度。值可以是特定字符串(“<code>slow</code>“,”<code>normal</code>“,<code>fast</code>)或表示动画时长的毫秒数值(如：1000)，默认为”<code>normal</code>“。</td></tr><tr><td><code>easing</code></td><td>规定在动画的不同点上元素的速度。默认值为 “<code>swing</code>“。可取值：”<code>swing</code>“ - 在开头/结尾移动慢，在中间移动快；”<code>linear</code>“ - 匀速运动</td></tr><tr><td><code>fn</code></td><td>回调函数，在动画完成时执行的函数</td></tr></tbody></table><h2 id="jQuery属性操作"><a href="#jQuery属性操作" class="headerlink" title="jQuery属性操作"></a>jQuery属性操作</h2><h3 id="获取和设置元素固有属性prop"><a href="#获取和设置元素固有属性prop" class="headerlink" title="获取和设置元素固有属性prop()"></a>获取和设置元素固有属性prop()</h3><p>固有属性是指元素本身自带的属性，比如<code>&lt;a&gt;</code>元素里面的<code>href</code>，<code>&lt;input&gt;</code>元素里面的<code>type</code></p><h4 id="获取属性"><a href="#获取属性" class="headerlink" title="获取属性"></a>获取属性</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(selector).prop(<span class="string">"属性"</span>)</span><br></pre></td></tr></table></figure><h4 id="设置属性"><a href="#设置属性" class="headerlink" title="设置属性"></a>设置属性</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(selector).prop(<span class="string">"属性"</span>, <span class="string">"属性值"</span>)</span><br></pre></td></tr></table></figure><h3 id="获取和设置元素自定义属性attr"><a href="#获取和设置元素自定义属性attr" class="headerlink" title="获取和设置元素自定义属性attr()"></a>获取和设置元素自定义属性attr()</h3><h4 id="获取属性-1"><a href="#获取属性-1" class="headerlink" title="获取属性"></a>获取属性</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(selector).attr(<span class="string">"属性"</span>)<span class="comment">// 类似原生JS中的getAttribute()</span></span><br></pre></td></tr></table></figure><h4 id="设置属性-1"><a href="#设置属性-1" class="headerlink" title="设置属性"></a>设置属性</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(selector).attr(<span class="string">"属性"</span>,<span class="string">"属性值"</span>)<span class="comment">//类似原生JS中的setAttribute()</span></span><br></pre></td></tr></table></figure><ul><li>该方法也可以获取和设置以<code>data-</code>开头的H5自定义属性</li></ul><h3 id="数据缓存data"><a href="#数据缓存data" class="headerlink" title="数据缓存data()"></a>数据缓存data()</h3><h4 id="获取数据"><a href="#获取数据" class="headerlink" title="获取数据"></a>获取数据</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(selector).data(<span class="string">"name"</span>)<span class="comment">//向被选元素获取数据</span></span><br></pre></td></tr></table></figure><h4 id="附加数据"><a href="#附加数据" class="headerlink" title="附加数据"></a>附加数据</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(selector).data(<span class="string">"name"</span>, <span class="string">"value"</span>) <span class="comment">//向被选元素附加数据</span></span><br></pre></td></tr></table></figure><ul><li><code>data()</code>方法可以在指定元素上存取数据，但是并不会修改DOM元素结构。一旦页面刷新，之前存放的数据都将被移除。</li><li>同时，<code>data()</code>方法还可以读取以<code>data-</code>开头的H5自定义属性，其中参数<code>name</code>不需要加前缀<code>data-</code>，而且得到的值是数字型。</li><li>如<code>&lt;div data-index=&quot;1&quot;&gt;Hello&lt;/div&gt;</code>读取为<code>$(&quot;div&quot;).data(&quot;index&quot;)</code></li></ul><h2 id="jQuery内容文本值"><a href="#jQuery内容文本值" class="headerlink" title="jQuery内容文本值"></a>jQuery内容文本值</h2><p>注意针对元素的<strong>内容</strong>还有<strong>表单的值</strong>的操作</p><h3 id="普通元素内容html"><a href="#普通元素内容html" class="headerlink" title="普通元素内容html()"></a>普通元素内容html()</h3><p>相当于原生JS中的<code>innerHTML</code>，包含HTML标签</p><h4 id="获取元素内容"><a href="#获取元素内容" class="headerlink" title="获取元素内容"></a>获取元素内容</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(selector).html()</span><br></pre></td></tr></table></figure><h4 id="设置元素内容"><a href="#设置元素内容" class="headerlink" title="设置元素内容"></a>设置元素内容</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(selector).html(<span class="string">"内容"</span>)</span><br></pre></td></tr></table></figure><h3 id="普通元素文本text"><a href="#普通元素文本text" class="headerlink" title="普通元素文本text()"></a>普通元素文本text()</h3><p>相当于原生JS中的<code>innerText</code>，不包含HTML标签</p><h4 id="获取元素文本"><a href="#获取元素文本" class="headerlink" title="获取元素文本"></a>获取元素文本</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(selector).text()</span><br></pre></td></tr></table></figure><h4 id="设置元素文本"><a href="#设置元素文本" class="headerlink" title="设置元素文本"></a>设置元素文本</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(selector).text(<span class="string">"文本"</span>)</span><br></pre></td></tr></table></figure><h3 id="表单元素内容val"><a href="#表单元素内容val" class="headerlink" title="表单元素内容val()"></a>表单元素内容val()</h3><p>相当于原生JS中的<code>value</code></p><h4 id="获取表单内容"><a href="#获取表单内容" class="headerlink" title="获取表单内容"></a>获取表单内容</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(selector).val()</span><br></pre></td></tr></table></figure><h4 id="设置表单内容"><a href="#设置表单内容" class="headerlink" title="设置表单内容"></a>设置表单内容</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(selector).val(<span class="string">"内容"</span>)</span><br></pre></td></tr></table></figure><h2 id="jQuery元素操作"><a href="#jQuery元素操作" class="headerlink" title="jQuery元素操作"></a>jQuery元素操作</h2><p>jQuery元素操作主要包括<strong>遍历</strong>、<strong>创建</strong>、<strong>添加</strong>、<strong>删除</strong>元素操作</p><h3 id="遍历元素"><a href="#遍历元素" class="headerlink" title="遍历元素"></a>遍历元素</h3><p>jQuery隐式迭代是对同一类元素做了同样的操作，如果想要给同一类元素做不同的操作，就需要用到遍历。</p><h4 id="each方法"><a href="#each方法" class="headerlink" title="each方法"></a>each方法</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(selector).each(<span class="function"><span class="keyword">function</span> (<span class="params">index, domEle</span>)</span>&#123;&#125;)</span><br></pre></td></tr></table></figure><ul><li><code>each()</code>方法遍历匹配的每一个元素，主要用DOM处理。</li><li>里面的回调函数有2个参数：<code>index</code>是每个元素的索引号；<code>domEle</code>是每个<strong>DOM元素对象</strong>，不是jQuery对象，参数名称可以自定义。</li><li>如果想要在回调函数中使用jQuery方法，需将DOM元素转为jQuery对象，即<code>$(domEle)</code></li></ul><h4 id="each方法-1"><a href="#each方法-1" class="headerlink" title="$.each方法"></a>$.each方法</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$.each(object, <span class="function"><span class="keyword">function</span>(<span class="params">index, element</span>) </span>&#123;&#125;)</span><br></pre></td></tr></table></figure><ul><li><code>$.each()</code>方法可以用于遍历任何对象。主要用于数据处理，比如数组，对象</li><li>里面的函数有2个参数：<code>index</code>是每个元素的索引号或是对象的属性名；<code>element</code>是遍历内容或对象的属性值。</li></ul><h3 id="创建元素"><a href="#创建元素" class="headerlink" title="创建元素"></a>创建元素</h3><h4 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"html代码"</span>)</span><br></pre></td></tr></table></figure><h4 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> li = $(<span class="string">"&lt;li&gt;我是被动态创建的&lt;/li&gt;"</span>) <span class="comment">//动态创建li标签</span></span><br></pre></td></tr></table></figure><h3 id="添加元素"><a href="#添加元素" class="headerlink" title="添加元素"></a>添加元素</h3><h4 id="内部添加"><a href="#内部添加" class="headerlink" title="内部添加"></a>内部添加</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 内部后置添加</span></span><br><span class="line">$(selector).append(content | <span class="function"><span class="keyword">function</span>(<span class="params">index,html</span>))</span></span><br><span class="line"><span class="function">// 内部前置添加</span></span><br><span class="line"><span class="function"><span class="title">$</span>(<span class="params">selector</span>).<span class="title">preend</span>(<span class="params">content | function(index,html</span>))</span></span><br></pre></td></tr></table></figure><ul><li>参数可以是内容<code>content</code>，也可以是函数<code>function</code></li><li><code>append</code>把内容放入匹配元素内部<strong>最后面</strong>，类似原生JS中的<code>appendChild</code></li><li><code>preend</code>把内容放入匹配元素内部<strong>最前面</strong></li></ul><h4 id="外部添加"><a href="#外部添加" class="headerlink" title="外部添加"></a>外部添加</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 外部后置添加</span></span><br><span class="line">$(selector).after(content | <span class="function"><span class="keyword">function</span>(<span class="params">index,html</span>))</span></span><br><span class="line"><span class="function">// 外部前置添加</span></span><br><span class="line"><span class="function"><span class="title">$</span>(<span class="params">selector</span>).<span class="title">before</span>(<span class="params">content | function(index,html</span>))</span></span><br></pre></td></tr></table></figure><ul><li>参数可以是内容<code>content</code>，也可以是函数<code>function</code></li></ul><h4 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h4><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td><code>content</code></td><td>要添加的内容，可以是<strong>HTML元素</strong>、<strong>DOM对象</strong>、<strong>jQuery对象</strong></td></tr><tr><td><code>function(index,html)</code></td><td>函数必须返回一个HTML字符串，用于追加到每一个匹配元素的里边。接受两个参数，<code>index</code>参数为对象在这个集合中的索引值，<code>html</code>参数为这个对象原先的html值。</td></tr></tbody></table><h3 id="删除元素"><a href="#删除元素" class="headerlink" title="删除元素"></a>删除元素</h3><h4 id="删除匹配的元素"><a href="#删除匹配的元素" class="headerlink" title="删除匹配的元素"></a>删除匹配的元素</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(selector1).remove([selector2])</span><br></pre></td></tr></table></figure><ul><li>删除符合<code>selector1</code>的元素中符合<code>selector2</code>的元素</li><li><code>selector2</code>省略时即删除符合<code>selector1</code>的元素</li></ul><h4 id="删除匹配的元素集合中所有的子节点"><a href="#删除匹配的元素集合中所有的子节点" class="headerlink" title="删除匹配的元素集合中所有的子节点"></a>删除匹配的元素集合中所有的子节点</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(selector).empty()</span><br></pre></td></tr></table></figure><ul><li><code>html(&quot;&quot;)</code>和<code>empty()</code>的作用相同</li></ul><h2 id="jQuery尺寸和位置操作"><a href="#jQuery尺寸和位置操作" class="headerlink" title="jQuery尺寸和位置操作"></a>jQuery尺寸和位置操作</h2><h3 id="jQuery尺寸"><a href="#jQuery尺寸" class="headerlink" title="jQuery尺寸"></a>jQuery尺寸</h3><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td><code>width()/height()</code></td><td>取得匹配元素宽度和高度值，只算<code>width/heigth</code></td></tr><tr><td><code>innerWidth()/innerHeight()</code></td><td>取得匹配元素宽度和高度值，包含<code>padding</code></td></tr><tr><td><code>outerWidth()/outerHeight()</code></td><td>取得匹配元素宽度和高度值，包含<code>padding</code>、<code>border</code></td></tr><tr><td><code>outWidth(true)/outerHeight(true)</code></td><td>取得匹配元素宽度和高度值，包含<code>padding</code>、<code>border</code>、<code>margin</code></td></tr></tbody></table><ul><li>以上参数为空，则是获取相应值，返回的是数字型</li><li>如果参数为数字，则是修改相应值</li><li>参数可以不必写单位</li></ul><h3 id="jQuery位置"><a href="#jQuery位置" class="headerlink" title="jQuery位置"></a>jQuery位置</h3><p>位置主要有三个：<strong>offset()</strong>、<strong>position()</strong>、<strong>scrollTop()/scrollLeft()</strong></p><h4 id="offset-获取或设置元素偏移"><a href="#offset-获取或设置元素偏移" class="headerlink" title="offset()获取或设置元素偏移"></a>offset()获取或设置元素偏移</h4><ul><li><code>offset</code>方法设置或返回被选元素相对于<strong>文档</strong>的偏移坐标，和父级没有关系</li><li>该方法有2个属性<code>left</code>、<code>top</code>。<code>offset().top</code>用于获取距离文档顶部的距离；<code>offset().left</code>用于获取距离文档左侧的距离。</li><li>可以以对象作为参数设置元素的偏移，如<code>offset({top: 10, left: 30});</code></li></ul><h4 id="position-获取元素偏移"><a href="#position-获取元素偏移" class="headerlink" title="position()获取元素偏移"></a>position()获取元素偏移</h4><ul><li><code>position</code>方法用于返回被选元素相对于<strong>带有定位的父级元素</strong>的偏移坐标，如果父级都没定位，则以文档为准。</li><li>该方法有2个属性<code>left</code>、<code>top</code>。<code>offset().top</code>用于获取距离有定位的父级元素顶部的距离；<code>offset().left</code>用于获取距离有定位的父级元素左侧的距离。</li><li>该方法只能获取元素偏移，不能设置元素偏移。</li></ul><h4 id="scrollTop-scrollLeft-获取或设置元素被卷去的头部-左侧"><a href="#scrollTop-scrollLeft-获取或设置元素被卷去的头部-左侧" class="headerlink" title="scrollTop()/scrollLeft()获取或设置元素被卷去的头部/左侧"></a>scrollTop()/scrollLeft()获取或设置元素被卷去的头部/左侧</h4><ul><li><code>scrollTop()</code>方法设置元素被卷去的头部</li><li><code>scrollLeft()</code>方法设置元素被卷去的左侧</li><li>如果参数为数字，则是设置元素被卷去的头部/左侧</li></ul><h4 id="带有动画效果的返回顶部"><a href="#带有动画效果的返回顶部" class="headerlink" title="带有动画效果的返回顶部"></a>带有动画效果的返回顶部</h4><ul><li>核心原理：使用<code>animate</code>动画返回顶部</li><li><code>animate</code>动画函数里面有个<code>scrollTop</code>属性，可以设置位置</li><li>动画的对象应该为元素，即<code>body</code>和<code>html</code>，不能使用<code>document</code></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"body,html"</span>).stop().animate(&#123;</span><br><span class="line">    scrollTop: <span class="number">0</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;  &lt;em&gt;『 注 : 本笔记摘自视频 &lt;a href=&quot;https://www.bilibili.com/video/BV1a4411w7Gx&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;jQuery网页开发案例精讲&lt;/a&gt;，如有侵权,请联系删除。』&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://www.hardape.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="jQuery" scheme="https://www.hardape.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/jQuery/"/>
    
    
      <category term="jQuery" scheme="https://www.hardape.top/tags/jQuery/"/>
    
  </entry>
  
  <entry>
    <title>01-jQuery入门</title>
    <link href="https://www.hardape.top/article/36bfa31c.html"/>
    <id>https://www.hardape.top/article/36bfa31c.html</id>
    <published>2020-04-23T04:58:56.000Z</published>
    <updated>2020-05-22T13:29:37.714Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>  <em>『 注 : 本笔记摘自视频 <a href="https://www.bilibili.com/video/BV1a4411w7Gx" target="_blank" rel="noopener">jQuery网页开发案例精讲</a>，如有侵权,请联系删除。』</em></p></blockquote><a id="more"></a><h2 id="jQuery概述"><a href="#jQuery概述" class="headerlink" title="jQuery概述"></a>jQuery概述</h2><h3 id="JavaScript库"><a href="#JavaScript库" class="headerlink" title="JavaScript库"></a>JavaScript库</h3><h4 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h4><ul><li>JavaScript库，即library，是一个<strong>封装好的特定的集合</strong>(方法和函数)。从封装一大堆函数的角度理解库，就是在这个库中，封装了很多预先定义好的函数在里面，比如动画<code>animate</code>、<code>hide</code>、<code>show</code>，比如获取元素等。</li><li>简单理解，JavaScript就是一个JS文件，里面对原生的JS的代码进行了封装。这样就可以快速高效地使用这些封装好的功能了。</li><li>比如jQuery，就是为了快速方便地操作DOM，里面基本都是函数(方法)。</li></ul><h4 id="常见的JavaScript"><a href="#常见的JavaScript" class="headerlink" title="常见的JavaScript"></a>常见的JavaScript</h4><ul><li>jQuery</li><li>Prototype</li><li>YUI</li><li>Dojo</li><li>Ext JS</li><li>移动端的zepto</li></ul><h3 id="jQuery的概念"><a href="#jQuery的概念" class="headerlink" title="jQuery的概念"></a>jQuery的概念</h3><ul><li><strong>jQuery</strong>是一个快速、简洁的JavaScript库，其设计的宗旨是” write Less, Do More “，即提倡写更少的代码，做更多的事情。</li><li>jQuery中的 j 表示JavaScript，Query表示查询，旨在快速查询DOM元素</li><li>jQuery封装了JavaScript常用的功能代码，优化了DOM操作、事件处理、动画设计和Ajax交互</li></ul><h3 id="jQuery的优点"><a href="#jQuery的优点" class="headerlink" title="jQuery的优点"></a>jQuery的优点</h3><ul><li>轻量级。核心文件才几十kb，不会影响页面加载速度</li><li>跨浏览器兼容。基本兼容了现在主流的浏览器</li><li>链式编程、隐式迭代</li><li>对事件、样式、动画支持，大大简化了DOM操作</li><li>支持插件扩展开发。有着丰富的第三方的插件，例如：树形菜单、日期控件、轮播图等</li><li>免费、开源</li></ul><h3 id="jQuery的下载"><a href="#jQuery的下载" class="headerlink" title="jQuery的下载"></a>jQuery的下载</h3><p>官方网址：<a href="https://jquery.com/" target="_blank" rel="noopener">https://jquery.com/</a></p><h4 id="版本"><a href="#版本" class="headerlink" title="版本"></a>版本</h4><ul><li>1x：兼容IE6/7/8等低版本浏览器，官网不再更新</li><li>2x：不兼容IE6/7/8等低版本浏览器，官网不再更新</li><li>3x：不兼容IE6/7/8等低版本浏览器，是官方主要更新维护的版本</li></ul><h3 id="jQuery的入口函数"><a href="#jQuery的入口函数" class="headerlink" title="jQuery的入口函数"></a>jQuery的入口函数</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">   ... <span class="comment">// 此处的页面DOM加载完成的入口 </span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">   ... <span class="comment">// 此处的页面DOM加载完成的入口 </span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>等着DOM结构渲染完毕即可执行内部代码，不必等到所有外部资源加载完成，jQuery完成了封装。</li><li>相当于原生JS中的DOMContentLoaded。</li><li>不同于原生JS中的load事件是等页面文档、外部的JS文件、css文件、图片加载完毕才执行内部代码。</li><li>更推荐使用第一种方式，简洁。</li></ul><h3 id="jQuery-的顶级对象"><a href="#jQuery-的顶级对象" class="headerlink" title="jQuery 的顶级对象$"></a>jQuery 的顶级对象$</h3><ul><li>$是jQuery的别称，在代码中可以使用jQuery代替$，但一般为了方便，通常都直接使用$。</li><li>$是jQuery的顶级对象，相当于原生JavaScript中的window。把元素利用$包装成<strong>jQuery对象</strong>，就可以调用jQuery的方法。</li></ul><h2 id="jQuery对象和DOM对象"><a href="#jQuery对象和DOM对象" class="headerlink" title="jQuery对象和DOM对象"></a>jQuery对象和DOM对象</h2><h3 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h3><ul><li>用原生JS获取来的对象是DOM对象，用jQuery方法获取的元素是jQuery对象</li><li>jQuery对象的本质是：<strong>利用$对DOM对象包装后产生的对象(伪数组形式存储)</strong></li><li>注意：<strong>jQuery对象只能使用jQuery方法，DOM对象只能使用原生的JavaScript的属性和方法</strong></li></ul><h3 id="转换"><a href="#转换" class="headerlink" title="转换"></a>转换</h3><ul><li>DOM对象和jQuery对象之间是可以相互转换的。</li><li>因为原生JS比JQuery大，原生的一些属性和方法jQuery没有进行封装。要想使用这些属性和方法需要把jQuery对象装换为DOM对象才能使用</li></ul><h4 id="DOM对象装换为jQuery对象"><a href="#DOM对象装换为jQuery对象" class="headerlink" title="DOM对象装换为jQuery对象"></a>DOM对象装换为jQuery对象</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(DOM对象)</span><br></pre></td></tr></table></figure><h4 id="jQuery对象装换为DOM对象"><a href="#jQuery对象装换为DOM对象" class="headerlink" title="jQuery对象装换为DOM对象"></a>jQuery对象装换为DOM对象</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 第一种方式</span></span><br><span class="line">jQuery对象[index]<span class="comment">//index是索引号</span></span><br><span class="line"><span class="comment">// 第二种方式</span></span><br><span class="line">jQuery对象.get(index)<span class="comment">//index是索引号</span></span><br></pre></td></tr></table></figure><h1 id=""><a href="#" class="headerlink" title=""></a></h1>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;  &lt;em&gt;『 注 : 本笔记摘自视频 &lt;a href=&quot;https://www.bilibili.com/video/BV1a4411w7Gx&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;jQuery网页开发案例精讲&lt;/a&gt;，如有侵权,请联系删除。』&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://www.hardape.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="jQuery" scheme="https://www.hardape.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/jQuery/"/>
    
    
      <category term="jQuery" scheme="https://www.hardape.top/tags/jQuery/"/>
    
  </entry>
  
  <entry>
    <title>16-JS的本地存储</title>
    <link href="https://www.hardape.top/article/ff788ea5.html"/>
    <id>https://www.hardape.top/article/ff788ea5.html</id>
    <published>2020-04-20T08:25:24.000Z</published>
    <updated>2020-05-22T13:41:24.916Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>  <em>『 注 : 本笔记摘自视频 <a href="https://www.bilibili.com/video/BV1k4411w7sV" target="_blank" rel="noopener">JavaScript核心 DOM BOM操作</a>，如有侵权,请联系删除。』</em></p></blockquote><a id="more"></a><h2 id="本地存储概述"><a href="#本地存储概述" class="headerlink" title="本地存储概述"></a>本地存储概述</h2><p>随着互联网的快速发展，基于网页的应用越来越普遍，同时也变的越来越复杂，为了满足各种各样的需求，会经常性在本地存储大量的数据，HTML5规范提出了相关解决方案</p><h2 id="本地存储特性"><a href="#本地存储特性" class="headerlink" title="本地存储特性"></a>本地存储特性</h2><ul><li>数据存储在用户浏览器中</li><li>设置、读取方便、设置页面刷新不丢失数据</li><li>容量较大，<code>sessionStorage</code>约5M，<code>localStorage</code>约20M</li><li>只能存储字符串，可以将对象<code>JSON.stringify()</code>编码后存储</li></ul><h2 id="window-sessionStorage"><a href="#window-sessionStorage" class="headerlink" title="window.sessionStorage"></a>window.sessionStorage</h2><h3 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h3><ul><li>生命周期为<strong>关闭浏览器窗口</strong></li><li>在<strong>同一个窗口(页面)</strong>下数据可以共享</li><li>以<strong>键值对</strong>的形式存储使用</li></ul><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><h4 id="存储-设置数据"><a href="#存储-设置数据" class="headerlink" title="存储/设置数据"></a>存储/设置数据</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sessionStorage.setItem(key,value);</span><br></pre></td></tr></table></figure><h4 id="获取数据"><a href="#获取数据" class="headerlink" title="获取数据"></a>获取数据</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sessionStorage.getItem(key);</span><br></pre></td></tr></table></figure><h4 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sessionStorage.removeItem(key);</span><br></pre></td></tr></table></figure><h4 id="清空所有数据"><a href="#清空所有数据" class="headerlink" title="清空所有数据"></a>清空所有数据</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sessionStorage.clear();</span><br></pre></td></tr></table></figure><h2 id="window-localStorage"><a href="#window-localStorage" class="headerlink" title="window.localStorage"></a>window.localStorage</h2><h3 id="特性-1"><a href="#特性-1" class="headerlink" title="特性"></a>特性</h3><ul><li>生命周期永久生效，除非手动删除，否则<strong>关闭页面也会存在</strong></li><li>可以多窗口(页面)共享(<strong>同一浏览器可以共享)</strong></li><li>以<strong>键值对</strong>的形式存储使用</li></ul><h3 id="使用-1"><a href="#使用-1" class="headerlink" title="使用"></a>使用</h3><h4 id="存储-设置数据-1"><a href="#存储-设置数据-1" class="headerlink" title="存储/设置数据"></a>存储/设置数据</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">localStorage.setItem(key,value);</span><br></pre></td></tr></table></figure><h4 id="获取数据-1"><a href="#获取数据-1" class="headerlink" title="获取数据"></a>获取数据</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">localStorage.getItem(key);</span><br></pre></td></tr></table></figure><h4 id="删除数据-1"><a href="#删除数据-1" class="headerlink" title="删除数据"></a>删除数据</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">localStorage.removeItem(key);</span><br></pre></td></tr></table></figure><h4 id="清空所有数据-1"><a href="#清空所有数据-1" class="headerlink" title="清空所有数据"></a>清空所有数据</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">localStoragesessionStorage.clear();</span><br></pre></td></tr></table></figure><h2 id="案例-记住用户名"><a href="#案例-记住用户名" class="headerlink" title="案例-记住用户名"></a>案例-记住用户名</h2><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>案例-记住用户名<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"uname"</span>&gt;</span>用户名:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"uname"</span> <span class="attr">id</span>=<span class="string">"uname"</span> <span class="attr">placeholder</span>=<span class="string">"请输入用户名"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">"remember-uname"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"remember-uname"</span>&gt;</span>记住用户名<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> uname = <span class="built_in">document</span>.querySelector(<span class="string">'#uname'</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> rememberUname = <span class="built_in">document</span>.querySelector(<span class="string">'#remember-uname'</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 如果用户已经记住了用户名,从loaclStorage中取得用户名</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span> (localStorage.getItem(<span class="string">'uname'</span>)) &#123;</span></span><br><span class="line"><span class="actionscript">            uname.value = localStorage.getItem(<span class="string">'uname'</span>);</span></span><br><span class="line"><span class="actionscript">            rememberUname.checked = <span class="literal">true</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 监听记住用户名选择框change事件</span></span></span><br><span class="line"><span class="actionscript">        rememberUname.addEventListener(<span class="string">'change'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line">            if (rememberUname.checked) &#123;</span><br><span class="line"><span class="actionscript">                <span class="comment">// 存储用户名</span></span></span><br><span class="line"><span class="actionscript">                localStorage.setItem(<span class="string">'uname'</span>, uname.value);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">            &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 删除存储的用户名</span></span></span><br><span class="line"><span class="actionscript">                localStorage.removeItem(<span class="string">'uname'</span>);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><img src= /img/loading.gif data-src="https://gitee.com/code-ape/blogImage/raw/master/img/localStorage-remember-uname.gif" alt="localStorage-remember-uname" style="zoom:80%;" />]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;  &lt;em&gt;『 注 : 本笔记摘自视频 &lt;a href=&quot;https://www.bilibili.com/video/BV1k4411w7sV&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;JavaScript核心 DOM BOM操作&lt;/a&gt;，如有侵权,请联系删除。』&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://www.hardape.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JavaScript" scheme="https://www.hardape.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="https://www.hardape.top/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>15-移动端网页特效</title>
    <link href="https://www.hardape.top/article/c2cb33d0.html"/>
    <id>https://www.hardape.top/article/c2cb33d0.html</id>
    <published>2020-04-20T08:23:53.000Z</published>
    <updated>2020-05-22T13:41:21.303Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>  <em>『 注 : 本笔记摘自视频 <a href="https://www.bilibili.com/video/BV1k4411w7sV" target="_blank" rel="noopener">JavaScript核心 DOM BOM操作</a>，如有侵权,请联系删除。』</em></p></blockquote><a id="more"></a><h2 id="触屏事件"><a href="#触屏事件" class="headerlink" title="触屏事件"></a>触屏事件</h2><ul><li>移动端浏览器兼容性较好，不需要考虑JS的兼容性问题，可以放心地使用原生JS书写效果，但是移动端也有自动独特的地方。比如<strong>触屏事件touch</strong>(也称为触摸事件)，Andorid和IOS都有。</li><li>touch对象代表一个触摸点。触摸点可能是一根手指，也可能是一根触摸笔。触屏事件可响应用户手指(或触控笔)对屏幕或者触控板操作。</li></ul><h3 id="常见的触屏事件"><a href="#常见的触屏事件" class="headerlink" title="常见的触屏事件"></a>常见的触屏事件</h3><table><thead><tr><th>常见的触屏事件</th><th>说明</th></tr></thead><tbody><tr><td><code>touchstart</code></td><td>手指触摸到一个DOM元素时触发</td></tr><tr><td><code>touchmove</code></td><td>手指在一个DOM元素上移动时触发</td></tr><tr><td><code>touchend</code></td><td>手指从一个DOM元素上移开时触发</td></tr></tbody></table><h2 id="触摸事件对象-TouchEvent"><a href="#触摸事件对象-TouchEvent" class="headerlink" title="触摸事件对象(TouchEvent)"></a>触摸事件对象(TouchEvent)</h2><ul><li>TouchEvent是一类描述手指在触摸平面(触摸屏、触摸板等)的状态变化的事件。这类事件用于描述一个或多个触点，使开发者可以检测触点的移动，触点的增加和减少等等。</li><li><code>touchstart</code>、<code>touchmove</code>、<code>touchend</code>三个事件都有各自的事件对象。</li></ul><h3 id="常用触摸事件对象列表"><a href="#常用触摸事件对象列表" class="headerlink" title="常用触摸事件对象列表"></a>常用触摸事件对象列表</h3><table><thead><tr><th>常用触摸事件对象列表(伪数组)</th><th>说明</th></tr></thead><tbody><tr><td><code>e.touches</code></td><td>正在触摸屏幕的所有手指的一个列表</td></tr><tr><td><strong><code>e.targetTouches</code></strong></td><td>正在触摸当前DOM元素上的手指的一个列表</td></tr><tr><td><code>e.changedTouches</code></td><td>手指状态发生了改变的列表，从无到有，从有到无变化</td></tr></tbody></table><ul><li>由于在开发时都是给元素注册触摸事件，故最常使用<code>targetTouches</code></li></ul><h3 id="案例-移动端拖动元素"><a href="#案例-移动端拖动元素" class="headerlink" title="案例-移动端拖动元素"></a>案例-移动端拖动元素</h3><ul><li><code>touchstart</code>、<code>touchmove</code>、<code>touchend</code>可实现拖动元素。</li><li>当前手指的坐标值：<code>e.targetTouches[0].pageX</code>和<code>e.targetTouches[0].pageY</code>。</li><li>移动端拖动的原理：手指移动中，计算手指移动的距离，盒子的坐标 = 盒子原来的位置 + 手指移动的距离。</li><li>手指移动的距离 = 手指滑动中的位置 - 手指刚开始触摸的位置。</li><li>注意：手指移动也会触发屏幕滚动屏幕，故要阻止默认的屏幕滚动：<code>e.preventDefault()</code>。</li></ul><h4 id="拖动元素步骤"><a href="#拖动元素步骤" class="headerlink" title="拖动元素步骤"></a>拖动元素步骤</h4><ol><li>触摸元素<code>touchstart</code>：获取手指初始坐标和盒子原来的位置</li><li>移动手指<code>touchmove</code>：计算手指的滑动距离，并且移动盒子</li><li>离开手指<code>touchend</code>：无</li></ol><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>移动端拖动元素<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        div &#123;</span><br><span class="line">            position: absolute;</span><br><span class="line">            top: 0;</span><br><span class="line">            left: 0;</span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 100px;</span><br><span class="line">            background-color: skyblue;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        div = <span class="built_in">document</span>.querySelector(<span class="string">'div'</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> startX = <span class="number">0</span>;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> startY = <span class="number">0</span>;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> divX = <span class="number">0</span>;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> divY = <span class="number">0</span>;</span></span><br><span class="line"><span class="actionscript">        div.addEventListener(<span class="string">'touchstart'</span>, <span class="function"><span class="keyword">function</span> <span class="params">(e)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 获取手指触摸元素时手指的坐标</span></span></span><br><span class="line">            startX = e.targetTouches[0].pageX;</span><br><span class="line">            startY = e.targetTouches[0].pageY;</span><br><span class="line"><span class="actionscript">            <span class="comment">// 获取盒子原来的位置</span></span></span><br><span class="line"><span class="actionscript">            divX = <span class="keyword">this</span>.offsetLeft;</span></span><br><span class="line"><span class="actionscript">            divY = <span class="keyword">this</span>.offsetTop;</span></span><br><span class="line">        &#125;);</span><br><span class="line"><span class="actionscript">        div.addEventListener(<span class="string">'touchmove'</span>, <span class="function"><span class="keyword">function</span> <span class="params">(e)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 获取手指在元素上移动时手指的坐标并计算手指移动的距离</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> moveX = e.targetTouches[<span class="number">0</span>].pageX - startX;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> moveY = e.targetTouches[<span class="number">0</span>].pageY - startY;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="comment">// 移动盒子的位置</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.style.left = divX + moveX + <span class="string">'px'</span>;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.style.top = divY + moveY + <span class="string">'px'</span>;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 阻止默认的屏幕滚动</span></span></span><br><span class="line">            e.preventDefault();</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="移动端常见特效"><a href="#移动端常见特效" class="headerlink" title="移动端常见特效"></a>移动端常见特效</h2><h3 id="移动端轮播图-仿携程网"><a href="#移动端轮播图-仿携程网" class="headerlink" title="移动端轮播图(仿携程网)"></a>移动端轮播图(仿携程网)</h3><h4 id="功能需求"><a href="#功能需求" class="headerlink" title="功能需求"></a>功能需求</h4><p>移动端轮播图功能基本和PC端一致</p><ul><li>可以自动播放图片</li><li>手指可以拖动播放轮播图</li></ul><h4 id="特殊需求"><a href="#特殊需求" class="headerlink" title="特殊需求"></a>特殊需求</h4><ul><li>为了防止用户在页面初始时往右拖动轮播图会有空白，应动态复制最后一张轮播图至最前</li><li>由于在移动端不需要考虑兼容性问题，滚动图片可使用CSS3中的<code>translate</code>转换和<code>transition</code>过渡实现动画效果</li></ul><h4 id="无缝滚动"><a href="#无缝滚动" class="headerlink" title="无缝滚动"></a>无缝滚动</h4><ul><li>无缝滚动的原理基本和PC端一致</li><li>特殊的是，在移动端使用<code>transition</code>过渡，故判断条件是要等到图片滚动完毕再去判断，即过渡完成后判断</li><li>此时需要添加监听过渡完成事件<code>transitionend</code></li></ul><h4 id="classList属性"><a href="#classList属性" class="headerlink" title="classList属性"></a>classList属性</h4><ul><li>classList属性是HTML5新增的一个属性，返回元素的类名列表(伪数组)，但是ie10以上版本支持。</li><li><code>Element.classList</code> 是一个只读属性，返回一个元素的类属性的实时DOMTokenList集合。</li><li>该属性用于在元素中添加，移除以及切换CSS类</li></ul><table><thead><tr><th>classList属性常用方法</th><th>说明</th></tr></thead><tbody><tr><td><code>element.classList.add(&#39;类名&#39;)</code></td><td>添加类名，不会覆盖原类名</td></tr><tr><td><code>element.classList.remove(&#39;类名&#39;)</code></td><td>移除指定的类名</td></tr><tr><td><code>element.classList.toggle(&#39;类名&#39;)</code></td><td>切换类名，若元素无指定类名，则添加该类名；若元素有指定类名，则移除该类名。</td></tr></tbody></table><h4 id="结构-HTML"><a href="#结构-HTML" class="headerlink" title="结构(HTML)"></a>结构(HTML)</h4><p>在原先的移动端仿携程网的搜索模块后添加轮播图模块</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 轮播图 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"focus"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"focus-content"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"upload/focus1.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"upload/focus2.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"upload/focus3.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"focus-nav"</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="样式-CSS"><a href="#样式-CSS" class="headerlink" title="样式(CSS)"></a>样式(CSS)</h4><p>添加轮播图的CSS样式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 轮播图模块 */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.focus</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">padding-top</span>: <span class="number">45px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.focus-content</span> &#123;</span><br><span class="line">    <span class="comment">/* 清除浮动 */</span></span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">margin-left</span>: -<span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">500%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.focus</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">20%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.focus</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.focus-nav</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.focus-nav</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">2px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">opacity</span>: .<span class="number">6</span>;</span><br><span class="line">    <span class="attribute">transition</span>: all .<span class="number">3s</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.focus-nav</span> <span class="selector-class">.current</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="行为-JS"><a href="#行为-JS" class="headerlink" title="行为(JS)"></a>行为(JS)</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">'load'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> focus = <span class="built_in">document</span>.querySelector(<span class="string">'.focus'</span>);</span><br><span class="line">    <span class="keyword">var</span> focusContent = <span class="built_in">document</span>.querySelector(<span class="string">'.focus-content'</span>);</span><br><span class="line">    <span class="keyword">var</span> focusNav = <span class="built_in">document</span>.querySelector(<span class="string">'.focus-nav'</span>);</span><br><span class="line">    <span class="comment">// 轮播图的宽度</span></span><br><span class="line">    <span class="keyword">var</span> focusWidth = focus.offsetWidth;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; focusContent.children.length; i++) &#123;</span><br><span class="line">        <span class="comment">// 动态创建并添加小圆点</span></span><br><span class="line">        <span class="keyword">var</span> li = <span class="built_in">document</span>.createElement(<span class="string">'li'</span>);</span><br><span class="line">        focusNav.appendChild(li);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 给第一个小圆点添加current样式</span></span><br><span class="line">    focusNav.children[<span class="number">0</span>].className = <span class="string">'current'</span>;</span><br><span class="line">    <span class="comment">// 为了防止用户在页面初始时往右拖动轮播图会有空白，应动态复制最后一张轮播图至最前</span></span><br><span class="line">    <span class="keyword">var</span> lastImg = focusContent.children[focusContent.children.length - <span class="number">1</span>].cloneNode(<span class="literal">true</span>);</span><br><span class="line">    focusContent.insertBefore(lastImg, focusContent.children[<span class="number">0</span>]);</span><br><span class="line">    <span class="comment">// 动态复制原第一张轮播图(现在第二张)至最后</span></span><br><span class="line">    <span class="keyword">var</span> firstImg = focusContent.children[<span class="number">1</span>].cloneNode(<span class="literal">true</span>);</span><br><span class="line">    focusContent.appendChild(firstImg);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> num = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 利用定时器自动轮播图片</span></span><br><span class="line">    <span class="keyword">var</span> timer = setInterval(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        num++;</span><br><span class="line">        focusContent.style.transition = <span class="string">'all .5s'</span>;</span><br><span class="line">        focusContent.style.transform = <span class="string">'translateX('</span> + -num * focusWidth + <span class="string">'px)'</span>;</span><br><span class="line"></span><br><span class="line">    &#125;, <span class="number">2000</span>);</span><br><span class="line"></span><br><span class="line">    focusContent.addEventListener(<span class="string">'transitionend'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 无缝衔接</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (num &gt;= focusNav.children.length) &#123;<span class="comment">// 最后一张的下一张</span></span><br><span class="line">            num = <span class="number">0</span>;</span><br><span class="line">            focusContent.style.transition = <span class="string">'none'</span>;</span><br><span class="line">            focusContent.style.transform = <span class="string">'translateX('</span> + -num * focusWidth + <span class="string">'px)'</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (num &lt; <span class="number">0</span>) &#123; <span class="comment">// 第一张的前一张</span></span><br><span class="line">            num = focusNav.children.length - <span class="number">1</span>;</span><br><span class="line">            focusContent.style.transition = <span class="string">'none'</span>;</span><br><span class="line">            focusContent.style.transform = <span class="string">'translateX('</span> + -num * focusWidth + <span class="string">'px)'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 将小圆点列表中带有current类名的去掉current类名</span></span><br><span class="line">        focusNav.querySelector(<span class="string">'.current'</span>).classList.remove(<span class="string">'current'</span>);</span><br><span class="line">        <span class="comment">// 让当前索引号和小圆点添加current类名</span></span><br><span class="line">        focusNav.children[num].classList.add(<span class="string">'current'</span>);</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 手指滑动轮播图特效</span></span><br><span class="line">    <span class="comment">// 手指放在轮播图上时</span></span><br><span class="line">    <span class="keyword">var</span> startX = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">var</span> moveX = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">var</span> flag = <span class="literal">false</span>;<span class="comment">// 只有用户手指移动过flag才为true</span></span><br><span class="line">    focus.addEventListener(<span class="string">'touchstart'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 手指触摸停止计时器</span></span><br><span class="line">        clearInterval(timer);</span><br><span class="line">        <span class="comment">// 获取手指的横坐标</span></span><br><span class="line">        startX = e.targetTouches[<span class="number">0</span>].pageX;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 手指拖动时</span></span><br><span class="line">    focus.addEventListener(<span class="string">'touchmove'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 获取手指移动的距离</span></span><br><span class="line">        moveX = e.targetTouches[<span class="number">0</span>].pageX - startX;</span><br><span class="line">        <span class="built_in">console</span>.log(moveX);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 手指拖动时不需要过渡效果</span></span><br><span class="line">        focusContent.style.transition = <span class="string">'none'</span>;</span><br><span class="line">        <span class="comment">// 移动盒子：盒子原来的位置 + 手指移动的距离</span></span><br><span class="line">        focusContent.style.transform = <span class="string">'translateX('</span> + (-num * focusWidth + moveX) + <span class="string">'px)'</span>;</span><br><span class="line">        flag = <span class="literal">true</span>;</span><br><span class="line">        <span class="comment">// 组织滚动屏幕的行为</span></span><br><span class="line">        e.preventDefault();</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    focus.addEventListener(<span class="string">'touchend'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 如果手指拖动距离大于50像素就播放上一张或者下一张</span></span><br><span class="line">        <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">Math</span>.abs(moveX) &gt; <span class="number">50</span>) &#123;</span><br><span class="line">                <span class="comment">// moveX为正播放表示右滑</span></span><br><span class="line">                <span class="keyword">if</span> (moveX &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    num--;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    num++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            focusContent.style.transition = <span class="string">'all .5s'</span>;</span><br><span class="line">            focusContent.style.transform = <span class="string">'translateX('</span> + -num * focusWidth + <span class="string">'px)'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 开启定时器之前先清除定时器</span></span><br><span class="line">        clearInterval(timer);</span><br><span class="line">        timer = setInterval(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            num++;</span><br><span class="line">            focusContent.style.transition = <span class="string">'all .5s'</span>;</span><br><span class="line">            focusContent.style.transform = <span class="string">'translateX('</span> + -num * focusWidth + <span class="string">'px)'</span>;</span><br><span class="line">        &#125;, <span class="number">2000</span>);</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h4><img src= /img/loading.gif data-src="https://gitee.com/code-ape/blogImage/raw/master/img/trip-focus.gif" alt="trip-focus" style="zoom:80%;" /><h3 id="移动端返回顶部"><a href="#移动端返回顶部" class="headerlink" title="移动端返回顶部"></a>移动端返回顶部</h3><p>移动端返回顶部特效同移动端一致，且不需要考虑兼容性问题，可放心使用<code>window.pageYOffset</code>，在原有移动端仿携程网上添加代码如下：</p><h4 id="结构-HTML-1"><a href="#结构-HTML-1" class="headerlink" title="结构(HTML)"></a>结构(HTML)</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 返回顶部按钮 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"return-top"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/back.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="样式-CSS-1"><a href="#样式-CSS-1" class="headerlink" title="样式(CSS)"></a>样式(CSS)</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 返回顶部按钮 */</span></span><br><span class="line"><span class="selector-class">.return-top</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">80px</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">opacity</span>: .<span class="number">9</span>;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.return-top</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="行为-JS-1"><a href="#行为-JS-1" class="headerlink" title="行为(JS)"></a>行为(JS)</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> nav = <span class="built_in">document</span>.querySelector(<span class="string">'.nav'</span>);</span><br><span class="line"><span class="keyword">var</span> returnTop = <span class="built_in">document</span>.querySelector(<span class="string">'.return-top'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 当页面滚动距离大于导航栏offsetTop时显示返回顶部按钮,否则隐藏</span></span><br><span class="line"><span class="built_in">document</span>.addEventListener(<span class="string">'scroll'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">window</span>.pageYOffset &gt;= nav.offsetTop) &#123;</span><br><span class="line">        returnTop.style.display = <span class="string">'block'</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        returnTop.style.display = <span class="string">'none'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 点击返回顶部按钮返回顶部 </span></span><br><span class="line">returnTop.addEventListener(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    animate(<span class="built_in">window</span>, <span class="number">0</span>)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 页面滚动动画函数封装，obj-目标对象，target-目标位置</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">animate</span>(<span class="params">obj, target, callback</span>) </span>&#123;</span><br><span class="line">    clearInterval(obj.timer);</span><br><span class="line">    obj.timer = setInterval(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> step = (target - <span class="built_in">window</span>.pageYOffset) / <span class="number">10</span>;</span><br><span class="line">        step = step &gt; <span class="number">0</span> ? <span class="built_in">Math</span>.ceil(step) : <span class="built_in">Math</span>.floor(step);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">window</span>.pageYOffset == target) &#123;</span><br><span class="line">            clearInterval(obj.timer);</span><br><span class="line">            callback &amp;&amp; callback();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">window</span>.scroll(<span class="number">0</span>, <span class="built_in">window</span>.pageYOffset + step);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, <span class="number">15</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="效果-1"><a href="#效果-1" class="headerlink" title="效果"></a>效果</h4><img src= /img/loading.gif data-src="https://gitee.com/code-ape/blogImage/raw/master/img/trip-return-top.gif" alt="trip-return-top" style="zoom:80%;" /><h3 id="移动端click延时解决方案"><a href="#移动端click延时解决方案" class="headerlink" title="移动端click延时解决方案"></a>移动端click延时解决方案</h3><p>移动端click事件会有300ms的延时，原因是移动端屏幕双击会缩放(doube tap to zoom)页面，解决方案如下：</p><h4 id="禁用缩放"><a href="#禁用缩放" class="headerlink" title="禁用缩放"></a>禁用缩放</h4><p>在视口标签中禁用浏览器默认的双击缩放行为并且去掉300ms的点击延迟</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"user-scalable=no"</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="封装touch事件"><a href="#封装touch事件" class="headerlink" title="封装touch事件"></a>封装touch事件</h4><ul><li>利用touch事件自己封装这个事件解决300ms延迟</li><li>当我们手指触摸屏幕，记录当前触摸时间</li><li>当我们手指离开屏幕，用离开的时间减去触摸的时间</li><li>如果时间小于<strong>150ms</strong>，并且没有滑动过屏幕，就定义为单次点击</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 封装tap, 解决移动端click 300ms延迟</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">tap</span> (<span class="params">obj,callback</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> isMove = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">var</span> startTime = <span class="number">0</span>; <span class="comment">// 记录触摸时候的时间变量</span></span><br><span class="line">    obj.addEventListener(<span class="string">'touchstart'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        startTime = <span class="built_in">Date</span>.now(); <span class="comment">// 记录触摸时间</span></span><br><span class="line">    &#125;);</span><br><span class="line">    obj.addEventListener(<span class="string">'touchmove'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        isMove = <span class="literal">true</span>; <span class="comment">// 检查是否有滑动，有滑动算拖拽，不算点击</span></span><br><span class="line">    &#125;);</span><br><span class="line">    obj.addEventListener(<span class="string">'touchend'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 如果手指触摸和离开时间小于150ms算点击</span></span><br><span class="line">        <span class="keyword">if</span>(isMove &amp;&amp; (<span class="built_in">Date</span>.now() - startTime &lt; <span class="number">150</span>)) &#123; </span><br><span class="line">            callback &amp;&amp; callback();<span class="comment">// 执行回调函数</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 重置</span></span><br><span class="line">        isMove  = <span class="literal">false</span>;</span><br><span class="line">        startTime = <span class="number">0</span>;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用</span></span><br><span class="line">tap(element,<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 执行代码</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="使用fastclick插件"><a href="#使用fastclick插件" class="headerlink" title="使用fastclick插件"></a>使用fastclick插件</h4><p>具体使用查看fastclick的GitHub地址：<a href="https://github.com/ftlabs/fastclick" target="_blank" rel="noopener">https://github.com/ftlabs/fastclick</a></p><h2 id="移动端常用开发插件"><a href="#移动端常用开发插件" class="headerlink" title="移动端常用开发插件"></a>移动端常用开发插件</h2><h3 id="JS插件"><a href="#JS插件" class="headerlink" title="JS插件"></a>JS插件</h3><ul><li>JS插件是JS文件，它遵循一定规范编写，方便程序展示效果，拥有特定功能且方便调用。如轮播图和瀑布流插件。</li><li>特点：它一般是为了解决某个问题而专门存在，其功能单一，并且比较小。</li><li>使用：(1)引入插件相关文件；(2)按照规定语法使用。</li></ul><h3 id="fastclick插件"><a href="#fastclick插件" class="headerlink" title="fastclick插件"></a>fastclick插件</h3><ul><li>fastclick插件用于解决移动端click事件会有300ms的延时问题</li><li>GitHub地址：<a href="https://github.com/ftlabs/fastclick" target="_blank" rel="noopener">https://github.com/ftlabs/fastclick</a></li></ul><h3 id="Swiper插件"><a href="#Swiper插件" class="headerlink" title="Swiper插件"></a>Swiper插件</h3><h4 id="官网地址"><a href="#官网地址" class="headerlink" title="官网地址"></a>官网地址</h4><p>中文官网地址：<a href="http://www.swiper.com.cn/" target="_blank" rel="noopener">http://www.swiper.com.cn/</a></p><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><blockquote><p>  详见<a href="https://www.swiper.com.cn/usage/index.html" target="_blank" rel="noopener">Swiper5 使用方法</a></p></blockquote><ol><li>首先加载插件，需要用到的文件有swiper.min.js和swiper.min.css文件。可下载<a href="https://www.swiper.com.cn/download/index.html#file1" target="_blank" rel="noopener">Swiper文件</a>或使用<a href="https://www.swiper.com.cn/cdn/index.html" target="_blank" rel="noopener">CDN</a>。</li><li>添加HTML内容(需使用指定结构和类名)</li><li>可自定义CSS覆盖原先样式</li><li>初始化Swiper，可在<a href="https://www.swiper.com.cn/api/index.html" target="_blank" rel="noopener">SwiperAPI文档</a>自定义参数</li><li>如果不能写在HTML内容的后面，则需要在页面加载完成后再初始化。</li></ol><h3 id="zyMedia插件"><a href="#zyMedia插件" class="headerlink" title="zyMedia插件"></a>zyMedia插件</h3><ul><li><p>zyMedia是掌阅科技开源的一款基于HTML5的、轻量级的、实现移动端全平台统一UI的多媒体播放器，该播放器已经在千万级设备上适配使用。</p></li><li><p>GitHub地址 ：<a href="https://github.com/ireaderlab/zyMedia" target="_blank" rel="noopener">https://github.com/ireaderlab/zyMedia</a></p></li></ul><h3 id="其他移动端常见插件"><a href="#其他移动端常见插件" class="headerlink" title="其他移动端常见插件"></a>其他移动端常见插件</h3><ul><li><a href="http://www.superslide2.com/" target="_blank" rel="noopener">superslide</a></li><li><a href="https://github.com/cubiq/iscroll" target="_blank" rel="noopener">iscroll</a></li></ul><h2 id="移动端常用开发框架"><a href="#移动端常用开发框架" class="headerlink" title="移动端常用开发框架"></a>移动端常用开发框架</h2><h3 id="框架概述"><a href="#框架概述" class="headerlink" title="框架概述"></a>框架概述</h3><ul><li>框架，顾名思义就是一套架构，它会基于自身的特点向用户提供一套较为完整的解决方案。框架的控制权在框架本身，使用者要按照框架所规定的某种规范进行开发。</li><li>前端常用的框架有<strong>Bootstrap</strong>、<strong>Vue</strong>、<strong>Angular</strong>、<strong>React</strong>等等。既能开发PC端，也能开发移动端。</li></ul><h3 id="使用Bootstrap轮播图"><a href="#使用Bootstrap轮播图" class="headerlink" title="使用Bootstrap轮播图"></a>使用Bootstrap轮播图</h3><blockquote><p>  详见 <a href="https://v3.bootcss.com/javascript/#collapse" target="_blank" rel="noopener">https://v3.bootcss.com/javascript/#collapse</a></p></blockquote><ol><li>引入相关JS文件(Bootstrap依赖JQuery)</li><li>复制HTML结构</li><li>修改对应样式</li><li>修改相应JS参数</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Bootstrap轮播图的HTML结构 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"carousel-example-generic"</span> <span class="attr">class</span>=<span class="string">"carousel slide"</span> <span class="attr">data-ride</span>=<span class="string">"carousel"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Indicators 小圆点导航模块--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ol</span> <span class="attr">class</span>=<span class="string">"carousel-indicators"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">"#carousel-example-generic"</span> <span class="attr">data-slide-to</span>=<span class="string">"0"</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">"#carousel-example-generic"</span> <span class="attr">data-slide-to</span>=<span class="string">"1"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">"#carousel-example-generic"</span> <span class="attr">data-slide-to</span>=<span class="string">"2"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Wrapper for slides 图片滑动模块--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"carousel-inner"</span> <span class="attr">role</span>=<span class="string">"listbox"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item active"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"..."</span> <span class="attr">alt</span>=<span class="string">"..."</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"carousel-caption"</span>&gt;</span></span><br><span class="line">                ...</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"..."</span> <span class="attr">alt</span>=<span class="string">"..."</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"carousel-caption"</span>&gt;</span></span><br><span class="line">                ...</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        ...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Controls 控制箭头(上一张、下一张)模块--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"left carousel-control"</span> <span class="attr">href</span>=<span class="string">"#carousel-example-generic"</span> <span class="attr">role</span>=<span class="string">"button"</span> <span class="attr">data-slide</span>=<span class="string">"prev"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-chevron-left"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"sr-only"</span>&gt;</span>Previous<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"right carousel-control"</span> <span class="attr">href</span>=<span class="string">"#carousel-example-generic"</span> <span class="attr">role</span>=<span class="string">"button"</span> <span class="attr">data-slide</span>=<span class="string">"next"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-chevron-right"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"sr-only"</span>&gt;</span>Next<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;  &lt;em&gt;『 注 : 本笔记摘自视频 &lt;a href=&quot;https://www.bilibili.com/video/BV1k4411w7sV&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;JavaScript核心 DOM BOM操作&lt;/a&gt;，如有侵权,请联系删除。』&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://www.hardape.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JavaScript" scheme="https://www.hardape.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="https://www.hardape.top/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>14-PC端网页特效</title>
    <link href="https://www.hardape.top/article/9c2ad406.html"/>
    <id>https://www.hardape.top/article/9c2ad406.html</id>
    <published>2020-04-20T08:21:20.000Z</published>
    <updated>2020-05-22T13:41:17.694Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>  <em>『 注 : 本笔记摘自视频 <a href="https://www.bilibili.com/video/BV1k4411w7sV" target="_blank" rel="noopener">JavaScript核心 DOM BOM操作</a>，如有侵权,请联系删除。』</em></p></blockquote><a id="more"></a><h2 id="元素偏移量offset系列"><a href="#元素偏移量offset系列" class="headerlink" title="元素偏移量offset系列"></a>元素偏移量offset系列</h2><h3 id="offset概述"><a href="#offset概述" class="headerlink" title="offset概述"></a>offset概述</h3><p>offset，即偏移量，使用offset系列相关属性可以<strong>动态的</strong>得到该元素的位置(偏移)、大小等。</p><ul><li>获得元素距离<strong>带有定位父元素</strong>的位置，无定位父元素以body为准</li><li>获得元素自身的大小(宽高)</li><li>注意：<strong>返回的数值都不带单位</strong></li></ul><h3 id="offset系列常用属性"><a href="#offset系列常用属性" class="headerlink" title="offset系列常用属性"></a>offset系列常用属性</h3><table><thead><tr><th>offset系列常用属性</th><th>说明</th></tr></thead><tbody><tr><td><code>element.offsetParent</code></td><td>返回作为该元素带有定位的父级元素，如果父级都没有定位则返回body</td></tr><tr><td><code>element.offsetTop</code></td><td>返回元素相对带有定位父元素上方的偏移</td></tr><tr><td><code>elemetn.offsetLeft</code></td><td>返回元素相对带有定位父元素边框的偏移</td></tr><tr><td><code>element.offsetWidth</code></td><td>返回自身包括padding、边框、内容区的宽度</td></tr><tr><td><code>element.offsetHeight</code></td><td>返回自身包括padding、边框、内容区的高度</td></tr></tbody></table><p><img src= /img/loading.gif data-src="https://gitee.com/code-ape/blogImage/raw/master/img/image-20200419115148338.png" alt="image-20200419115148338"></p><h3 id="offset与style的比较"><a href="#offset与style的比较" class="headerlink" title="offset与style的比较"></a>offset与style的比较</h3><h4 id="offset"><a href="#offset" class="headerlink" title="offset"></a>offset</h4><ul><li>offset可以得到任意样式表中的样式值</li><li>offset系列获取的数值是没有单位的</li><li>offsetWidth包含padding+border+width</li><li>offsetWidth等属性是只读属性，只能获取不能复制</li><li><strong>所以，想要获取元素大小位置，用offset更合适</strong></li></ul><h4 id="style"><a href="#style" class="headerlink" title="style"></a>style</h4><ul><li>style只能得到行内样式表中的样式值</li><li>style.width获得的是带有单位的字符串</li><li>style.width获得不包含padding和border的值</li><li>style.width是可读写属性，可以获取也可以赋值</li><li><strong>所以，想要给元素更改大小位置，需要用style改变</strong></li></ul><h3 id="案例1-获取鼠标在盒子内的坐标"><a href="#案例1-获取鼠标在盒子内的坐标" class="headerlink" title="案例1-获取鼠标在盒子内的坐标"></a>案例1-获取鼠标在盒子内的坐标</h3><h4 id="结构-HTML"><a href="#结构-HTML" class="headerlink" title="结构(HTML)"></a>结构(HTML)</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 获取鼠标在盒子内的坐标案例 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>获取鼠标在盒子内的坐标案例<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"showPosition"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="样式-CSS"><a href="#样式-CSS" class="headerlink" title="样式(CSS)"></a>样式(CSS)</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.div</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: skyblue;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.showPosition</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">80px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">1px</span> <span class="number">1px</span> <span class="number">2px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.showPosition</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">''</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">26px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">    <span class="attribute">border-right</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">45deg</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="行为-JS"><a href="#行为-JS" class="headerlink" title="行为(JS)"></a>行为(JS)</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> div = <span class="built_in">document</span>.querySelector(<span class="string">'.div'</span>);</span><br><span class="line"><span class="keyword">var</span> showPosition = <span class="built_in">document</span>.querySelector(<span class="string">'.showPosition'</span>);</span><br><span class="line"><span class="comment">// 显示坐标的盒子在位置在鼠标上</span></span><br><span class="line">div.addEventListener(<span class="string">'mousemove'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">    showPosition.style.left = e.pageX - <span class="number">15</span> + <span class="string">'px'</span>;</span><br><span class="line">    showPosition.style.top = e.pageY - <span class="number">40</span> + <span class="string">'px'</span>;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 点击盒子显示盒子内位置，1秒后位置信息隐藏</span></span><br><span class="line"><span class="comment">// 盒子内坐标 = 鼠标页面坐标 - 盒子坐标</span></span><br><span class="line">div.addEventListener(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">    showPosition.style.display = <span class="string">'block'</span>;</span><br><span class="line">    <span class="keyword">var</span> x = e.pageX - <span class="keyword">this</span>.offsetLeft;</span><br><span class="line">    <span class="keyword">var</span> y = e.pageY - <span class="keyword">this</span>.offsetTop;</span><br><span class="line">    showPosition.innerHTML = <span class="string">'('</span> + x + <span class="string">','</span> + y + <span class="string">')'</span>;</span><br><span class="line">    <span class="built_in">window</span>.setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        showPosition.style.display = <span class="string">'none'</span>;</span><br><span class="line">    &#125;, <span class="number">1000</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h4><p><img src= /img/loading.gif data-src="https://gitee.com/code-ape/blogImage/raw/master/img/box-mouse-position.gif" alt="box-mouse-position"></p><h3 id="案例2-拖动模态框"><a href="#案例2-拖动模态框" class="headerlink" title="案例2-拖动模态框"></a>案例2-拖动模态框</h3><h4 id="结构-HTML-1"><a href="#结构-HTML-1" class="headerlink" title="结构(HTML)"></a>结构(HTML)</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 拖动模态框案例 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span> <span class="attr">class</span>=<span class="string">"login"</span>&gt;</span>点击，弹出登录框<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"login-wrapper"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"close-btn"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>关闭<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"login-title"</span>&gt;</span>登录会员<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"login-content"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"login-input"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"uname"</span>&gt;</span>用户名:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">"uname"</span> <span class="attr">placeholder</span>=<span class="string">"请输入用户名"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"login-input"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"upwd"</span>&gt;</span>密码:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">"upwd"</span> <span class="attr">placeholder</span>=<span class="string">"请输入密码"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"login-btn"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>登录会员<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 遮罩层 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"mask"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="样式-CSS-1"><a href="#样式-CSS-1" class="headerlink" title="样式(CSS)"></a>样式(CSS)</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.login</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.login-wrapper</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">999</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>, -<span class="number">50%</span>);</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">512px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">280px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">#ccc</span> <span class="number">1px</span> solid;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.login-title</span> &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">18px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.login-title</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">cursor</span>: move;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.login-content</span> &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.login-input</span> &#123;</span><br><span class="line">    <span class="comment">/* 清除浮动 */</span></span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.login-input</span> <span class="selector-tag">label</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">90px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">35px</span>;</span><br><span class="line">    <span class="attribute">padding-right</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">35px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: right;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.login-input</span> <span class="selector-tag">input</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">350px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">35px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">35px</span>;</span><br><span class="line">    <span class="attribute">text-indent</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">#ccc</span> <span class="number">1px</span> solid;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.login-btn</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">20px</span> auto;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">#ccc</span> <span class="number">1px</span> solid;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.login-btn</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.close-btn</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">'关闭'</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: -<span class="number">21px</span>;</span><br><span class="line">    <span class="attribute">right</span>: -<span class="number">21px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">42px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">42px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">42px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.mask</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">3</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="行为-JS-1"><a href="#行为-JS-1" class="headerlink" title="行为(JS)"></a>行为(JS)</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> login = <span class="built_in">document</span>.querySelector(<span class="string">'.login'</span>);</span><br><span class="line"><span class="keyword">var</span> loginWrapper = <span class="built_in">document</span>.querySelector(<span class="string">'.login-wrapper'</span>)</span><br><span class="line"><span class="keyword">var</span> closeBtn = <span class="built_in">document</span>.querySelector(<span class="string">'.close-btn'</span>);</span><br><span class="line"><span class="keyword">var</span> loginMove = <span class="built_in">document</span>.querySelector(<span class="string">'.login-title'</span>);</span><br><span class="line"><span class="keyword">var</span> mask = <span class="built_in">document</span>.querySelector(<span class="string">'.mask'</span>);</span><br><span class="line"><span class="comment">// 点击登录链接,显示遮罩层和登录框</span></span><br><span class="line">login.addEventListener(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    loginWrapper.style.display = <span class="string">'block'</span>;</span><br><span class="line">    mask.style.display = <span class="string">'block'</span>;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 点击关闭按钮,隐藏遮罩层和登录框</span></span><br><span class="line">closeBtn.addEventListener(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    loginWrapper.style.display = <span class="string">'none'</span>;</span><br><span class="line">    mask.style.display = <span class="string">'none'</span>;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 1.当鼠标按下，获得鼠标在登录框中的坐标</span></span><br><span class="line">loginMove.addEventListener(<span class="string">'mousedown'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> x = e.pageX - loginWrapper.offsetLeft;</span><br><span class="line">    <span class="keyword">var</span> y = e.pageY - loginWrapper.offsetTop;</span><br><span class="line">    <span class="comment">// 2.当鼠标移动时，鼠标在页面中的坐标减去鼠标在盒子内的坐标就是模态框的坐标</span></span><br><span class="line">    <span class="built_in">document</span>.addEventListener(<span class="string">'mousemove'</span>, move);</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">move</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">        loginWrapper.style.left = e.pageX - x + <span class="string">'px'</span>;</span><br><span class="line">        loginWrapper.style.top = e.pageY - y + <span class="string">'px'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 3.当鼠标停止时，移除鼠标移动事件</span></span><br><span class="line">    <span class="built_in">document</span>.addEventListener(<span class="string">'mouseup'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">document</span>.removeEventListener(<span class="string">'mousemove'</span>, move);</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="效果-1"><a href="#效果-1" class="headerlink" title="效果"></a>效果</h4><img src= /img/loading.gif data-src="https://gitee.com/code-ape/blogImage/raw/master/img/login-model-frame.gif" alt="login-model-frame" style="zoom:67%;" /><h3 id="案例3-仿京东商品放大镜效果"><a href="#案例3-仿京东商品放大镜效果" class="headerlink" title="案例3-仿京东商品放大镜效果"></a>案例3-仿京东商品放大镜效果</h3><h4 id="结构-HTML-2"><a href="#结构-HTML-2" class="headerlink" title="结构(HTML)"></a>结构(HTML)</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"preview"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/jd-switch.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"preview-img"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"magnify-mask"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"magnify"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/jd-switch.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"magnify-img"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="样式-CSS-2"><a href="#样式-CSS-2" class="headerlink" title="样式(CSS)"></a>样式(CSS)</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.preview</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">450px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">450px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.preview-img</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.magnify</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">450px</span>;</span><br><span class="line">    <span class="attribute">top</span>: -<span class="number">1px</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">545px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">545px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.magnify-img</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.magnify-mask</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">304px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">304px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fede4f</span>;</span><br><span class="line">    <span class="attribute">opacity</span>: .<span class="number">5</span>;</span><br><span class="line">    <span class="attribute">cursor</span>: move;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="结构-JS"><a href="#结构-JS" class="headerlink" title="结构(JS)"></a>结构(JS)</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> preview = <span class="built_in">document</span>.querySelector(<span class="string">'.preview'</span>);</span><br><span class="line"><span class="keyword">var</span> mask = <span class="built_in">document</span>.querySelector(<span class="string">'.magnify-mask'</span>);</span><br><span class="line"><span class="keyword">var</span> magnify = <span class="built_in">document</span>.querySelector(<span class="string">'.magnify'</span>)</span><br><span class="line"><span class="keyword">var</span> magnifyImg = magnify.querySelector(<span class="string">'img'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 1.鼠标经过图片显示遮罩层和大盒子</span></span><br><span class="line">preview.addEventListener(<span class="string">'mouseover'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    mask.style.display = <span class="string">'block'</span>;</span><br><span class="line">    magnify.style.display = <span class="string">'block'</span>;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 2.鼠标离开图片显示遮罩层和大盒子</span></span><br><span class="line">preview.addEventListener(<span class="string">'mouseout'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    mask.style.display = <span class="string">'none'</span>;</span><br><span class="line">    magnify.style.display = <span class="string">'none'</span>;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">preview.addEventListener(<span class="string">'mousemove'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 1.计算出鼠标在盒子中的坐标</span></span><br><span class="line">    <span class="keyword">var</span> x = e.pageX - <span class="keyword">this</span>.offsetLeft;</span><br><span class="line">    <span class="keyword">var</span> y = e.pageY - <span class="keyword">this</span>.offsetTop;</span><br><span class="line">    <span class="comment">// 2.计算出遮罩层在盒子中的随鼠标移动(鼠标在遮罩层中心)的坐标</span></span><br><span class="line">    <span class="keyword">var</span> maskX = x - mask.offsetWidth / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">var</span> maskY = y - mask.offsetWidth / <span class="number">2</span>;</span><br><span class="line">    <span class="comment">// 3.限制遮罩层在盒子中的坐标范围</span></span><br><span class="line">    <span class="keyword">var</span> maskMaxX = preview.offsetWidth - mask.offsetWidth;</span><br><span class="line">    <span class="keyword">var</span> maskMaxY = preview.offsetHeight - mask.offsetHeight;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (maskX &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">        maskX = <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (maskX &gt;= maskMaxX) &#123;</span><br><span class="line">        maskX = maskMaxX;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (maskY &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">        maskY = <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (maskY &gt;= maskMaxY) &#123;</span><br><span class="line">        maskY = maskMaxY;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 4.设置遮罩层的坐标</span></span><br><span class="line">    mask.style.left = maskX + <span class="string">'px'</span>;</span><br><span class="line">    mask.style.top = maskY + <span class="string">'px'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 5.计算放大图片移动距离比例</span></span><br><span class="line">    <span class="keyword">var</span> times = magnifyImg.offsetWidth / preview.offsetWidth;</span><br><span class="line"></span><br><span class="line">    magnifyImg.style.left = -maskX * times + <span class="string">'px'</span>;</span><br><span class="line">    magnifyImg.style.top = -maskY * times + <span class="string">'px'</span>;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="效果-2"><a href="#效果-2" class="headerlink" title="效果"></a>效果</h4><p><img src= /img/loading.gif data-src="https://gitee.com/code-ape/blogImage/raw/master/img/jd-magnify.gif" alt="jd-magnify"></p><h2 id="元素可视区client系列"><a href="#元素可视区client系列" class="headerlink" title="元素可视区client系列"></a>元素可视区client系列</h2><p>client，即客户端，使用client系列的相关属性来获取元素可视区的相关信息。通过client系列的相关属性可以动态地得到该元素的边框大小、元素大小等。</p><h3 id="client系列常用属性"><a href="#client系列常用属性" class="headerlink" title="client系列常用属性"></a>client系列常用属性</h3><table><thead><tr><th>client系列常用属性</th><th>说明</th></tr></thead><tbody><tr><td><code>element.clientTop</code></td><td>返回元素上边框的大小</td></tr><tr><td><code>element.clientLeft</code></td><td>返回元素左边框的大小</td></tr><tr><td><code>element.clientWidth</code></td><td>返回自身包括paddig、内容区的宽度，不含边框，返回数值不带单位</td></tr><tr><td><code>element.clientHeight</code></td><td>返回自身包括paddig、内容区的高度，不含边框，返回数值不带单位</td></tr></tbody></table><p><img src= /img/loading.gif data-src="https://gitee.com/code-ape/blogImage/raw/master/img/image-20200419115209789.png" alt="image-20200419115209789"></p><h2 id="案例-淘宝flexible-js源码分析"><a href="#案例-淘宝flexible-js源码分析" class="headerlink" title="案例-淘宝flexible.js源码分析"></a>案例-淘宝flexible.js源码分析</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 立即执行函数</span></span><br><span class="line">(<span class="function"><span class="keyword">function</span> <span class="title">flexible</span>(<span class="params">window, document</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 获取的html 的根元素</span></span><br><span class="line">    <span class="keyword">var</span> docEl = <span class="built_in">document</span>.documentElement</span><br><span class="line">    <span class="comment">// dpr 物理像素比</span></span><br><span class="line">    <span class="keyword">var</span> dpr = <span class="built_in">window</span>.devicePixelRatio || <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// adjust body font size  设置我们body 的字体大小</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">setBodyFontSize</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 如果页面中有body 这个元素 就设置body的字体大小</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">document</span>.body) &#123;</span><br><span class="line">            <span class="built_in">document</span>.body.style.fontSize = (<span class="number">12</span> * dpr) + <span class="string">'px'</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 如果页面中没有body 这个元素，则等着 我们页面主要的DOM元素加载完毕再去设置body的字体大小</span></span><br><span class="line">            <span class="built_in">document</span>.addEventListener(<span class="string">'DOMContentLoaded'</span>, setBodyFontSize)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    setBodyFontSize();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// set 1rem = viewWidth / 10  设置我们html 元素的文字大小</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">setRemUnit</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> rem = docEl.clientWidth / <span class="number">10</span></span><br><span class="line">        docEl.style.fontSize = rem + <span class="string">'px'</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    setRemUnit()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// reset rem unit on page resize  当我们页面尺寸大小发生变化的时候，要重新设置下rem 的大小</span></span><br><span class="line">    <span class="built_in">window</span>.addEventListener(<span class="string">'resize'</span>, setRemUnit)</span><br><span class="line">    <span class="comment">// pageshow 是我们重新加载页面触发的事件</span></span><br><span class="line">    <span class="built_in">window</span>.addEventListener(<span class="string">'pageshow'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// e.persisted 返回的是true 表示如果这个页面是从缓存取过来的页面，也需要从新计算一下rem 的大小</span></span><br><span class="line">        <span class="keyword">if</span> (e.persisted) &#123;</span><br><span class="line">            setRemUnit()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// detect 0.5px supports  有些移动端的浏览器不支持0.5像素的写法</span></span><br><span class="line">    <span class="keyword">if</span> (dpr &gt;= <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> fakeBody = <span class="built_in">document</span>.createElement(<span class="string">'body'</span>)</span><br><span class="line">        <span class="keyword">var</span> testElement = <span class="built_in">document</span>.createElement(<span class="string">'div'</span>)</span><br><span class="line">        testElement.style.border = <span class="string">'.5px solid transparent'</span></span><br><span class="line">        fakeBody.appendChild(testElement)</span><br><span class="line">        docEl.appendChild(fakeBody)</span><br><span class="line">        <span class="keyword">if</span> (testElement.offsetHeight === <span class="number">1</span>) &#123;</span><br><span class="line">            docEl.classList.add(<span class="string">'hairlines'</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        docEl.removeChild(fakeBody)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;(<span class="built_in">window</span>, <span class="built_in">document</span>))</span><br></pre></td></tr></table></figure><h3 id="立即执行函数"><a href="#立即执行函数" class="headerlink" title="立即执行函数"></a>立即执行函数</h3><p>立即执行函数：不需要调用，立马能够自己执行的函数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.第一种写法</span></span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;)()</span><br><span class="line"><span class="comment">// 2.第二种写法</span></span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;())</span><br></pre></td></tr></table></figure><ul><li>多个立即执行函数间需用 <code>;</code>隔开</li><li>主要作用：创建一个独立的作用域。避免的命名冲突问题 </li></ul><h3 id="设备的物理像素比"><a href="#设备的物理像素比" class="headerlink" title="设备的物理像素比"></a>设备的物理像素比</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.devicePixelRatio</span><br></pre></td></tr></table></figure><h3 id="window-onpageshow事件"><a href="#window-onpageshow事件" class="headerlink" title="window.onpageshow事件"></a>window.onpageshow事件</h3><p><code>onpageshow</code>事件用于重新加载页面时触发</p><h4 id="pageshow和load的区别"><a href="#pageshow和load的区别" class="headerlink" title="pageshow和load的区别"></a>pageshow和load的区别</h4><ul><li>三种情况会刷新页面会触发<code>load</code>事件：<strong>a标签的超链接</strong>、<strong>F5或者刷新按钮(强制刷新)</strong>、<strong>前进后退按钮</strong></li><li>但在火狐中，存在”往返缓存”，这个缓存中不仅保存着页面数据，还保存了DOM和JavaScript的状态，实际上是将整个页面都保存在了内存里。所以次数后退按钮不能刷新页面。</li><li>此时可以使用<code>pageshow</code>事件来触发，这个事件在页面显示时触发，无论页面是否来自缓存。在重新加载页面过程中，<code>pageshow</code>会在<code>load</code>事件后触发；根据事件对象中的<strong><code>presisted</code></strong>来判断是否是缓存中的页面触发的<code>pageshow</code>事件，注意这个事件给window添加。</li></ul><h2 id="元素滚动scroll系列"><a href="#元素滚动scroll系列" class="headerlink" title="元素滚动scroll系列"></a>元素滚动scroll系列</h2><p>scroll，即滚动，使用scroll系列的相关属性可以动态地得到该元素的大小、滚动距离等</p><h3 id="scroll系列常用属性"><a href="#scroll系列常用属性" class="headerlink" title="scroll系列常用属性"></a>scroll系列常用属性</h3><table><thead><tr><th>scroll系列常用属性</th><th>说明</th></tr></thead><tbody><tr><td><code>element.scrollTop</code></td><td>返回被卷去的上侧距离，返回数值不带单位</td></tr><tr><td><code>element.scrollLeft</code></td><td>返回被卷去的左侧距离，返回数值不带单位</td></tr><tr><td><code>element.scrollWidth</code></td><td>返回自身实际的宽度，不含边框，返回数值不带单位</td></tr><tr><td><code>element.scrollHeight</code></td><td>返回自身实际的高度，不含边框，返回数值不带单位</td></tr></tbody></table><img src= /img/loading.gif data-src="https://gitee.com/code-ape/blogImage/raw/master/img/image-20200419094441783.png" alt="image-20200419094441783" style="zoom:67%;" /><h3 id="页面被卷去的头部"><a href="#页面被卷去的头部" class="headerlink" title="页面被卷去的头部"></a>页面被卷去的头部</h3><ul><li>如果浏览器的高(或宽)度不足以显示整个页面时，会自动出现滚动条。当滚动条向下滚动时，页面上面被隐藏掉的高度，称为<strong>页面被卷去的头部</strong>。滚动条在滚动时会触发<strong><code>onscroll</code></strong>事件。</li><li>页面被卷去的头部可以通过<strong><code>window.pageYOffset</code></strong>获得，如果是被卷去的左侧可通过<strong><code>window.pageXOffset</code></strong>获得</li><li>注意，元素被卷去的头部是<code>element.scrollTop</code></li></ul><h4 id="页面被卷去的头部兼容性方案"><a href="#页面被卷去的头部兼容性方案" class="headerlink" title="页面被卷去的头部兼容性方案"></a>页面被卷去的头部兼容性方案</h4><p>需要注意的是，页面被卷去的头部，有兼容性问题，一次被卷去的头部通常有如下几种写法:</p><ul><li>声明了DTD，使用<code>document.documentElement.scrollTop</code></li><li>未声明DTD，使用<code>document.body.scrollTop</code></li><li>新方法<code>window.pageYOffset</code>和<code>window.pageOffset</code>，IE9开始支持</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getScroll</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        left: <span class="built_in">window</span>.pageXOffset || <span class="built_in">document</span>.documentElement.scrollLeft || <span class="built_in">document</span>.body.scrollLeft || <span class="number">0</span>,</span><br><span class="line">        top: <span class="built_in">window</span>.pageYOffset || <span class="built_in">document</span>.documentElement.scrollTop || <span class="built_in">document</span>.body.scrollTop || <span class="number">0</span></span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：使用时 <code>getScroll().left</code></p><h3 id="案例-仿淘宝固定侧边栏"><a href="#案例-仿淘宝固定侧边栏" class="headerlink" title="案例-仿淘宝固定侧边栏"></a>案例-仿淘宝固定侧边栏</h3><h4 id="结构-HTML-3"><a href="#结构-HTML-3" class="headerlink" title="结构(HTML)"></a>结构(HTML)</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 仿淘宝固定侧边栏 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"w"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"top"</span>&gt;</span>top<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"banner"</span>&gt;</span>banner<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 内容模块 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/goods.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/shopping.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/good-store.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/live.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/life.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/play.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/shihui.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/love.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"footer"</span>&gt;</span>footer<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 侧边栏 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"fixed-tool"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"lshopping-goods current lift"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>爱逛好货<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"store-live lift"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>好店直播<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"quality-feature lift"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>品质特色<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"benefit-hot lift"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>实惠热卖<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"guess-love lift"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>猜你喜欢<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"return-top"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>顶部<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"feed-back"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>反馈<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"tip-off"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>暴恐举报<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="样式-CSS-3"><a href="#样式-CSS-3" class="headerlink" title="样式(CSS)"></a>样式(CSS)</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#3c3c3c</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">ul</span> &#123;</span><br><span class="line">    <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#f4f4f4</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.w</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">1190px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.top</span> &#123;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ff8600</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.banner</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ffc229</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.content</span>&gt;<span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">500px</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.content</span> <span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">text-align</span>: left;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span>&gt;<span class="selector-tag">div</span><span class="selector-pseudo">:nth-child(n+4)</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#31ba98</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span>&gt;<span class="selector-tag">div</span><span class="selector-pseudo">:nth-child(3)</span> <span class="selector-tag">img</span>&#123;</span><br><span class="line">    <span class="attribute">height</span>: auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.left</span>,</span><br><span class="line"><span class="selector-class">.right</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">49%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.left</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.right</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.left</span> <span class="selector-tag">img</span>,</span><br><span class="line"><span class="selector-class">.right</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">24px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.footer</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">250px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#997aff</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.fixed-tool</span> &#123;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">548px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">600px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">7px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.fixed-tool</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.fixed-tool</span> <span class="selector-tag">li</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">-webkit-linear-gradient</span>(left top, #ff971b, #ff5000);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.fixed-tool</span> <span class="selector-tag">li</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid transparent <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.fixed-tool</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#efefef</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.fixed-tool</span> <span class="selector-tag">li</span><span class="selector-pseudo">:last-child</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.shopping-goods</span> <span class="selector-tag">a</span>,</span><br><span class="line"><span class="selector-class">.store-live</span> <span class="selector-tag">a</span>,</span><br><span class="line"><span class="selector-class">.guess-love</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ff4400</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.quality-feature</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#8d7afb</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.return-top</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.benefit-hot</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#a8c001</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.current</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">-webkit-linear-gradient</span>(left top, #ff971b, #ff5000);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.current</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid transparent <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="行为-JS-2"><a href="#行为-JS-2" class="headerlink" title="行为(JS)"></a>行为(JS)</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> tool = <span class="built_in">document</span>.querySelector(<span class="string">'.fixed-tool'</span>);</span><br><span class="line"><span class="keyword">var</span> returnTop = <span class="built_in">document</span>.querySelector(<span class="string">'.return-top'</span>);</span><br><span class="line"><span class="comment">// 获取侧边栏的offsetTop</span></span><br><span class="line"><span class="keyword">var</span> toolTop = tool.offsetTop;</span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.addEventListener(<span class="string">'scroll'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">window</span>.pageYOffset &gt;= toolTop) &#123;</span><br><span class="line">        tool.style.position = <span class="string">'fixed'</span>;</span><br><span class="line">        tool.style.top = <span class="string">'30px'</span>;</span><br><span class="line">        returnTop.style.display = <span class="string">'block'</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        tool.style.position = <span class="string">'absolute'</span>;</span><br><span class="line">        tool.style.top = toolTop + <span class="string">'px'</span>;</span><br><span class="line">        returnTop.style.display = <span class="string">'none'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="效果-3"><a href="#效果-3" class="headerlink" title="效果"></a>效果</h4><img src= /img/loading.gif data-src="https://gitee.com/code-ape/blogImage/raw/master/img/taobao-fixed-tool.gif" alt="taobao-fixed-tool" style="zoom: 67%;" /><h2 id="动画函数封装"><a href="#动画函数封装" class="headerlink" title="动画函数封装"></a>动画函数封装</h2><h3 id="动画实现原理"><a href="#动画实现原理" class="headerlink" title="动画实现原理"></a>动画实现原理</h3><ul><li>核心原理：通过定时器<code>setInterval()</code>不断移动盒子的位置</li><li>实现步骤：(1) 获得盒子当前位置；(2) 让盒子在当前位置加上1个移动距离；(3)利用定时器不断重复这个操作；(4)加一个结束定时器的条件</li><li>注意：此元素需要添加定位，才能使用<code>element.style.left</code>和<code>element.style.top</code></li></ul><h3 id="动画实现案例"><a href="#动画实现案例" class="headerlink" title="动画实现案例"></a>动画实现案例</h3><h4 id="结构-HTML-4"><a href="#结构-HTML-4" class="headerlink" title="结构(HTML)"></a>结构(HTML)</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 简易动画实现案例 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"go"</span>&gt;</span>盒子快走<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"move-div"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="样式-CSS-4"><a href="#样式-CSS-4" class="headerlink" title="样式(CSS)"></a>样式(CSS)</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.move-div</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: skyblue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="行为-JS-3"><a href="#行为-JS-3" class="headerlink" title="行为(JS)"></a>行为(JS)</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> div = <span class="built_in">document</span>.querySelector(<span class="string">'.move-div'</span>);</span><br><span class="line"><span class="keyword">var</span> btn = <span class="built_in">document</span>.querySelector(<span class="string">'.go'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 点击盒子盒子移动</span></span><br><span class="line">btn.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> timer = setInterval(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (div.offsetLeft &gt;= <span class="number">400</span>) &#123;</span><br><span class="line">            <span class="comment">// 停止动画，本质是停止定时器</span></span><br><span class="line">            clearInterval(timer);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            div.style.left = div.offsetLeft + <span class="number">1</span> + <span class="string">'px'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, <span class="number">15</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="效果-4"><a href="#效果-4" class="headerlink" title="效果"></a>效果</h4><img src= /img/loading.gif data-src="https://gitee.com/code-ape/blogImage/raw/master/img/div-move.gif" style="zoom:67%;" /><h3 id="动画函数简单封装"><a href="#动画函数简单封装" class="headerlink" title="动画函数简单封装"></a>动画函数简单封装</h3><p>注意函数需要传递两个参数，<strong>动画对象</strong>和<strong>移动到的距离</strong>，以上述动画封装为例：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 简单动画函数封装，obj-目标对象，target-目标位置</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">animate</span>(<span class="params">obj, target</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> timer = setInterval(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (obj.offsetLeft &gt;= target) &#123;</span><br><span class="line">            <span class="comment">// 停止动画，本质是停止定时器</span></span><br><span class="line">            clearInterval(timer);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            obj.style.left = obj.offsetLeft + <span class="number">1</span> + <span class="string">'px'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, <span class="number">20</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="动画函数给不同元素记录不同计时器"><a href="#动画函数给不同元素记录不同计时器" class="headerlink" title="动画函数给不同元素记录不同计时器"></a>动画函数给不同元素记录不同计时器</h3><ul><li>如果多个元素都使用这个动画函数，每次都要<code>var</code>声明计时器。可以给不同的元素使用不同的定时器(自己专门用自己的定时器)</li><li>核心原理：利用JS是一门动态语言，可以很方便地给当前对象添加属性</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 简单动画函数封装，obj-目标对象，target-目标位置</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">animate</span>(<span class="params">obj, target</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 当我们不断点击按钮时元素的盒子会越来越快，因为开启了太多的定时器</span></span><br><span class="line">    <span class="comment">// 解决方案，使元素只有一个定时器执行</span></span><br><span class="line">    <span class="comment">// 先清除以前的定时器，只保留当前的一个定时器执行</span></span><br><span class="line">    clearInterval(obj.timer);</span><br><span class="line">    <span class="comment">// 将定时器定义为目标对象的属性</span></span><br><span class="line">    obj.timer = setInterval(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (obj.offsetLeft &gt;= target) &#123;</span><br><span class="line">            <span class="comment">// 停止动画，本质是停止定时器</span></span><br><span class="line">            clearInterval(obj.timer);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            obj.style.left = obj.offsetLeft + <span class="number">1</span> + <span class="string">'px'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, <span class="number">20</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="缓动动画"><a href="#缓动动画" class="headerlink" title="缓动动画"></a>缓动动画</h3><ul><li>缓动动画就是让元素运动速度有所变化，最常见的是让速度慢慢停下来</li><li>思路：让盒子每次一到的距离慢慢变小，速度就会慢慢落下来</li><li>核心算法：<code>(目标值 - 现在的位置) / 10</code> 作为每次移动的距离步长，10可自定义</li><li>需要把步长值改为整数，否则真实停止距离和目标距离会有误差</li><li>步长取整需要判断正负，否则动画往返时由于步长正负值取整后绝对值不一致，导致位置出现偏差</li><li>动画函数在多个目标值之间移动，判断步长，如果是正值，则往大取整；如果是负值，往小取整。</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// 简单动画函数封装，obj-目标对象，target-目标位置</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">animate</span>(<span class="params">obj, target</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 当我们不断点击按钮时元素的盒子会越来越快，因为开启了太多的定时器</span></span><br><span class="line">    <span class="comment">// 解决方案，使元素只有一个定时器执行</span></span><br><span class="line">    <span class="comment">// 先清除以前的定时器，只保留当前的一个定时器执行</span></span><br><span class="line">    clearInterval(obj.timer);</span><br><span class="line">    <span class="comment">// 将定时器定义为目标对象的属性</span></span><br><span class="line">    obj.timer = setInterval(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 定义缓动动画的步长，并取整，判断正负以解决step正负值取整绝对值不一致问题</span></span><br><span class="line">        <span class="keyword">var</span> step = (target - obj.offsetLeft) / <span class="number">10</span>;</span><br><span class="line">        step = step &gt; <span class="number">0</span> ? <span class="built_in">Math</span>.ceil(step) : <span class="built_in">Math</span>.floor(step);</span><br><span class="line">        <span class="keyword">if</span> (obj.offsetLeft == target) &#123;</span><br><span class="line">            <span class="comment">// 停止动画，本质是停止定时器</span></span><br><span class="line">            clearInterval(obj.timer);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            obj.style.left = obj.offsetLeft + step + <span class="string">'px'</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, <span class="number">15</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 点击按钮盒子移动</span></span><br><span class="line">btn.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    animate(div, <span class="number">500</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src= /img/loading.gif data-src="https://gitee.com/code-ape/blogImage/raw/master/img/div-move2.gif" alt="div-move2" style="zoom:67%;" /><h3 id="动画函数添加回调函数"><a href="#动画函数添加回调函数" class="headerlink" title="动画函数添加回调函数"></a>动画函数添加回调函数</h3><h4 id="回调函数原理"><a href="#回调函数原理" class="headerlink" title="回调函数原理"></a>回调函数原理</h4><ul><li>函数可以作为一个参数。将这个函数作为参数传到另一个函数里面，当那个函数执行完之后，在执行传进去的这个函数，这个过程就叫做<strong>回调</strong>。</li><li>回调函数书写的位置：<strong>定时器结束的位置</strong></li><li>回调函数可使用 <code>callback &amp;&amp; callback()</code>来代替<code>if(callback){callback()}</code></li></ul><h4 id="回调函数案例"><a href="#回调函数案例" class="headerlink" title="回调函数案例"></a>回调函数案例</h4><p>仍使用上面移动盒子的案例加以添加回调函数，使其在移动到目标位置后背景颜色改变</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 简单动画函数封装，obj-目标对象，target-目标位置</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">animate</span>(<span class="params">obj, target, callback</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 当我们不断点击按钮时元素的盒子会越来越快，因为开启了太多的定时器</span></span><br><span class="line">    <span class="comment">// 解决方案，使元素只有一个定时器执行</span></span><br><span class="line">    <span class="comment">// 先清除以前的定时器，只保留当前的一个定时器执行</span></span><br><span class="line">    clearInterval(obj.timer);</span><br><span class="line">    <span class="comment">// 将定时器定义为目标对象的属性</span></span><br><span class="line">    obj.timer = setInterval(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 定义缓动动画的步长，并取整，判断正负以解决step正负值取整绝对值不一致问题</span></span><br><span class="line">        <span class="keyword">var</span> step = (target - obj.offsetLeft) / <span class="number">10</span>;</span><br><span class="line">        step = step &gt; <span class="number">0</span> ? <span class="built_in">Math</span>.ceil(step) : <span class="built_in">Math</span>.floor(step);</span><br><span class="line">        <span class="keyword">if</span> (obj.offsetLeft == target) &#123;</span><br><span class="line">            <span class="comment">// 停止动画，本质是停止定时器</span></span><br><span class="line">            clearInterval(obj.timer);</span><br><span class="line">            <span class="comment">// 回调函数写到定时器结束后</span></span><br><span class="line">            <span class="comment">// if (callback) &#123;</span></span><br><span class="line">            <span class="comment">//     callback();</span></span><br><span class="line">            <span class="comment">// &#125;</span></span><br><span class="line">            callback &amp;&amp; callback();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            obj.style.left = obj.offsetLeft + step + <span class="string">'px'</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, <span class="number">15</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 点击按钮盒子移动</span></span><br><span class="line">btn.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    animate(div, <span class="number">500</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        div.style.backgroundColor = <span class="string">'blue'</span>;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src= /img/loading.gif data-src="https://gitee.com/code-ape/blogImage/raw/master/img/div-move3.gif" alt="div-move3" style="zoom:67%;" /><h3 id="案例-利用动画函数完成滑动栏"><a href="#案例-利用动画函数完成滑动栏" class="headerlink" title="案例-利用动画函数完成滑动栏"></a>案例-利用动画函数完成滑动栏</h3><h4 id="animate-js"><a href="#animate-js" class="headerlink" title="animate.js"></a>animate.js</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 简单动画函数封装，obj-目标对象，target-目标位置</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">animate</span>(<span class="params">obj, target, callback</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 当我们不断点击按钮时元素的盒子会越来越快，因为开启了太多的定时器</span></span><br><span class="line">    <span class="comment">// 解决方案，使元素只有一个定时器执行</span></span><br><span class="line">    <span class="comment">// 先清除以前的定时器，只保留当前的一个定时器执行</span></span><br><span class="line">    clearInterval(obj.timer);</span><br><span class="line">    <span class="comment">// 将定时器定义为目标对象的属性</span></span><br><span class="line">    obj.timer = setInterval(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 定义缓动动画的步长，并取整，判断正负以解决step正负值取整绝对值不一致问题</span></span><br><span class="line">        <span class="keyword">var</span> step = (target - obj.offsetLeft) / <span class="number">10</span>;</span><br><span class="line">        step = step &gt; <span class="number">0</span> ? <span class="built_in">Math</span>.ceil(step) : <span class="built_in">Math</span>.floor(step);</span><br><span class="line">        <span class="keyword">if</span> (obj.offsetLeft == target) &#123;</span><br><span class="line">            <span class="comment">// 停止动画，本质是停止定时器</span></span><br><span class="line">            clearInterval(obj.timer);</span><br><span class="line">            <span class="comment">// 回调函数写到定时器结束后</span></span><br><span class="line">            <span class="comment">// if (callback) &#123;</span></span><br><span class="line">            <span class="comment">//     callback();</span></span><br><span class="line">            <span class="comment">// &#125;</span></span><br><span class="line">            callback &amp;&amp; callback();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            obj.style.left = obj.offsetLeft + step + <span class="string">'px'</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, <span class="number">15</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="slide-html"><a href="#slide-html" class="headerlink" title="slide.html"></a>slide.html</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.slider-bar</span> &#123;</span></span><br><span class="line">            position: fixed;</span><br><span class="line">            width: 40px;</span><br><span class="line">            height: 40px;</span><br><span class="line">            line-height: 40px;</span><br><span class="line">            text-align: center;</span><br><span class="line">            top: 300px;</span><br><span class="line">            right: 0;</span><br><span class="line">            cursor: pointer;</span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line">            font-weight: 700;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.slider-bar</span> <span class="selector-class">.content</span> &#123;</span></span><br><span class="line">            position: absolute;</span><br><span class="line">            z-index: -1;</span><br><span class="line">            top: 0;</span><br><span class="line">            left: 0;</span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 40px;</span><br><span class="line">            background-color: blue;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/animate.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"slider-bar"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>←<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span>问题反馈<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> sliderBar = <span class="built_in">document</span>.querySelector(<span class="string">'.slider-bar'</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> content = <span class="built_in">document</span>.querySelector(<span class="string">'.content'</span>);</span></span><br><span class="line"><span class="actionscript">        sliderBar.addEventListener(<span class="string">'mouseenter'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            animate(content, <span class="number">-160</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                sliderBar.children[<span class="number">0</span>].innerHTML = <span class="string">'→'</span>;</span></span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;)</span><br><span class="line"><span class="actionscript">        sliderBar.addEventListener(<span class="string">'mouseleave'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            animate(content, <span class="number">0</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                sliderBar.children[<span class="number">0</span>].innerHTML = <span class="string">'←'</span>;</span></span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="效果-5"><a href="#效果-5" class="headerlink" title="效果"></a>效果</h4><img src= /img/loading.gif data-src="https://gitee.com/code-ape/blogImage/raw/master/img/flexible-bar.gif" alt="flexible-bar" style="zoom:80%;" /><h2 id="常见网页特效案例"><a href="#常见网页特效案例" class="headerlink" title="常见网页特效案例"></a>常见网页特效案例</h2><h3 id="网页轮播图-仿淘宝"><a href="#网页轮播图-仿淘宝" class="headerlink" title="网页轮播图(仿淘宝)"></a>网页轮播图(仿淘宝)</h3><p>轮播图也称为焦点图，是网页中比较常见的网页特效。</p><h4 id="功能需求"><a href="#功能需求" class="headerlink" title="功能需求"></a>功能需求</h4><ul><li>鼠标经过轮播图模块，左右按钮显示，离开隐藏左右按钮。</li><li>点击右侧按钮一次，图片往左播放一张，一次类推，左侧按钮同理。</li><li>图片播放的同时，下面小圆圈模块跟随一起变化。</li><li>点击小圆圈，可以播放响应图片。</li><li>鼠标不经过轮播图，轮播图也会自动播放图片。</li><li>鼠标经过轮播图，自动播放停止。</li></ul><h4 id="无缝滚动"><a href="#无缝滚动" class="headerlink" title="无缝滚动"></a>无缝滚动</h4><ul><li>把轮播图中的第一张图片的li复制一份，放到轮播图ul的最后面</li><li>当图片滚动到克隆的最后一张图片时，让ul快速地、不做动画地跳到最左侧：left为0</li></ul><h4 id="节流阀"><a href="#节流阀" class="headerlink" title="节流阀"></a>节流阀</h4><ul><li>节流阀可以防止轮播图按钮连续点击这次播放过快</li><li>节流阀目的：当上一个函数动画内容执行完毕，再去执行下一行函数动画，让事件无法连续触发。</li><li>核心实现思路：利用回调函数，添加一个变量来控制，锁住函数和解锁函数。</li><li>步骤：开始时设置一个变量<code>var flag = true</code>，通过<code>if(flag) {flag = false;do something}</code>来锁住函数，利用回调函数中设置<code>flag = true</code>解锁函数</li></ul><h4 id="结构-focus-html"><a href="#结构-focus-html" class="headerlink" title="结构(focus.html)"></a>结构(focus.html)</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>仿淘宝轮播图<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入font-awesome字体图标库 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入css文件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"css/focus.css"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入移动动画 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/animate.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入js文件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/focus.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"focus"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span> <span class="attr">class</span>=<span class="string">"fa fa-angle-left prev"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span> <span class="attr">class</span>=<span class="string">"fa fa-angle-right next"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/focus-0.webp"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/focus-1.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/focus-2.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/focus-3.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/focus-4.webp"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">           </span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav"</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="样式-focus-css"><a href="#样式-focus-css" class="headerlink" title="样式(focus.css)"></a>样式(focus.css)</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">ul</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.focus</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">520px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">280px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.content</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">600%</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.focus</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.prev</span>,</span><br><span class="line"><span class="selector-class">.next</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">17px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#f1f3f7</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">25px</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateY</span>(-<span class="number">50%</span>);</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.prev</span><span class="selector-pseudo">:hover</span>,</span><br><span class="line"><span class="selector-class">.next</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">5</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.prev</span> &#123;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: left;</span><br><span class="line">    <span class="attribute">padding-left</span>: <span class="number">3px</span>;</span><br><span class="line">    <span class="attribute">border-top-right-radius</span>: <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">border-bottom-right-radius</span>: <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.next</span> &#123;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: right;</span><br><span class="line">    <span class="attribute">padding-right</span>: <span class="number">3px</span>;</span><br><span class="line">    <span class="attribute">border-top-left-radius</span>: <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">border-bottom-left-radius</span>: <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.nav</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateX</span>(-<span class="number">50%</span>);</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">7px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, .<span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.nav</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">3px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.current</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ff5000</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="行为-focus-js"><a href="#行为-focus-js" class="headerlink" title="行为(focus.js)"></a>行为(focus.js)</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">'load'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> focus = <span class="built_in">document</span>.querySelector(<span class="string">'.focus'</span>);</span><br><span class="line">    <span class="keyword">var</span> prev = <span class="built_in">document</span>.querySelector(<span class="string">'.prev'</span>);</span><br><span class="line">    <span class="keyword">var</span> next = <span class="built_in">document</span>.querySelector(<span class="string">'.next'</span>);</span><br><span class="line">    <span class="keyword">var</span> content = <span class="built_in">document</span>.querySelector(<span class="string">'.content'</span>);</span><br><span class="line">    <span class="keyword">var</span> nav = <span class="built_in">document</span>.querySelector(<span class="string">'.nav'</span>);</span><br><span class="line">    <span class="keyword">var</span> focusWidth = focus.offsetWidth;</span><br><span class="line">    <span class="keyword">var</span> num = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// flag 节流阀</span></span><br><span class="line">    <span class="keyword">var</span> flag = <span class="literal">true</span>;</span><br><span class="line">    <span class="comment">// 鼠标经过轮播图时</span></span><br><span class="line">    focus.addEventListener(<span class="string">'mouseenter'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 显示上一张、下一张箭头</span></span><br><span class="line">        prev.style.display = <span class="string">'block'</span>;</span><br><span class="line">        next.style.display = <span class="string">'block'</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 停止轮播计时器</span></span><br><span class="line">        clearInterval(timer);</span><br><span class="line">        timer = <span class="literal">null</span>; <span class="comment">// 清除定时器变量</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">// 鼠标移出轮播图时</span></span><br><span class="line">    focus.addEventListener(<span class="string">'mouseleave'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 隐藏上一张、下一张箭头</span></span><br><span class="line">        prev.style.display = <span class="string">'none'</span>;</span><br><span class="line">        next.style.display = <span class="string">'none'</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 添加轮播计时器</span></span><br><span class="line">        timer = setInterval(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="comment">// 手动调用右侧按钮点击事件</span></span><br><span class="line">            next.click();</span><br><span class="line">        &#125;, <span class="number">2000</span>);</span><br><span class="line"></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">// 封装函数，当前小圆圈添加current类，其余去除current类</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">navLisChange</span>(<span class="params">current</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; nav.children.length; i++) &#123;</span><br><span class="line">            nav.children[i].className = <span class="string">''</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        current.className = <span class="string">'current'</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; content.children.length; i++) &#123;</span><br><span class="line">        <span class="comment">// 动态创建小圆圈</span></span><br><span class="line">        <span class="keyword">var</span> li = <span class="built_in">document</span>.createElement(<span class="string">'li'</span>);</span><br><span class="line">        <span class="comment">// 给小圆圈设置自定义属性index,存储索引号</span></span><br><span class="line">        li.setAttribute(<span class="string">'index'</span>, i);</span><br><span class="line">        <span class="comment">// 动态添加小圆圈</span></span><br><span class="line">        nav.appendChild(li);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 点击小圆圈</span></span><br><span class="line">        li.addEventListener(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="comment">// 当前小圆圈添加current类，其余去除current类</span></span><br><span class="line">            navLisChange(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 图片轮播，让图片滚动【小圆圈的索引号乘以图片的宽度】距离,注意是负值</span></span><br><span class="line">            <span class="keyword">var</span> index = <span class="keyword">this</span>.getAttribute(<span class="string">'index'</span>)</span><br><span class="line">            animate(content, -focusWidth * index);</span><br><span class="line">            num = index;</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 给第一个小圆圈添加current类，表示选中</span></span><br><span class="line">    nav.children[<span class="number">0</span>].className = <span class="string">'current'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 克隆第一张图片至最后一张,使用深度拷贝</span></span><br><span class="line">    <span class="keyword">var</span> firstContentLi = content.children[<span class="number">0</span>].cloneNode(<span class="literal">true</span>);</span><br><span class="line">    content.appendChild(firstContentLi);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 鼠标点击下一张箭头时切换图片</span></span><br><span class="line">    next.addEventListener(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">            flag = <span class="literal">false</span>;</span><br><span class="line">            <span class="comment">// 无缝滚动</span></span><br><span class="line">            <span class="keyword">if</span> (num == content.children.length - <span class="number">1</span>) &#123;</span><br><span class="line">                num = <span class="number">0</span>;</span><br><span class="line">                content.style.left = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            num++;</span><br><span class="line">            animate(content, -focusWidth * num, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                flag = <span class="literal">true</span>;</span><br><span class="line">            &#125;);</span><br><span class="line">            navLisChange(nav.children[num == nav.children.length ? <span class="number">0</span> : num]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">// 鼠标点击上一张箭头时切换图片</span></span><br><span class="line">    prev.addEventListener(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">            flag = <span class="literal">false</span>;</span><br><span class="line">            <span class="comment">// 无缝滚动</span></span><br><span class="line">            <span class="keyword">if</span> (num == <span class="number">0</span>) &#123;</span><br><span class="line">                num = content.children.length - <span class="number">1</span>;</span><br><span class="line">                content.style.left = -num * focusWidth + <span class="string">'px'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            num--;</span><br><span class="line">            <span class="built_in">console</span>.log(num);</span><br><span class="line"></span><br><span class="line">            animate(content, -focusWidth * num, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                flag = <span class="literal">true</span>;</span><br><span class="line">            &#125;);</span><br><span class="line">            navLisChange(nav.children[num]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 定时器自动轮播</span></span><br><span class="line">    <span class="keyword">var</span> timer = setInterval(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 手动调用右侧按钮点击事件</span></span><br><span class="line">        next.click();</span><br><span class="line">    &#125;, <span class="number">2000</span>);</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="效果-6"><a href="#效果-6" class="headerlink" title="效果"></a>效果</h4><img src= /img/loading.gif data-src="https://cdn.jsdelivr.net/gh/hardcodeape/blogImg/img/taobao-focus.gif" style="zoom:80%;" /><h3 id="侧边栏返回顶部-仿淘宝"><a href="#侧边栏返回顶部-仿淘宝" class="headerlink" title="侧边栏返回顶部(仿淘宝)"></a>侧边栏返回顶部(仿淘宝)</h3><h4 id="滚动窗口至文档中的特定位置"><a href="#滚动窗口至文档中的特定位置" class="headerlink" title="滚动窗口至文档中的特定位置"></a>滚动窗口至文档中的特定位置</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.scroll(x,y)</span><br></pre></td></tr></table></figure><ul><li>x和y参数不加单位，直接写数字即可</li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><p>HTML和CSS前面已给出，在JS中添加下列代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 点击侧边栏顶部按钮返回顶部 </span></span><br><span class="line">returnTop.addEventListener(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    animate(<span class="built_in">window</span>, <span class="number">0</span>)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 页面滚动动画函数封装，obj-目标对象，target-目标位置</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">animate</span>(<span class="params">obj, target, callback</span>) </span>&#123;</span><br><span class="line">    clearInterval(obj.timer);</span><br><span class="line">    obj.timer = setInterval(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> step = (target - <span class="built_in">window</span>.pageYOffset) / <span class="number">10</span>;</span><br><span class="line">        step = step &gt; <span class="number">0</span> ? <span class="built_in">Math</span>.ceil(step) : <span class="built_in">Math</span>.floor(step);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">window</span>.pageYOffset == target) &#123;</span><br><span class="line">            clearInterval(obj.timer);</span><br><span class="line">            callback &amp;&amp; callback();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">window</span>.scroll(<span class="number">0</span>, <span class="built_in">window</span>.pageYOffset + step);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, <span class="number">15</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="效果-7"><a href="#效果-7" class="headerlink" title="效果"></a>效果</h4><img src= /img/loading.gif data-src="https://gitee.com/code-ape/blogImage/raw/master/img/taobao-return-top.gif" alt="taobao-return-top" style="zoom:67%;" />]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;  &lt;em&gt;『 注 : 本笔记摘自视频 &lt;a href=&quot;https://www.bilibili.com/video/BV1k4411w7sV&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;JavaScript核心 DOM BOM操作&lt;/a&gt;，如有侵权,请联系删除。』&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://www.hardape.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JavaScript" scheme="https://www.hardape.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="https://www.hardape.top/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>13-BOM</title>
    <link href="https://www.hardape.top/article/c6aff757.html"/>
    <id>https://www.hardape.top/article/c6aff757.html</id>
    <published>2020-04-20T08:19:20.000Z</published>
    <updated>2020-05-22T13:41:14.202Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>  <em>『 注 : 本笔记摘自视频 <a href="https://www.bilibili.com/video/BV1k4411w7sV" target="_blank" rel="noopener">JavaScript核心 DOM BOM操作</a>，如有侵权,请联系删除。』</em></p></blockquote><a id="more"></a><h2 id="BOM概述"><a href="#BOM概述" class="headerlink" title="BOM概述"></a>BOM概述</h2><ul><li>BOM( Browser Object Model )即<strong>浏览器对象模型</strong>，它提供了独立于内容而与浏览器窗口进行交互的对象，其核心对象是<strong>window</strong>。</li><li>BOM由一系列相关的对象构成，并且每个对象都提供了很多方法和属性</li><li>BOM缺乏标准，JavaScript语法的标准化组织是ECMA，DOM的标准化组织是W3C，BOM最初是Netscape(网景)浏览器标准的一部分。</li></ul><h3 id="DOM和BOM的比较"><a href="#DOM和BOM的比较" class="headerlink" title="DOM和BOM的比较"></a>DOM和BOM的比较</h3><h4 id="DOM"><a href="#DOM" class="headerlink" title="DOM"></a>DOM</h4><ul><li>文档对象模型</li><li>把【文档】当做一个【对象】来看待</li><li>DOM的顶级对象是<strong>document</strong></li><li>DOM学习的是操作页面元素</li><li>DOM是W3C的标准规范</li></ul><h4 id="BOM"><a href="#BOM" class="headerlink" title="BOM"></a>BOM</h4><ul><li>浏览器对象模型</li><li>把【浏览器】当做一个【对象】来看待</li><li>BOM的顶级对象是<strong>window</strong></li><li>BOM学习的是浏览器窗口交互的一些对象</li><li>BOM是浏览器厂商在各自浏览器上定义的，兼容性较差</li></ul><h3 id="BOM的构成"><a href="#BOM的构成" class="headerlink" title="BOM的构成"></a>BOM的构成</h3><p><img src= /img/loading.gif data-src="https://gitee.com/code-ape/blogImage/raw/master/img/image-20200418140320024.png" alt="image-20200418140320024"></p><ul><li>BOM比DOM更大，它包含DOM。</li><li><strong>window对象是浏览器的顶级对象</strong>，它具有双重结构。</li><li>window对象是JS访问浏览器窗口的一个<strong>接口</strong>。</li><li>window对象是一个<strong>全局对象</strong>。定义在全局作用域中的变量、函数都会变成window对象的属性和方法。</li><li>在使用window属性和方法时可以省略window，前面学习的对话框都属于window对象方法，如<code>alert()</code>，<code>prompt()</code>等。</li><li>注意：window下的一个特殊属性<code>window.name</code>，故在JS中标识符名不建议使用name</li></ul><h2 id="window对象的常见事件"><a href="#window对象的常见事件" class="headerlink" title="window对象的常见事件"></a>window对象的常见事件</h2><h3 id="窗口加载事件"><a href="#窗口加载事件" class="headerlink" title="窗口加载事件"></a>窗口加载事件</h3><p><code>window.onload</code>是窗口(页面)加载事件，当文档内容完全加载完成会触发该事件(包括图像、脚本文件、CSS文件等)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 传统注册方式</span></span><br><span class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;;</span><br><span class="line"><span class="comment">// 方法监听注册方式</span></span><br><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">'load'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;);</span><br></pre></td></tr></table></figure><ul><li>有了<code>window.onload</code>就可以直接把JS代码写到页面元素的上方，因为<code>onload</code>是等页面内容全部加载完毕，再去执行处理函数</li><li><code>window.onload</code>传统注册事件方式只能写一次，如果有多个，会以最后一个<code>window.onload</code>为准。</li><li>如果使用<code>addEventListener</code>则没有限制</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// DOM加载事件</span></span><br><span class="line"><span class="built_in">document</span>.addEventListener(<span class="string">'DOMContentLoaded'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;)</span><br></pre></td></tr></table></figure><ul><li><code>DOMContentLoaded</code>事件触发时，仅当DOM加载完成，不包括样式表、图片、flash等等，ie9以上才支持</li><li>如果页面的图片较多，从用户访问到onload触发可能需要较长的时间，必然影响用户的体验，此时用<code>DOMContentLoaded</code>事件比较合适</li></ul><h3 id="调整窗口大小事件"><a href="#调整窗口大小事件" class="headerlink" title="调整窗口大小事件"></a>调整窗口大小事件</h3><p><code>window.onresize</code>是调整窗口大小加载事件，窗口大小发生变化时就调用的处理函数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 传统注册方式</span></span><br><span class="line"><span class="built_in">window</span>.onresize = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;;</span><br><span class="line"><span class="comment">// 方法监听注册方式</span></span><br><span class="line"><span class="built_in">window</span>.addEventListeer(<span class="string">'resize'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;);</span><br></pre></td></tr></table></figure><ul><li>只要浏览器窗口大小发生像素变化，就会触发该事件</li><li>我们经常利用这个事件完成响应式布局。</li><li><code>innerWidth / innerHeight</code> 返回窗口的文档显示区的宽/高度。</li></ul><h2 id="定时器"><a href="#定时器" class="headerlink" title="定时器"></a>定时器</h2><p>window对象提供了2个<strong>定时器</strong>：<code>setTimeout</code>和<code>setInterval</code></p><h3 id="setTimeout"><a href="#setTimeout" class="headerlink" title="setTimeout"></a>setTimeout</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.setTimeout(调用函数[, 延迟的毫秒数]);</span><br></pre></td></tr></table></figure><ul><li><code>setTimeout</code>方法用于设置一个定时器，该定时器在定时器到期后执行调用函数</li><li>延迟的毫秒数省略默认为0</li><li>页面中可能有很多的定时器，我们经常给定时器加标识符，即<code>var time1 = setTimeout(fn, 3000)</code></li><li>这个调用函数可以<strong>直接写匿名函数</strong>，或者<strong>写函数名</strong>，或者采取字符串<strong>‘函数名()’</strong>三种形式，第三种字符串形式不推荐。</li></ul><h4 id="回调函数"><a href="#回调函数" class="headerlink" title="回调函数"></a>回调函数</h4><ul><li><code>setTimeout()</code>中的调用函数我们也称为<strong>回调函数(callback)</strong></li><li>普通函数是按照代码顺序直接调用，而需要等待另一个事件完成再调用该函数的函数就称为<strong>回调函数</strong></li></ul><h4 id="停止setTimeout定时器"><a href="#停止setTimeout定时器" class="headerlink" title="停止setTimeout定时器"></a>停止setTimeout定时器</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.clearTimeout(timeoutID)</span><br></pre></td></tr></table></figure><ul><li><code>clearTimeout</code>方法取消了先前通过调用<code>setTimeout</code>建立的定时器</li><li>参数<code>timeoutID</code>是需要停止的<code>setTimeout</code>定时器的标识符(名称)</li></ul><h3 id="setInterval"><a href="#setInterval" class="headerlink" title="setInterval"></a>setInterval</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.setInterval(调用函数[, 间隔的毫秒数]);</span><br></pre></td></tr></table></figure><ul><li><code>setInterval</code>方法重复调用一个函数，每隔这个时间，就调用一次回调函数</li><li>间隔的毫秒数省略默认为0</li><li>页面中可能有很多的定时器，我们经常给定时器加标识符，即<code>var time2 = setInterval(fn, 3000)</code></li><li>这个调用函数可以<strong>直接写匿名函数</strong>，或者<strong>写函数名</strong>，或者采取字符串<strong>‘函数名()’</strong>三种形式，第三种字符串形式不推荐。</li></ul><h4 id="停止setInterval定时器"><a href="#停止setInterval定时器" class="headerlink" title="停止setInterval定时器"></a>停止setInterval定时器</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.clearInterval(intervalID)</span><br></pre></td></tr></table></figure><ul><li><code>clearInterval</code>方法取消了先前通过调用<code>setInterval</code>建立的定时器</li><li>参数<code>intervalID</code>是需要停止的<code>setInterval</code>定时器的标识符(名称)</li></ul><h3 id="案例1-仿京东秒杀计时器"><a href="#案例1-仿京东秒杀计时器" class="headerlink" title="案例1-仿京东秒杀计时器"></a>案例1-仿京东秒杀计时器</h3><h4 id="结构-HTML"><a href="#结构-HTML" class="headerlink" title="结构(HTML)"></a>结构(HTML)</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 仿京东秒杀倒计时 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>仿京东秒杀倒计时<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"jd-seckill"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span>京东秒杀<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"info"</span>&gt;</span>本场距离结束还有<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"time"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"time_h"</span>&gt;</span>00<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">i</span>&gt;</span>:<span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"time_m"</span>&gt;</span>48<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">i</span>&gt;</span>:<span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"time_s"</span>&gt;</span>18<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="样式-CSS"><a href="#样式-CSS" class="headerlink" title="样式(CSS)"></a>样式(CSS)</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.jd-seckill</span> &#123;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="comment">/* 清除外边距合并 */</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">190px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">260px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(images/jd-seckill.png) no-repeat;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.jd-seckill</span> <span class="selector-class">.title</span> &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">31px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.jd-seckill</span> <span class="selector-class">.info</span> &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">90px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.jd-seckill</span> <span class="selector-class">.time</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">10px</span> auto;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.jd-seckill</span> <span class="selector-class">.time</span> <span class="selector-tag">span</span><span class="selector-attr">[class^=<span class="string">'time'</span>]</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#000</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.jd-seckill</span> <span class="selector-class">.time</span> <span class="selector-tag">i</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">font-style</span>: normal;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">900</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">18px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="行为-JS"><a href="#行为-JS" class="headerlink" title="行为(JS)"></a>行为(JS)</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 倒计时</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">countDown</span>(<span class="params">time</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> nowTime = +<span class="keyword">new</span> <span class="built_in">Date</span>();<span class="comment">// 当前时间戳</span></span><br><span class="line">    <span class="keyword">var</span> toTime = +<span class="keyword">new</span> <span class="built_in">Date</span>(time);<span class="comment">// 倒计时结束时间戳</span></span><br><span class="line">    <span class="keyword">var</span> times = (toTime - nowTime) / <span class="number">1000</span>;</span><br><span class="line">    <span class="keyword">var</span> h = <span class="built_in">parseInt</span>(times / <span class="number">60</span> / <span class="number">60</span> % <span class="number">24</span>);<span class="comment">// 时</span></span><br><span class="line">    h = h &lt; <span class="number">10</span> ? <span class="string">'0'</span> + h : h;</span><br><span class="line">    <span class="keyword">var</span> m = <span class="built_in">parseInt</span>(times / <span class="number">60</span> % <span class="number">60</span>);<span class="comment">// 分</span></span><br><span class="line">    m = m &lt; <span class="number">10</span> ? <span class="string">'0'</span> + m : m;</span><br><span class="line">    <span class="keyword">var</span> s = <span class="built_in">parseInt</span>(times % <span class="number">60</span>);<span class="comment">// 秒</span></span><br><span class="line">    s = s &lt; <span class="number">10</span> ? <span class="string">'0'</span> + s : s;</span><br><span class="line">    <span class="keyword">return</span> [h, m, s];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">seckill</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> hour = <span class="built_in">document</span>.querySelector(<span class="string">'.time_h'</span>);</span><br><span class="line">    <span class="keyword">var</span> minute = <span class="built_in">document</span>.querySelector(<span class="string">'.time_m'</span>);</span><br><span class="line">    <span class="keyword">var</span> second = <span class="built_in">document</span>.querySelector(<span class="string">'.time_s'</span>);</span><br><span class="line">    <span class="keyword">var</span> time = countDown(<span class="string">'2020-4-18 17:00:00'</span>);</span><br><span class="line">    hour.innerHTML = time[<span class="number">0</span>];</span><br><span class="line">    minute.innerHTML = time[<span class="number">1</span>];</span><br><span class="line">    second.innerHTML = time[<span class="number">2</span>];</span><br><span class="line">&#125;</span><br><span class="line">seckill();  <span class="comment">//先调用一次秒杀函数，防止第一次刷新页面空白</span></span><br><span class="line">setInterval(seckill, <span class="number">1000</span>);</span><br></pre></td></tr></table></figure><h4 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h4><p><img src= /img/loading.gif data-src="https://gitee.com/code-ape/blogImage/raw/master/img/jd-seckill.gif" alt="jd-seckill"></p><h3 id="案例2-发送验证码短信案例"><a href="#案例2-发送验证码短信案例" class="headerlink" title="案例2-发送验证码短信案例"></a>案例2-发送验证码短信案例</h3><h4 id="结构-HTML-1"><a href="#结构-HTML-1" class="headerlink" title="结构(HTML)"></a>结构(HTML)</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 发送验证码短信案例 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>发送验证码短信案例<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">""</span> <span class="attr">placeholder</span>=<span class="string">"请输入手机号"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"send"</span>&gt;</span>发送验证码<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="行为-JS-1"><a href="#行为-JS-1" class="headerlink" title="行为(JS)"></a>行为(JS)</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> btnSend = <span class="built_in">document</span>.querySelector(<span class="string">'.send'</span>);</span><br><span class="line">btnSend.addEventListener(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> time = <span class="number">5</span>;<span class="comment">//定义剩下的秒数</span></span><br><span class="line">    <span class="keyword">this</span>.disabled = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">var</span> timer = setInterval(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (time == <span class="number">0</span>) &#123;</span><br><span class="line">            clearInterval(timer);</span><br><span class="line">            btnSend.innerHTML = <span class="string">'发送验证码'</span>;</span><br><span class="line">            btnSend.disabled = <span class="literal">false</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            btnSend.innerHTML = <span class="string">'还剩'</span> + time + <span class="string">'秒再次点击'</span>;</span><br><span class="line">            time--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, <span class="number">1000</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="效果-1"><a href="#效果-1" class="headerlink" title="效果"></a>效果</h4><p><img src= /img/loading.gif data-src="https://gitee.com/code-ape/blogImage/raw/master/img/send-identify-code.gif" alt="send-identify-code"></p><h2 id="this指向问题"><a href="#this指向问题" class="headerlink" title="this指向问题"></a>this指向问题</h2><p><code>this</code>的指向在函数定义的时候是确定不了的，只有函数执行的时候才能确定<code>this</code>到底指向谁一般情况下<code>this</code>的最终指向的是那个调用它的对象。</p><ul><li>全局作用域或者普通函数中<code>this</code>指向全局对象<code>window</code>，注意定时器中的<code>this</code>指向<code>window</code></li><li>方法调用中谁调用<code>this</code>指向谁</li><li>构造函数中<code>this</code>指向构造函数的实例</li></ul><h2 id="JS执行机制"><a href="#JS执行机制" class="headerlink" title="JS执行机制"></a>JS执行机制</h2><h3 id="JS是单线程"><a href="#JS是单线程" class="headerlink" title="JS是单线程"></a>JS是单线程</h3><ul><li>JavaScript语言的一大特点就是单线程，也就是说，同一时间只能做一件事。这个由于JS这门脚本语言诞生的使命所致——JS是为处理页面中用户的交互，以及操作DOM而诞生的。比如我们对某个DOM元素进行添加和删除操作，不能同时进行。应该先进行添加，之后再删除。</li><li>单线程就意味着，所有任务需要排队，前一个任务结束，才会执行后一个任务。这样所导致的问题是：如果JS执行的时间过长，会造成页面的渲染不连贯，导致页面渲染加载阻塞的感觉。</li></ul><h3 id="同步和异步"><a href="#同步和异步" class="headerlink" title="同步和异步"></a>同步和异步</h3><p>为了解决单线程渲染加载阻塞的问题，利用多核CPU的计算能力，HTML5提出Web Worker标准，允许JavaScript脚本创建多个线程。于是，JS中出现了<strong>同步</strong>和<strong>异步</strong>。</p><h4 id="同步"><a href="#同步" class="headerlink" title="同步"></a>同步</h4><p>前一个任务结束后再执行后一个任务，程序的执行顺序与任务的排列顺序是一致的、同步的。</p><h4 id="异步"><a href="#异步" class="headerlink" title="异步"></a>异步</h4><p>程序的执行顺序与任务的排列顺序是不一致的、异步的。</p><h4 id="同步任务"><a href="#同步任务" class="headerlink" title="同步任务"></a>同步任务</h4><p>在JS中，同步任务都在主线程上执行，形成一个<strong>执行栈</strong></p><h4 id="异步任务"><a href="#异步任务" class="headerlink" title="异步任务"></a>异步任务</h4><p>JS的异步任务是通过<strong>回调函数</strong>实现的。一般而言，异步任务有以下三种类型：</p><ul><li>普通事件，如<code>click</code>、<code>resize</code>等</li><li>资源加载，如<code>load</code>、<code>error</code>等</li><li>定时器，如<code>setInterval</code>、<code>setTimeout</code>等</li></ul><p>异步任务相关回调函数添加到<strong>任务队列</strong>中(任务队列也称为消息队列)</p><h3 id="JS执行机制-1"><a href="#JS执行机制-1" class="headerlink" title="JS执行机制"></a>JS执行机制</h3><ol><li>先执行<strong>执行栈中的同步任务</strong></li><li>异步任务(回调函数)放入任务队列中</li><li>一旦执行栈中的所有同步任务执行完毕，系统就会按次序读取任务队列中的异步任务，于是被读取的异步任务结束等待状态，进入执行栈，开始执行。</li></ol><p><img src= /img/loading.gif data-src="https://gitee.com/code-ape/blogImage/raw/master/img/image-20200418164655126.png" alt="image-20200418164655126"></p><p>由于主线程不断地重复获得任务、执行任务、再获取任务、再执行，所以这种机制被称为<strong>事件循环( event loop )</strong></p><h2 id="location对象"><a href="#location对象" class="headerlink" title="location对象"></a>location对象</h2><p>window对象给我们提供了一个<strong>location属性</strong>用于<strong>获取或设置窗体的URL</strong>，并且可以用于<strong>解析URL</strong>。因为这个属性返回的是一个对象，所以我们将这个属性称为<strong>location对象</strong></p><h3 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h3><p><strong>统一资源定位符( Uniform Resource Loactor, URL )</strong>是互联网上标准资源的地址。互联网上的每个文件都有一个唯一的URL，它包含的信息指出文件的位置以及浏览器应该怎么处理它。</p><p>URL的一般语法格式为：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">protocol://host[:port]/path/[?query]#fragment</span><br></pre></td></tr></table></figure><table><thead><tr><th>URL组成</th><th>说明</th></tr></thead><tbody><tr><td>protocol</td><td>通信协议，常用的http,ftp,maito等</td></tr><tr><td>host</td><td>主机(域名)，如<a href="http://www.baidu.com" target="_blank" rel="noopener">www.baidu.com</a></td></tr><tr><td>port</td><td>端口号，可选，省略时使用协议的默认端口，如http的默认端口为80</td></tr><tr><td>path</td><td>路径，由零或多个’/‘符号隔开的字符串，一般用来表示主机上的一个目录或文件地址</td></tr><tr><td>query</td><td>参数，以键值对的形式，通过<code>&amp;</code>符号分隔开来</td></tr><tr><td>fragment</td><td>片段，#后面内容，常见于链接锚点</td></tr></tbody></table><h3 id="loaction对象常见属性"><a href="#loaction对象常见属性" class="headerlink" title="loaction对象常见属性"></a>loaction对象常见属性</h3><table><thead><tr><th>loaction对象常见属性</th><th>说明</th></tr></thead><tbody><tr><td><code>location.href</code></td><td>获取或者设置整个URL</td></tr><tr><td><code>location.host</code></td><td>返回主机(域名)</td></tr><tr><td><code>location.port</code></td><td>返回端口号，如果未写返回空字符串</td></tr><tr><td><code>location.pathname</code></td><td>返回路径</td></tr><tr><td><code>location.search</code></td><td>返回参数，包含?</td></tr><tr><td><code>location.hash</code></td><td>返回片段，包含#</td></tr></tbody></table><h4 id="案例-登录获取URL参数数据"><a href="#案例-登录获取URL参数数据" class="headerlink" title="案例-登录获取URL参数数据"></a>案例-登录获取URL参数数据</h4><p>login.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>登录页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>登录页面<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"index.html"</span> <span class="attr">method</span>=<span class="string">"GET"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"uname"</span> <span class="attr">id</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"登录"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>index.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>主页<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.user</span> &#123;</span></span><br><span class="line">            font-weight: 700;</span><br><span class="line">            color: red;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> userDiv = <span class="built_in">document</span>.querySelector(<span class="string">'.user'</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> search = location.search;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> uname = search.substr(<span class="number">1</span>).split(<span class="string">'='</span>)[<span class="number">1</span>];</span></span><br><span class="line">            userDiv.innerHTML = uname;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>主页<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"user"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>,欢迎您！</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果</p><p><img src= /img/loading.gif data-src="https://gitee.com/code-ape/blogImage/raw/master/img/location-search-login.gif" alt="location-search-login"></p><h3 id="location对象常用方法"><a href="#location对象常用方法" class="headerlink" title="location对象常用方法"></a>location对象常用方法</h3><table><thead><tr><th>location对象常用方法</th><th>说明</th></tr></thead><tbody><tr><td><code>location.assign(URL)</code></td><td>跳转页面，也称为重定向页面，因为记录历史，所以能后退页面</td></tr><tr><td><code>location.replace(URL)</code></td><td>替换当前页面，因为不记录历史，所以不能后退页面</td></tr><tr><td><code>location.reload()</code></td><td>重新加载页面，相当于刷新按钮或者F5；如果参数为<code>true</code>，强制刷新，相当于Ctrl+F5(不使用缓存)</td></tr></tbody></table><h2 id="navigator对象"><a href="#navigator对象" class="headerlink" title="navigator对象"></a>navigator对象</h2><p><strong>navigatior对象</strong>包含有关浏览器的信息，它有很多属性，最常用的属性是<strong><code>userAgent</code></strong>，该属性可以返回由客户机发送服务器的<code>user-agent</code>头部的值。</p><p>下面前端代码可以判断用户在哪个终端打开页面，实现跳转</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>((navigator.userAgent.match(<span class="regexp">/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i</span>))) &#123;</span><br><span class="line">    <span class="built_in">window</span>.location.href = <span class="string">''</span>; <span class="comment">// 移动端</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">window</span>.location.href = <span class="string">''</span>  <span class="comment">// PC端</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="history对象"><a href="#history对象" class="headerlink" title="history对象"></a>history对象</h2><p>window对象提供了一个<strong>history对象</strong>，与浏览器历史记录进行交互。该对象包含用户(在浏览器窗口中)访问过的URL。</p><h4 id="history对象常用方法"><a href="#history对象常用方法" class="headerlink" title="history对象常用方法"></a>history对象常用方法</h4><table><thead><tr><th>history对象常用方法</th><th>说明</th></tr></thead><tbody><tr><td><code>history.back()</code></td><td>后退功能</td></tr><tr><td><code>history.forward()</code></td><td>前进功能</td></tr><tr><td><code>history.go(steps)</code></td><td>前进/后退功能，steps参数为1即前进一个页面，参数为-1级后退一个页面</td></tr></tbody></table><p>history对象一般在实际开发中比较少用，但是会在一些OA办公系统中见到</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;  &lt;em&gt;『 注 : 本笔记摘自视频 &lt;a href=&quot;https://www.bilibili.com/video/BV1k4411w7sV&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;JavaScript核心 DOM BOM操作&lt;/a&gt;，如有侵权,请联系删除。』&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://www.hardape.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JavaScript" scheme="https://www.hardape.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="https://www.hardape.top/tags/JavaScript/"/>
    
      <category term="BOM" scheme="https://www.hardape.top/tags/BOM/"/>
    
  </entry>
  
  <entry>
    <title>12-DOM事件高级</title>
    <link href="https://www.hardape.top/article/56d0241c.html"/>
    <id>https://www.hardape.top/article/56d0241c.html</id>
    <published>2020-04-20T08:14:31.000Z</published>
    <updated>2020-05-22T13:41:10.746Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>  <em>『 注 : 本笔记摘自视频 <a href="https://www.bilibili.com/video/BV1k4411w7sV" target="_blank" rel="noopener">JavaScript核心 DOM BOM操作</a>，如有侵权,请联系删除。』</em></p></blockquote><a id="more"></a><h2 id="注册事件-绑定事件"><a href="#注册事件-绑定事件" class="headerlink" title="注册事件(绑定事件)"></a>注册事件(绑定事件)</h2><h3 id="注册事件概述"><a href="#注册事件概述" class="headerlink" title="注册事件概述"></a>注册事件概述</h3><ul><li>给元素添加事件，称为<strong>注册事件</strong>或者<strong>绑定事件</strong></li><li>注册事件有两种方式：<strong>传统方式</strong>和<strong>监听注册方式</strong></li></ul><h3 id="传统注册方式"><a href="#传统注册方式" class="headerlink" title="传统注册方式"></a>传统注册方式</h3><p>传统注册方式利用on开头的事件对元素进行注册，如<code>onclick</code>，可在html中使用：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"alert('Hello~')"</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p>或使用JS注册事件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">btn.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    alert(<span class="string">'Hello~'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>传统注册方式的特点：注册事件的<strong>唯一性</strong>。</li><li>同一个元素同一个事件只能设置一个处理函数，最后注册的处理函数将会覆盖前面注册的处理函数。</li></ul><h3 id="方法监听注册方式"><a href="#方法监听注册方式" class="headerlink" title="方法监听注册方式"></a>方法监听注册方式</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eventTarget.addEventListener(type, litener[, useCapture])</span><br></pre></td></tr></table></figure><ul><li><code>addEventListener</code>方法将指定的监听器注册到<code>eventTarget</code>(目标对象)上，当该对象触发指定的事件时，就会执行事件处理函数。</li><li><strong>type</strong>：事件类型，<strong>字符串</strong>，比如<code>click</code>、<code>mouseover</code>，注意这里不要带on</li><li><strong>listener</strong>：事件处理函数，事件发生时，会调用该监听函数</li><li><strong>useCapture</strong>：可选参数，是一个布尔值，默认是false。此参数后续再讨论。</li><li>W3C标准，推荐方式</li><li>特点：同一个元素同一个事件可以注册多个监听器</li><li>IE9之前的IE不支持该方法，可使用<code>attachEvent()</code>方法代替</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eventTarget.attachEvent(eventNameWithOn, callback)</span><br></pre></td></tr></table></figure><ul><li><code>attachEvent</code>方法将指定的监听器注册到<code>eventTarget</code>(目标对象)上，当该对象触发指定的事件时，指定的回调函数就会被执行。</li><li><strong>eventNameWithOn</strong>：事件类型，<strong>字符串</strong>，比如<code>onclick</code>、<code>onmouseover</code>，注意这里要带on</li><li><strong>callback</strong>：事件处理函数，当目标触发事件时回调函数被调用</li></ul><h3 id="注册事件兼容性解决方案"><a href="#注册事件兼容性解决方案" class="headerlink" title="注册事件兼容性解决方案"></a>注册事件兼容性解决方案</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">addEventListener</span>(<span class="params">element, eventName, fn</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 判断当前浏览器是否支持 addEventListener 方法</span></span><br><span class="line">    <span class="keyword">if</span> (element.addEventListener) &#123;</span><br><span class="line">        element.addEventListener(eventName, fn);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (element.attachEvent) &#123;</span><br><span class="line">        element.attachEvent(<span class="string">'on'</span> + eventName, fn);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        element[<span class="string">'on'</span> + eventName] = fn;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="删除事件-解绑事件"><a href="#删除事件-解绑事件" class="headerlink" title="删除事件(解绑事件)"></a>删除事件(解绑事件)</h2><h3 id="传统注册方式-1"><a href="#传统注册方式-1" class="headerlink" title="传统注册方式"></a>传统注册方式</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eventTarget.onclick = <span class="literal">null</span>;</span><br></pre></td></tr></table></figure><h3 id="方法监听注册方式-1"><a href="#方法监听注册方式-1" class="headerlink" title="方法监听注册方式"></a>方法监听注册方式</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">eventTarget.removeEventListener(type, listener[, useCapture]);</span><br><span class="line">eventTarget.detachEvent(eventNameWithOn, callback)</span><br></pre></td></tr></table></figure><h3 id="删除事件兼容性解决方案"><a href="#删除事件兼容性解决方案" class="headerlink" title="删除事件兼容性解决方案"></a>删除事件兼容性解决方案</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">removeEventListener</span>(<span class="params">element, eventName, fn</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 判断当前浏览器是否支持 removeEventListener 方法</span></span><br><span class="line">    <span class="keyword">if</span>(element.removeEventListener) &#123;</span><br><span class="line">        element.removerEventListener(eventName, fn);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (element.detachEvent) &#123;</span><br><span class="line">        element.detachEvent(<span class="string">'on'</span> + eventName, fn);</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        element[<span class="string">'on'</span> + eventName] = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>需要移除的事件需在注册事件时另外声明，不能使用匿名方法</li><li>删除的事件名<code>listener</code>/<code>eventNameWithOn</code>在传参时不加括号，如<code>div.removeElementListener(&#39;click&#39;, fn)</code></li></ul><h2 id="DOM事件流"><a href="#DOM事件流" class="headerlink" title="DOM事件流"></a>DOM事件流</h2><img src= /img/loading.gif data-src="https://gitee.com/code-ape/blogImage/raw/master/img/image-20200417225030811.png" alt="image-20200417225030811" style="zoom:67%;" /><h3 id="DOM事件流的概念"><a href="#DOM事件流的概念" class="headerlink" title="DOM事件流的概念"></a>DOM事件流的概念</h3><ul><li>事件流描述的是从页面中<strong>接收事件的顺序</strong></li><li>事件发生时会在元素节点之间<strong>按照特定的顺序传播</strong>，这个传播过程即DOM事件流</li></ul><h3 id="DOM事件流的阶段"><a href="#DOM事件流的阶段" class="headerlink" title="DOM事件流的阶段"></a>DOM事件流的阶段</h3><ul><li>DOM事件流分为3个阶段：<strong>捕获阶段</strong>、<strong>当前目标阶段</strong>、<strong>冒泡阶段</strong></li><li>事件冒泡：IE最早提出，事件开始时有最具体的元素接收，然后逐级向上传播到DOM最顶层节点的过程。</li><li>事件捕获：网景公司最早提出，由DOM最顶层节点开始，然后逐级向下传播到具体的元素接收的过程。</li></ul><h3 id="JS中的DOM事件流"><a href="#JS中的DOM事件流" class="headerlink" title="JS中的DOM事件流"></a>JS中的DOM事件流</h3><ul><li>JS代码中只能执行捕获或者冒泡其中的一个阶段</li><li><code>onclick</code>和<code>attachEvent</code>只能得到<strong>冒泡阶段</strong></li><li><code>assEventListener</code>第三个参数如果为true，表示在事件<strong>捕获阶段</strong>调用事件处理程序；如果是false(不写默认为false)，表示在事件<strong>冒泡阶段</strong>调用事件处理程序。</li><li>实际开发中很少使用事件捕获，更关注事件冒泡。</li><li>有些事件是没有冒泡的，比如<code>onblur</code>、<code>onfocus</code>、<code>onmouseeneter</code>、<code>onmouseleave</code></li><li>事件冒泡有时候会带来麻烦，有时候又可以很巧妙地做某些某些事件。</li></ul><h3 id="DOM事件流案例展示"><a href="#DOM事件流案例展示" class="headerlink" title="DOM事件流案例展示"></a>DOM事件流案例展示</h3><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>DOM事件流<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">div</span><span class="selector-attr">[class^=<span class="string">"father"</span>]</span> &#123;</span></span><br><span class="line">                width: 200px;</span><br><span class="line">                height: 200px;</span><br><span class="line">                background-color: skyblue;</span><br><span class="line">                margin: 10px;</span><br><span class="line">                color: blue;</span><br><span class="line">                padding: 10px;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">            <span class="selector-tag">div</span><span class="selector-attr">[class^=<span class="string">"son"</span>]</span> &#123;</span></span><br><span class="line">                width: 100px;</span><br><span class="line">                height: 100px;</span><br><span class="line">                line-height: 100px;</span><br><span class="line">                text-align: center;</span><br><span class="line"><span class="css">                <span class="selector-tag">color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line">                background-color: blue;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">            <span class="selector-tag">div</span><span class="selector-attr">[class^=<span class="string">"son"</span>]</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line">                cursor: pointer;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- DOM事件流 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"father1"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"son1"</span>&gt;</span>捕获阶段:son<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            father</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"father2"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"son2"</span>&gt;</span>冒泡阶段:son<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            father</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 执行捕获阶段 document -&gt; html -&gt; body -&gt; father1 -&gt; son1</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> father1 = <span class="built_in">document</span>.querySelector(<span class="string">'.father1'</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> son1 = <span class="built_in">document</span>.querySelector(<span class="string">'.son1'</span>);</span></span><br><span class="line"><span class="actionscript">            father1.addEventListener(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                alert(<span class="string">'father'</span>);</span></span><br><span class="line"><span class="actionscript">            &#125;, <span class="literal">true</span>);</span></span><br><span class="line"><span class="actionscript">            son1.addEventListener(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                alert(<span class="string">'son'</span>);</span></span><br><span class="line"><span class="actionscript">            &#125;, <span class="literal">true</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="comment">// 执行冒泡阶段 son1 -&gt; father1 -&gt; body -&gt; html -&gt; document</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> father2 = <span class="built_in">document</span>.querySelector(<span class="string">'.father2'</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> son2 = <span class="built_in">document</span>.querySelector(<span class="string">'.son2'</span>);</span></span><br><span class="line"><span class="actionscript">            father2.addEventListener(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                alert(<span class="string">'father'</span>);</span></span><br><span class="line"><span class="actionscript">            &#125;, <span class="literal">false</span>);</span></span><br><span class="line"><span class="actionscript">            son2.addEventListener(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                alert(<span class="string">'son'</span>);</span></span><br><span class="line"><span class="actionscript">            &#125;, <span class="literal">false</span>);</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h4><p><img src= /img/loading.gif data-src="https://gitee.com/code-ape/blogImage/raw/master/img/DOM-event-stream.gif" alt="DOM-event-stream"></p><h2 id="事件对象"><a href="#事件对象" class="headerlink" title="事件对象"></a>事件对象</h2><h3 id="事件对象概述"><a href="#事件对象概述" class="headerlink" title="事件对象概述"></a>事件对象概述</h3><ul><li>官方解释：事件对象代表事件的状态，比如键盘按键的状态、鼠标的位置、鼠标按钮的状态等等。</li><li>简单理解：事件发生后，<strong>和事件相关的一系列信息数据的集合</strong>都放到这对象里面，这个对象就是<strong>事件对象</strong>，它有很多属性和方法。</li><li>在JS中，事件对象写在事件函数的小括号中，当成形参来看。</li><li>当我们注册事件是，事件对象就会被系统自动创建，并以此传递给事件监听器/事件处理函数。</li><li>事件对象的名字可以自定义，常用<code>event</code>、<code>evt</code>、<code>e</code>等。</li><li>事件对象有兼容性问题，IE9及以上才支持，IE6/7/8通过<code>window.event</code>来获取事件对象</li></ul><h3 id="兼容性写法"><a href="#兼容性写法" class="headerlink" title="兼容性写法"></a>兼容性写法</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">element.onclick = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">    event = event || <span class="built_in">window</span>.event; <span class="comment">// 兼容IE6/7/8</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="事件对象的常见属性和方法"><a href="#事件对象的常见属性和方法" class="headerlink" title="事件对象的常见属性和方法"></a>事件对象的常见属性和方法</h3><table><thead><tr><th>事件对象属性和方法</th><th>说明</th></tr></thead><tbody><tr><td><code>e.target</code></td><td>返回<strong>触发事件的对象</strong>，标准</td></tr><tr><td><code>e.srcElement</code></td><td>返回<strong>触发事件的对象</strong>，非标准，ie6~8使用</td></tr><tr><td><code>e.currentTarget</code></td><td>返回<strong>绑定事件的元素对象</strong>，和<code>this</code>相同，ie9以下不兼容</td></tr><tr><td><code>e.type</code></td><td>返回事件的类型，比如<code>click</code>，<code>mouseover</code>，不带on</td></tr><tr><td><code>e.cancelBubble</code></td><td>设置<code>e.cancelBubble = true</code>阻止事件冒泡，非标准，ie6~8使用</td></tr><tr><td><code>e.stopPropagation()</code></td><td>该方法阻止事件冒泡，标准</td></tr><tr><td><code>e.returnValue</code></td><td>该属性阻止默认事件/行为，非标准，ie6~8使用，比如不让链接跳转</td></tr><tr><td><code>e.preventDefault()</code></td><td>该方法阻止默认事件/行为，标准，比如不让链接跳转</td></tr></tbody></table><ul><li><code>e.target</code>和<code>this</code>的区别：<code>this</code>是绑定事件的元素对象，而<code>e.target</code>是触发事件的那个具体元素对象。js中事件是会冒泡的，所以<code>this</code>是可以变化的，但<code>event.target</code>不会变化，它永远是直接接受事件的目标DOM元素。</li><li>可以在事件方法中使用<code>return false</code>阻止默认行为，没有兼容性问题，特点：return后面的代码不执行，而且只限于传统的注册方式</li></ul><h4 id="阻止事件冒泡的兼容性解决方案"><a href="#阻止事件冒泡的兼容性解决方案" class="headerlink" title="阻止事件冒泡的兼容性解决方案"></a>阻止事件冒泡的兼容性解决方案</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(e &amp;&amp; e.stopPropagation) &#123;</span><br><span class="line">    e.stopPropagation();</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">window</span>.event.cancelBubble = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="事件委托-代理、委派"><a href="#事件委托-代理、委派" class="headerlink" title="事件委托(代理、委派)"></a>事件委托(代理、委派)</h3><p>事件委托也称为事件代理，在jQuery中称为事件委派</p><h4 id="事件委托的原理"><a href="#事件委托的原理" class="headerlink" title="事件委托的原理"></a>事件委托的原理</h4><ul><li>如果给每个子节点单独设置事件监听器较为麻烦，而且访问DOM的次数较多，这就会延迟整个页面的交互就绪时间。</li><li>时间委托：不给每个子节点单独设置事件监听器，而是事件监听器设置在其父节点上，然后利用冒泡原理影响每个子节点，可通过<code>target</code>找到当前触发事件的子节点对象。</li></ul><h4 id="事件委托的作用"><a href="#事件委托的作用" class="headerlink" title="事件委托的作用"></a>事件委托的作用</h4><p>只操作了一次DOM，提高了程序的性能。</p><h4 id="事件委托案例"><a href="#事件委托案例" class="headerlink" title="事件委托案例"></a>事件委托案例</h4><p>代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>DOM事件流<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>淡黄的长裙<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>蓬松的头发<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>牵着我的手看最新展出的油画<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>无人的街道<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>在空荡的家里<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>就只剩我一个人开狂欢的party<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 给父节点ul添加点击监听事件</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> ul = <span class="built_in">document</span>.querySelector(<span class="string">'ul'</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 利用冒泡事件使鼠标经过子节点li改变背景颜色</span></span></span><br><span class="line"><span class="actionscript">            ul.addEventListener(<span class="string">'mouseover'</span>, <span class="function"><span class="keyword">function</span> <span class="params">(e)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                e.target.style.cursor = <span class="string">'pointer'</span>;</span></span><br><span class="line"><span class="actionscript">                e.target.style.backgroundColor = <span class="string">'skyblue'</span>;</span></span><br><span class="line"><span class="actionscript">                e.target.style.color = <span class="string">'#fff'</span>;</span></span><br><span class="line">            &#125;)</span><br><span class="line"><span class="actionscript">            ul.addEventListener(<span class="string">'mouseout'</span>, <span class="function"><span class="keyword">function</span> <span class="params">(e)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                e.target.style.backgroundColor = <span class="string">'#fff'</span>;</span></span><br><span class="line"><span class="actionscript">                e.target.style.color = <span class="string">'#000'</span>;</span></span><br><span class="line">            &#125;)</span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果</p><p><img src= /img/loading.gif data-src="https://gitee.com/code-ape/blogImage/raw/master/img/event-delegation.gif" alt="event-delegation"></p><h3 id="onchange事件"><a href="#onchange事件" class="headerlink" title="onchange事件"></a>onchange事件</h3><ul><li><code>onchange</code>事件会在<strong>域的内容</strong>改变时发生；<code>onchange</code> 事件也可用于<strong>单选框与复选框改变</strong>后触发的事件。</li><li>支持 <code>onchange</code>事件的 HTML 标签： <code>&lt;input&gt;</code>, <code>&lt;select&gt;</code>, 和 <code>&lt;textarea&gt;</code>。</li></ul><h3 id="常用的鼠标事件"><a href="#常用的鼠标事件" class="headerlink" title="常用的鼠标事件"></a>常用的鼠标事件</h3><table><thead><tr><th>鼠标事件</th><th>触发条件</th></tr></thead><tbody><tr><td><code>onclick</code></td><td>鼠标点击左键触发</td></tr><tr><td><code>ondblclick</code></td><td>鼠标左键双击触发</td></tr><tr><td><code>onmouseover</code></td><td>鼠标经过触发</td></tr><tr><td><code>onmouseout</code></td><td>鼠标离开触发</td></tr><tr><td><code>onfocus</code></td><td>获得鼠标焦点触发</td></tr><tr><td><code>onblur</code></td><td>失去鼠标焦点触发</td></tr><tr><td><code>onmousemove</code></td><td>鼠标移动触发</td></tr><tr><td><code>onmouseup</code></td><td>鼠标弹起触发</td></tr><tr><td><code>onmousedown</code></td><td>鼠标按下触发</td></tr><tr><td><code>onmouseenter</code></td><td>鼠标移动到元素上时触发</td></tr><tr><td><code>onmouseleave</code></td><td>鼠标离开元素时触发</td></tr></tbody></table><ul><li>如果使用<code>addEventListener</code>不需要加on</li></ul><h4 id="mouseover和mouseenter的区别"><a href="#mouseover和mouseenter的区别" class="headerlink" title="mouseover和mouseenter的区别"></a>mouseover和mouseenter的区别</h4><ul><li><code>mouseover</code>鼠标经过自身盒子会触发，经过子盒子还会触发</li><li><code>mouseenter</code>只会经过自身盒子触发</li><li>原因：<code>mouseenter</code>不会冒泡</li><li>和<code>mouseenter</code>搭配，鼠标离开<code>mouseleave</code>同样不会冒泡</li></ul><h4 id="禁止鼠标右键菜单"><a href="#禁止鼠标右键菜单" class="headerlink" title="禁止鼠标右键菜单"></a>禁止鼠标右键菜单</h4><p><code>contentmenu</code>事件主要控制应该何时显示上下文菜单，主要用于取消默认的上下文菜单，如</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.addEventListener(<span class="string">'contextmenu'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    e.preventDefault();</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="禁止鼠标选中"><a href="#禁止鼠标选中" class="headerlink" title="禁止鼠标选中"></a>禁止鼠标选中</h4><p><code>selectstart</code> 事件在用户开始一个新的选择时候触发。如果事件被取消，选择将不被触发，如</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.addEventListener(<span class="string">'selectstart'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">    e.preventDefault();</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="鼠标事件对象MouseEvent"><a href="#鼠标事件对象MouseEvent" class="headerlink" title="鼠标事件对象MouseEvent"></a>鼠标事件对象MouseEvent</h3><table><thead><tr><th>鼠标事件对象常用属性</th><th>说明</th></tr></thead><tbody><tr><td><code>e.clientX</code></td><td>返回鼠标相对于浏览器窗口可视区的X坐标</td></tr><tr><td><code>e.clientY</code></td><td>返回鼠标相对于浏览器窗口可视区的Y坐标</td></tr><tr><td><code>e.pageX</code></td><td>返回鼠标相对于文档页面的X坐标，IE9+支持</td></tr><tr><td><code>e.pageY</code></td><td>返回鼠标相对于文档页面的Y坐标，IE9+支持</td></tr><tr><td><code>e.screenX</code></td><td>返回鼠标相对于电脑屏幕的X坐标</td></tr><tr><td><code>e.screenY</code></td><td>返回鼠标相对于电脑屏幕的Y坐标</td></tr></tbody></table><h4 id="案例-跟随鼠标的天使"><a href="#案例-跟随鼠标的天使" class="headerlink" title="案例-跟随鼠标的天使"></a>案例-跟随鼠标的天使</h4><p>代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>跟随鼠标的天使<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.angel</span> &#123;</span></span><br><span class="line">            position: absolute;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 跟随鼠标的天使 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/angel.gif"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"angel"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> angel = <span class="built_in">document</span>.querySelector(<span class="string">'.angel'</span>);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(angel);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.addEventListener(<span class="string">'mousemove'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">            angel.style.left = e.pageX - <span class="number">50</span> + <span class="string">'px'</span>;</span></span><br><span class="line"><span class="actionscript">            angel.style.top = e.pageY - <span class="number">40</span> + <span class="string">'px'</span>;</span></span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果</p><img src= /img/loading.gif data-src="https://gitee.com/code-ape/blogImage/raw/master/img/mousemove-angel.gif" alt="mousemove-angel" style="zoom:67%;" /><h3 id="常用的键盘事件"><a href="#常用的键盘事件" class="headerlink" title="常用的键盘事件"></a>常用的键盘事件</h3><table><thead><tr><th>常用的键盘事件</th><th>触发条件</th></tr></thead><tbody><tr><td><code>onkeyup</code></td><td>某个键盘按键被松开时触发</td></tr><tr><td><code>onkeydown</code></td><td>某个键盘按键被按下时触发</td></tr><tr><td><code>onkeypress</code></td><td>某个键盘按键被按下时触发，<strong>但不识别功能键，如Ctrl、Shift、Alt、Backspace等</strong></td></tr></tbody></table><ul><li>三个常用键盘事件的执行顺序：<code>keydown</code> – <code>keypress</code> – <code>keyup</code></li><li>如果使用<code>addEventListener</code>不需要加on</li><li><code>keydown</code>和<code>keypress</code>在文本框中的特点：它们两个事件先触发，键入的文本才落入文本框中。</li><li><code>keyup</code>在文本框中的特点：<code>keyup</code>事件触发是，键入的文本已经落入文本框中。</li></ul><h4 id="案例-仿京东快递单号查询"><a href="#案例-仿京东快递单号查询" class="headerlink" title="案例-仿京东快递单号查询"></a>案例-仿京东快递单号查询</h4><p>代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>仿京东快递单号查询<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.jdkd-search-wrapper</span> &#123;</span></span><br><span class="line">            margin-top: 50px;</span><br><span class="line">            position: relative;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.jdkd-tip</span> &#123;</span></span><br><span class="line">            top: -38px;</span><br><span class="line">            position: absolute;</span><br><span class="line">            width: 171px;</span><br><span class="line">            height: 30px;</span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#ccc</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">box-shadow</span>: 2<span class="selector-tag">px</span> 2<span class="selector-tag">px</span> 5<span class="selector-tag">px</span> <span class="selector-tag">rgba</span>(0, 0, 0, <span class="selector-class">.2</span>);</span></span><br><span class="line">            padding-left: 5px;</span><br><span class="line">            font-size: 20px;</span><br><span class="line">            display: none;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.jdkd-tip</span><span class="selector-pseudo">::after</span> &#123;</span></span><br><span class="line">            content: '';</span><br><span class="line">            left: 20px;</span><br><span class="line">            top: 26px;</span><br><span class="line">            position: absolute;</span><br><span class="line">            width: 9px;</span><br><span class="line">            height: 9px;</span><br><span class="line">            transform: rotate(45deg);</span><br><span class="line"><span class="css">            <span class="selector-tag">border-bottom</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#ccc</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">border-right</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#ccc</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 仿京东快递单号查询 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"jdkd-search-wrapper"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"jdkd-tip"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">"jdkd-search"</span> <span class="attr">placeholder</span>=<span class="string">"请输入您的快递单号"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> search = <span class="built_in">document</span>.getElementById(<span class="string">'jdkd-search'</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> tip = <span class="built_in">document</span>.querySelector(<span class="string">'.jdkd-tip'</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 搜索框获得焦点时如果内容不为空则显示提示盒子</span></span></span><br><span class="line"><span class="actionscript">        search.addEventListener(<span class="string">'focus'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">if</span> (<span class="keyword">this</span>.value != <span class="string">''</span>) &#123;</span></span><br><span class="line"><span class="actionscript">                tip.style.display = <span class="string">'block'</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line"><span class="actionscript">        <span class="comment">// 搜索框失去焦点时隐藏提示盒子</span></span></span><br><span class="line"><span class="actionscript">        search.addEventListener(<span class="string">'blur'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            tip.style.display = <span class="string">'none'</span>;</span></span><br><span class="line">        &#125;)</span><br><span class="line"><span class="actionscript">        <span class="comment">// 搜索框输入内容时提示盒子内容同步其内容</span></span></span><br><span class="line"><span class="actionscript">        search.addEventListener(<span class="string">'keyup'</span>, <span class="function"><span class="keyword">function</span> <span class="params">(e)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">if</span> (<span class="keyword">this</span>.value != <span class="string">''</span>) &#123;</span></span><br><span class="line"><span class="actionscript">                tip.style.display = <span class="string">'block'</span>;</span></span><br><span class="line"><span class="actionscript">                tip.innerHTML = <span class="keyword">this</span>.value;</span></span><br><span class="line"><span class="actionscript">            &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">                tip.style.display = <span class="string">'none'</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果</p><p><img src= /img/loading.gif data-src="https://gitee.com/code-ape/blogImage/raw/master/img/jdkd-search.gif" alt="jdkd-search"></p><h3 id="键盘事件对象KeyboardEvent"><a href="#键盘事件对象KeyboardEvent" class="headerlink" title="键盘事件对象KeyboardEvent"></a>键盘事件对象KeyboardEvent</h3><table><thead><tr><th>常用键盘事件对象属性</th><th>说明</th></tr></thead><tbody><tr><td><code>e.keyCode</code></td><td>返回该键的ASCII值</td></tr></tbody></table><ul><li>使用<code>keyCode</code>时注意<code>keyup</code>和<code>keydown</code>事件不区分字母大小写，如a和A得到的都是65；而<code>keypress</code>事件区分字母大小写，如a为97，A为65</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;  &lt;em&gt;『 注 : 本笔记摘自视频 &lt;a href=&quot;https://www.bilibili.com/video/BV1k4411w7sV&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;JavaScript核心 DOM BOM操作&lt;/a&gt;，如有侵权,请联系删除。』&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://www.hardape.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JavaScript" scheme="https://www.hardape.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="https://www.hardape.top/tags/JavaScript/"/>
    
      <category term="DOM" scheme="https://www.hardape.top/tags/DOM/"/>
    
  </entry>
  
  <entry>
    <title>11-DOM基础</title>
    <link href="https://www.hardape.top/article/60186ae8.html"/>
    <id>https://www.hardape.top/article/60186ae8.html</id>
    <published>2020-04-20T08:10:15.000Z</published>
    <updated>2020-05-22T13:41:02.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>  <em>『 注 : 本笔记摘自视频 <a href="https://www.bilibili.com/video/BV1k4411w7sV" target="_blank" rel="noopener">JavaScript核心 DOM BOM操作</a>，如有侵权,请联系删除。』</em></p></blockquote><a id="more"></a><h2 id="Web-APIs和JS基础的关联性"><a href="#Web-APIs和JS基础的关联性" class="headerlink" title="Web APIs和JS基础的关联性"></a>Web APIs和JS基础的关联性</h2><h3 id="JS的组成"><a href="#JS的组成" class="headerlink" title="JS的组成"></a>JS的组成</h3><img src= /img/loading.gif data-src="https://gitee.com/code-ape/blogImage/raw/master/img/image-20200407105435453.png" alt="image-20200407105435453" style="zoom: 80%;" /><h3 id="JS基础"><a href="#JS基础" class="headerlink" title="JS基础"></a>JS基础</h3><ul><li>JS基础是ECMAScript标准规定的基本语法</li><li>完成不了常用的网页交互效果</li></ul><h3 id="Web-APIs"><a href="#Web-APIs" class="headerlink" title="Web APIs"></a>Web APIs</h3><ul><li>Web APIs 是W3C组织的标准，是JS独有的部分</li><li>主要包含DOM和BOM</li><li>需要使用ECMAScript的语法作为基础</li><li>主要学习页面交互功能</li></ul><h2 id="API"><a href="#API" class="headerlink" title="API"></a>API</h2><ul><li>API(Application Programming Interface，应用程序编程接口)是一些预先定义的函数，目的是提供应用程序与开发人员基于某软件或硬件得以访问一组例程的能力，而又无需访问源码，或理解内部工作机制的细节。</li><li>简单来说，API是提供给程序员的一种工具，以便能更轻松地实现想要完成的功能。</li></ul><h2 id="Web-API"><a href="#Web-API" class="headerlink" title="Web API"></a>Web API</h2><ul><li>Web API是浏览器提供了一套操作浏览器功能和页面元素的API(BOM和DOM)</li><li>MDN详细API：<a href="https://developer.mozilla.org/zh-CN/docs/Web/API" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Web/API</a></li></ul><h2 id="DOM简介"><a href="#DOM简介" class="headerlink" title="DOM简介"></a>DOM简介</h2><ul><li>文档对象模型(Document Object Model，简称DOM)，是W3C组织推荐的处理可扩展标记语言(HTML或者XML)的<strong>标准编程接口</strong>。</li><li>W3C已经定义了一系列的DOM接口，通过这些DOM接口可以改变网页的内容、结构和样式。</li></ul><h2 id="DOM树"><a href="#DOM树" class="headerlink" title="DOM树"></a>DOM树</h2><p><img src= /img/loading.gif data-src="https://gitee.com/code-ape/blogImage/raw/master/img/image-20200407111307240.png" alt="image-20200407111307240"></p><ul><li>文档：一个页面就是一个文档，DOM中使用<strong>document</strong>表示</li><li>元素：页面中的所有标签都是元素，DOM中使用<strong>element</strong>表示</li><li>节点：网页中所有内容都是节点(标签、属性、文本、注释等)，DOM中使用<strong>node</strong>表示</li><li>DOM把以上内容(文档、元素、节点)都看做是<strong>对象</strong></li></ul><h2 id="获取元素"><a href="#获取元素" class="headerlink" title="获取元素"></a>获取元素</h2><p>获取页面中的元素可以使用以下几种方式：</p><ul><li>根据ID获取</li><li>根据标签名获取</li><li>通过HTML5新增的方法获取</li><li>特殊元素获取</li></ul><h3 id="根据ID获取元素"><a href="#根据ID获取元素" class="headerlink" title="根据ID获取元素"></a>根据ID获取元素</h3><p>Document的方法<code>getElementById()</code>返回一个匹配特定ID的元素。</p><h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> element = <span class="built_in">document</span>.getElementById(id);</span><br></pre></td></tr></table></figure><h4 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"time"</span>&gt;</span>2020-02-02<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> t = <span class="built_in">document</span>.getElementById(<span class="string">'time'</span>);</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(t);</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> t);</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.dir(t);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>返回一个匹配到 ID 的 DOM Element对象，如果当前文档中拥有特定ID的元素不存在则返回null</li><li>由于文档页面是从上往下加载，所以先得有标签，script就需写到标签下面</li><li>id是大小写敏感的字符串</li><li><code>console.dir()</code>打印返回的元素对象，可以更好地查看里面的属性和方法</li></ul><h3 id="根据标签名获取元素"><a href="#根据标签名获取元素" class="headerlink" title="根据标签名获取元素"></a>根据标签名获取元素</h3><p><code>getElementsByTagName()</code>方法可以返回带有指定标签名的对象的集合HTMLCollection。</p><h4 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 获取document中包括所有给定标签名称的元素的HTML集合</span></span><br><span class="line"><span class="keyword">var</span> elements = <span class="built_in">document</span>.getElementsByTagName(name);</span><br><span class="line"><span class="comment">// 2. 获取element的子元素中带有指定标签名的对象的HTML集合，不包括元素自己</span></span><br><span class="line"><span class="keyword">var</span> elements = element.getElementsByTagName(name);</span><br></pre></td></tr></table></figure><h4 id="例子-1"><a href="#例子-1" class="headerlink" title="例子"></a>例子</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>淡黄的长裙<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>蓬松的头发<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>牵着我的手看最新展出的油画<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>无人的街道<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>在空荡的家里<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>就只剩我一个人开狂欢的party<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> lis = <span class="built_in">document</span>.getElementsByTagName(<span class="string">'li'</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(lis);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="keyword">typeof</span> lis);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 遍历HTMLCollection对象</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; lis.length; i++) &#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(lis[i]);</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="actionscript">    <span class="comment">// 根据标签名获取父元素中指定标签名的子元素</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> ol = <span class="built_in">document</span>.getElementsByTagName(<span class="string">'ol'</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> olLis = ol.getElementsByTagName(<span class="string">'li'</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(olLis);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>HTMLCollection对象是以伪数组的形式存储的</li><li>可以使用数组遍历的方式变量HTMLCollection对象</li><li>如果页面中无指定标签元素，则返回空HTMLCollection对象</li><li>返回的 <code>HTMLCollection</code>是动态的, 意味着它可以自动更新自己来保持和 DOM 树的同步而不用再次调用 <code>getElementsByTagName()</code></li></ul><h3 id="通过HTML5新增的方法获取"><a href="#通过HTML5新增的方法获取" class="headerlink" title="通过HTML5新增的方法获取"></a>通过HTML5新增的方法获取</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.根据类名返回元素/子元素对象集合HTMLCollection</span></span><br><span class="line"><span class="keyword">var</span> elements = <span class="built_in">document</span>/element.getElementsByClassName(<span class="string">'类名'</span>);</span><br><span class="line"><span class="comment">// 2.根据指定选择器返回第一个元素/子元素对象</span></span><br><span class="line"><span class="keyword">var</span> element = <span class="built_in">document</span>/element.querySelector(<span class="string">'选择器'</span>);</span><br><span class="line"><span class="comment">// 3.根据指定选择器返回元素/子元素对象集合HTMLCollection</span></span><br><span class="line"><span class="keyword">var</span> elements = <span class="built_in">document</span>/element.querySelectorAll(<span class="string">'选择器'</span>);</span><br></pre></td></tr></table></figure><ul><li><code>querySelector</code>和<code>querySelectorAll</code>中的选择器需要加符号，例如【标签名】、【.类名】、【#id名】等。</li><li><code>document/element.querySelector</code>只能得到文档/父元素中指定选择器的第一个元素对象。</li></ul><h3 id="获取特殊元素"><a href="#获取特殊元素" class="headerlink" title="获取特殊元素"></a>获取特殊元素</h3><h4 id="获取body元素"><a href="#获取body元素" class="headerlink" title="获取body元素"></a>获取body元素</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> bodyElement = <span class="built_in">document</span>.body;<span class="comment">// 返回body元素对象</span></span><br></pre></td></tr></table></figure><h4 id="获取html元素"><a href="#获取html元素" class="headerlink" title="获取html元素"></a>获取html元素</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> htmlElement = <span class="built_in">document</span>.documentElement; <span class="comment">// 返回html元素对象</span></span><br></pre></td></tr></table></figure><h2 id="事件基础"><a href="#事件基础" class="headerlink" title="事件基础"></a>事件基础</h2><h3 id="事件概述"><a href="#事件概述" class="headerlink" title="事件概述"></a>事件概述</h3><ul><li>JavaScript使我们有能力创建动态页面，而事件是可以被JavaScript侦测到的行为。</li><li>简单理解：触发——响应机制。</li><li>网页中的每个元素都可以产生某些可以触发JavaScript的事件，例如，我们可以在用户点击某按钮时产生一个事件，然后去执行某些操作。</li></ul><h3 id="事件三要素"><a href="#事件三要素" class="headerlink" title="事件三要素"></a>事件三要素</h3><p>事件由三部分组成：<strong>事件源</strong>、<strong>事件类型</strong>、<strong>事件处理程序</strong>，也称为事件三要素。</p><ul><li>事件源——事件被触发的对象</li><li>事件类型——如何触发，什么事件，比如鼠标点击、鼠标经过、键盘按下等</li><li>事件处理程序——通过一个函数赋值的方式完成</li></ul><h3 id="执行事件的步骤"><a href="#执行事件的步骤" class="headerlink" title="执行事件的步骤"></a>执行事件的步骤</h3><ol><li>获取事件源</li><li>注册事件(绑定事件)</li><li>添加事件处理程序(采取函数赋值形式)</li></ol><h3 id="常见的鼠标事件"><a href="#常见的鼠标事件" class="headerlink" title="常见的鼠标事件"></a>常见的鼠标事件</h3><table><thead><tr><th>鼠标事件</th><th>触发条件</th></tr></thead><tbody><tr><td><code>onclick</code></td><td>鼠标点击左键触发</td></tr><tr><td><code>onmouseover</code></td><td>鼠标经过触发</td></tr><tr><td><code>onmouseout</code></td><td>鼠标离开触发</td></tr><tr><td><code>onfocus</code></td><td>获得鼠标焦点触发</td></tr><tr><td><code>onblur</code></td><td>失去鼠标焦点触发</td></tr><tr><td><code>onmousemove</code></td><td>鼠标移动触发</td></tr><tr><td><code>onmouseup</code></td><td>鼠标弹起触发</td></tr><tr><td><code>onmousedown</code></td><td>鼠标按下触发</td></tr></tbody></table><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p>在事件函数中<code>this</code>指向的是事件函数的调用者</p><h3 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"bohu"</span>&gt;</span>唐伯虎<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 唐伯虎点秋香</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 获取事件源</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> bohuBtn = <span class="built_in">document</span>.querySelector(<span class="string">'.bohu'</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 注册事件 处理程序</span></span></span><br><span class="line"><span class="actionscript">    bohuBtn.onclick = <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        alert(<span class="string">"秋香"</span>);</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="操作元素"><a href="#操作元素" class="headerlink" title="操作元素"></a>操作元素</h2><p>JavaScript的DOM操作可以改变网页内容、结构和样式，我们可以利用DOM操作元素来改变元素里面的内容、属性等。注意以下都是属性</p><h3 id="操作元素内容"><a href="#操作元素内容" class="headerlink" title="操作元素内容"></a>操作元素内容</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.innerText,从起始位置到终止位置的内容，但它去除html标签，同时空格和换行也会去掉</span></span><br><span class="line">element.innerText</span><br><span class="line"><span class="comment">// 2.innerHTML,从起始位置到终止位置的内容，包括html标签，同时保留空格和换行</span></span><br><span class="line">element.innerHTML</span><br></pre></td></tr></table></figure><ul><li>innerText是非标准的，不识别HTML标签</li><li>innerHTML是W3C标准，识别HTML标签</li><li>innerText和innerHTML都是可读写的</li></ul><h3 id="操作元素属性"><a href="#操作元素属性" class="headerlink" title="操作元素属性"></a>操作元素属性</h3><h4 id="获取属性值"><a href="#获取属性值" class="headerlink" title="获取属性值"></a>获取属性值</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取内置属性值</span></span><br><span class="line">element.属性;</span><br><span class="line"><span class="comment">// 获取自定义属性值</span></span><br><span class="line">element.getAttribute(<span class="string">'属性'</span>);</span><br></pre></td></tr></table></figure><ul><li><code>element.属性</code> 只能获取内置属性值，即元素本身自带属性的属性值</li><li>由于class是JS中的保留字，故使用<code>className</code>来操作元素类名属性，即<code>element.className</code></li><li><code>element.getAttribute(&#39;属性&#39;)</code>  主要获得自定义的属性值</li><li><code>getAttribute</code>也能获取内置属性值</li><li>特别地，使用<code>getAttribute</code>获取的<code>value</code>的值是默认值，不能够获取到实时的用户数据</li></ul><h4 id="设置属性值"><a href="#设置属性值" class="headerlink" title="设置属性值"></a>设置属性值</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 设置内置属性</span></span><br><span class="line">element.属性 = <span class="string">'值'</span>;</span><br><span class="line"><span class="comment">// 设置自定义属性</span></span><br><span class="line">element.setAttribute(<span class="string">'属性'</span>,<span class="string">'值'</span>);</span><br></pre></td></tr></table></figure><ul><li><code>setAttribute</code>也能设置内置属性值</li><li>特别地，使用<code>setAttribute</code>设置元素类名属性仍使用<code>class</code>属性名，即<code>element.setAttribute(&#39;class&#39;,&#39;值&#39;);</code></li><li>自定义属性目的：为了保存并使用数据。有些数据可以保存到页面中而不用保存的数据库中。</li></ul><h4 id="移除属性"><a href="#移除属性" class="headerlink" title="移除属性"></a>移除属性</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">element.removeAttribute(<span class="string">'属性'</span>);</span><br></pre></td></tr></table></figure><h3 id="H5自定义属性"><a href="#H5自定义属性" class="headerlink" title="H5自定义属性"></a>H5自定义属性</h3><p>由于有些自定义属性很容易引起歧义，不容易判断是元素的内置属性还是自定义属性，故H5新增了自定义属性。</p><h4 id="设置H5自定义属性"><a href="#设置H5自定义属性" class="headerlink" title="设置H5自定义属性"></a>设置H5自定义属性</h4><p>H5规定自定义属性以  <strong><code>data-</code></strong>  开头作为属性名并且赋值，如</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">data-index</span>=<span class="string">"1"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>或者使用JS设置自定义属性</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">element.setAttribute(<span class="string">'data-index'</span>,<span class="number">1</span>);</span><br></pre></td></tr></table></figure><h4 id="获取H5自定义属性"><a href="#获取H5自定义属性" class="headerlink" title="获取H5自定义属性"></a>获取H5自定义属性</h4><p>兼容性获取通过<code>getAttribute</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">element.getAttribute(<span class="string">'data-index'</span>)</span><br></pre></td></tr></table></figure><p>H5新增<code>dataset</code>(IE11)开始支持</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">element.dataset.index</span><br><span class="line">element.dataset[&#39;index&#39;]</span><br></pre></td></tr></table></figure><ul><li>如果自定义属性中有多个-链接的单词，使用<code>dataset</code>获取时采取驼峰命名法</li></ul><h3 id="常用元素的属性操作"><a href="#常用元素的属性操作" class="headerlink" title="常用元素的属性操作"></a>常用元素的属性操作</h3><ol><li><strong><code>innerText</code></strong>、<strong><code>innerHTML</code></strong>改变元素内容</li><li><strong><code>src</code></strong>、<strong><code>href</code></strong></li><li><strong><code>id</code></strong>、<strong><code>alt</code></strong>、<strong><code>title</code></strong></li></ol><h3 id="表单元素的属性操作"><a href="#表单元素的属性操作" class="headerlink" title="表单元素的属性操作"></a>表单元素的属性操作</h3><p>利用DOM可以操作如下表单元素的属性：<br><strong><code>type</code>、<code>value</code>、<code>checked</code>、<code>selected</code>、<code>disabled</code></strong></p><h4 id="案例-仿京东显示密码"><a href="#案例-仿京东显示密码" class="headerlink" title="案例-仿京东显示密码"></a>案例-仿京东显示密码</h4><p>结构(HTML)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 仿京东显示密码案例 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"pwd"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/eye-close.png"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">"eye"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">"pwd"</span> <span class="attr">placeholder</span>=<span class="string">"请输入密码"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>样式(CSS)</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">35px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">outline</span>: none;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> <span class="selector-tag">label</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">4px</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">24px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">24px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> <span class="selector-tag">label</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> <span class="selector-tag">label</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>行为(JS)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> pwdInput = <span class="built_in">document</span>.getElementById(<span class="string">'pwd'</span>);</span><br><span class="line"><span class="keyword">var</span> eyeImg = <span class="built_in">document</span>.getElementById(<span class="string">'eye'</span>);</span><br><span class="line"><span class="keyword">var</span> flag = <span class="number">1</span>;<span class="comment">//1表示为密码隐藏显示，0表示为密码明文显示</span></span><br><span class="line">eyeImg.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(flag == <span class="number">1</span>) &#123;</span><br><span class="line">        pwdInput.type = <span class="string">"text"</span>;</span><br><span class="line">        <span class="keyword">this</span>.src = <span class="string">"images/eye-open.png"</span>;</span><br><span class="line">        flag = <span class="number">0</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        pwdInput.type = <span class="string">"password"</span>;</span><br><span class="line">        <span class="keyword">this</span>.src = <span class="string">"images/eye-close.png"</span>;</span><br><span class="line">        flag = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果</p><p><img src= /img/loading.gif data-src="https://gitee.com/code-ape/blogImage/raw/master/img/jd-password.gif" alt="jd-password"></p><h3 id="操作元素样式属性"><a href="#操作元素样式属性" class="headerlink" title="操作元素样式属性"></a>操作元素样式属性</h3><p>我们可以通过JS修改元素的大小、颜色、位置等样式</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">element.style.backgroundColor = ‘red<span class="string">';//操作行内背景颜色样式</span></span><br><span class="line"><span class="string">element.className//操作元素类名属性</span></span><br></pre></td></tr></table></figure><ul><li>JS里面的样式采取驼峰命名法，比如<code>fontSize</code>、<code>backgroundColor</code>等</li><li>JS修改style样式操作，产生的是行内样式，CSS权重较高</li><li>JS通过修改元素的className操作元素的样式，适合于样式较多或者功能复杂的情况</li><li>由于class是JS中的保留字，故使用className来操作元素类名属性</li><li>className会直接更改元素的类名，会覆盖原先的类名</li></ul><h3 id="排他思想"><a href="#排他思想" class="headerlink" title="排他思想"></a>排他思想</h3><p>如果有同一组元素，想要某一种元素实现某种样式，需要用到循环的<strong>排他思想</strong>算法：</p><ol><li>所有元素全部清除样式</li><li>给当前元素设置样式</li><li>注意顺序不能颠倒</li></ol><h3 id="案例1-循环精灵图背景"><a href="#案例1-循环精灵图背景" class="headerlink" title="案例1-循环精灵图背景"></a>案例1-循环精灵图背景</h3><h4 id="案例分析"><a href="#案例分析" class="headerlink" title="案例分析"></a>案例分析</h4><ul><li>首先精灵图图片排列需要有规律</li><li>核心思路：利用for循环修改精灵图片的背景位置<code>background-position</code></li></ul><h4 id="结构-HTML"><a href="#结构-HTML" class="headerlink" title="结构(HTML)"></a>结构(HTML)</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 循环精灵图背景 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="样式-CSS"><a href="#样式-CSS" class="headerlink" title="样式(CSS)"></a>样式(CSS)</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ul</span> &#123;</span><br><span class="line">    <span class="attribute">list-style</span>: none;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.nav</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">250px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.nav</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">24px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">24px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: skyblue;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(images/sprite.png);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="行为-JS"><a href="#行为-JS" class="headerlink" title="行为(JS)"></a>行为(JS)</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> navUl = <span class="built_in">document</span>.querySelector(<span class="string">'.nav'</span>);</span><br><span class="line"><span class="keyword">var</span> navLis = navUl.getElementsByTagName(<span class="string">'li'</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; navLis.length; i++) &#123;</span><br><span class="line">    navLis[i].style.backgroundPosition = <span class="string">'0 -'</span> + i*<span class="number">44</span> + <span class="string">'px'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h4><p><img src= /img/loading.gif data-src="https://gitee.com/code-ape/blogImage/raw/master/img/image-20200415205709812.png" alt="image-20200415205709812"></p><h3 id="案例2-密码框验证信息"><a href="#案例2-密码框验证信息" class="headerlink" title="案例2-密码框验证信息"></a>案例2-密码框验证信息</h3><h4 id="结构-HTML-1"><a href="#结构-HTML-1" class="headerlink" title="结构(HTML)"></a>结构(HTML)</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 密码框验证信息 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pwd-wrapper"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">"ipt"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"message"</span>&gt;</span>请输入6~16位密码<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="样式-CSS-1"><a href="#样式-CSS-1" class="headerlink" title="样式(CSS)"></a>样式(CSS)</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.message</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#999</span>;</span><br><span class="line">    <span class="attribute">padding-left</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(images/message.png) no-repeat left center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.wrong</span> &#123;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(images/wrong.png);</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.right</span> &#123;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(images/right.png);</span><br><span class="line">    <span class="attribute">color</span>: green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="行为-JS-1"><a href="#行为-JS-1" class="headerlink" title="行为(JS)"></a>行为(JS)</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> ipt = <span class="built_in">document</span>.getElementById(<span class="string">'ipt'</span>);</span><br><span class="line"><span class="keyword">var</span> message = <span class="built_in">document</span>.querySelector(<span class="string">'.message'</span>);</span><br><span class="line"><span class="comment">// 失去焦点注册事件</span></span><br><span class="line">ipt.onblur = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">this</span>.value.length &lt; <span class="number">6</span> || <span class="keyword">this</span>.value.length &gt; <span class="number">16</span>) &#123;</span><br><span class="line">        message.className = <span class="string">'message wrong'</span>;</span><br><span class="line">        message.innerHTML = <span class="string">'输入错误，密码位数应为6~16'</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        message.className = <span class="string">'message right'</span>;</span><br><span class="line">        message.innerHTML = <span class="string">'输入正确'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="效果-1"><a href="#效果-1" class="headerlink" title="效果"></a>效果</h4><p><img src= /img/loading.gif data-src="https://gitee.com/code-ape/blogImage/raw/master/img/pwd-message.gif" alt="pwd-message"></p><h3 id="案例3-切换背景图片"><a href="#案例3-切换背景图片" class="headerlink" title="案例3-切换背景图片"></a>案例3-切换背景图片</h3><h4 id="结构-HTML-2"><a href="#结构-HTML-2" class="headerlink" title="结构(HTML)"></a>结构(HTML)</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 切换背景图片 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"bg"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/bg-1.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/bg-2.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/bg-3.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/bg-4.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="样式-CSS-2"><a href="#样式-CSS-2" class="headerlink" title="样式(CSS)"></a>样式(CSS)</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(images/bg-<span class="number">1</span>.jpg) no-repeat;</span><br><span class="line">    <span class="attribute">background-size</span>: cover;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.bg</span> &#123;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">424px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">3px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.bg</span> <span class="selector-tag">li</span>&#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">3px</span>;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.bg</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="行为-JS-2"><a href="#行为-JS-2" class="headerlink" title="行为(JS)"></a>行为(JS)</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> bgImg = <span class="built_in">document</span>.querySelector(<span class="string">'.bg'</span>).querySelectorAll(<span class="string">'img'</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; bgImg.length; i++) &#123;</span><br><span class="line">    bgImg[i].onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">document</span>.body.style.backgroundImage = <span class="string">'url('</span> + <span class="keyword">this</span>.src + <span class="string">')'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="效果-2"><a href="#效果-2" class="headerlink" title="效果"></a>效果</h4><img src= /img/loading.gif data-src="https://gitee.com/code-ape/blogImage/raw/master/img/switch-bg.gif" alt="switch-bg" style="zoom:80%;" /><h3 id="案例4-仿新浪财经表格行变色效果"><a href="#案例4-仿新浪财经表格行变色效果" class="headerlink" title="案例4-仿新浪财经表格行变色效果"></a>案例4-仿新浪财经表格行变色效果</h3><h4 id="结构-HTML-3"><a href="#结构-HTML-3" class="headerlink" title="结构(HTML)"></a>结构(HTML)</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"sina"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>代码<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>名称<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>最新公布净值<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>累计净值<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>前单位净值<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>净值增长率<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>公布日期<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>基金规模<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>000001<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>华夏成长混合<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>1.128<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>3.589<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>1.137<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>-0.792%<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>2020-04-15<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>41.618<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>000003<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>中海可转债债券A<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>0.785<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>0.995<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>0.790<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>-0.633%<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>2020-04-15<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>1.118<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>000004<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>中海可转债债券C<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>0.785<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>0.995<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>0.790<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>-0.633%<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>2020-04-15<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>0.566<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>000005<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>嘉实增强信用定期债券<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>1.045<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>1.387<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>1.044<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>+0.096%<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>2020-04-15<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>1.194<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>000006<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>西部利得量化成长混合<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>1.322<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>1.322<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>1.328<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>-0.414%<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>2020-04-15<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>1.149<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="样式-CSS-3"><a href="#样式-CSS-3" class="headerlink" title="样式(CSS)"></a>样式(CSS)</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">table</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">807px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">border-collapse</span>: collapse;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">table</span> <span class="selector-tag">thead</span> <span class="selector-tag">tr</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#D4EDFF</span>;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#ACD3F2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">table</span> <span class="selector-tag">tbody</span> <span class="selector-tag">tr</span> &#123;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">table</span> <span class="selector-tag">th</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">25px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">25px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#0100a3</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">400</span>;</span><br><span class="line">    <span class="attribute">padding-right</span>: <span class="number">10px</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">table</span> <span class="selector-tag">td</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">29px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">29px</span>;</span><br><span class="line">    <span class="attribute">padding-right</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">table</span> <span class="selector-tag">tbody</span> <span class="selector-tag">tr</span> <span class="selector-tag">td</span><span class="selector-pseudo">:nth-child(-n+2)</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#0100a3</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">table</span> <span class="selector-tag">thead</span> <span class="selector-tag">tr</span> <span class="selector-tag">th</span><span class="selector-pseudo">:nth-child(n+3)</span> &#123;</span><br><span class="line">    <span class="attribute">text-align</span>: right;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">table</span> <span class="selector-tag">tbody</span> <span class="selector-tag">tr</span> <span class="selector-tag">td</span><span class="selector-pseudo">:nth-child(n+3)</span> &#123;</span><br><span class="line">    <span class="attribute">text-align</span>: right;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.green</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: green;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.red</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="行为-JS-3"><a href="#行为-JS-3" class="headerlink" title="行为(JS)"></a>行为(JS)</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取tr</span></span><br><span class="line"><span class="keyword">var</span> dataTrs = <span class="built_in">document</span>.querySelector(<span class="string">'.sina'</span>).querySelector(<span class="string">'tbody'</span>).querySelectorAll(<span class="string">'tr'</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; dataTrs.length; i++) &#123;</span><br><span class="line">    <span class="comment">// 获取td</span></span><br><span class="line">    <span class="keyword">var</span> tds = dataTrs[i].querySelectorAll(<span class="string">'td'</span>);</span><br><span class="line">    <span class="comment">// 根据净值增长率正负选择字体颜色</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">parseFloat</span>(tds[<span class="number">5</span>].innerHTML) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        dataTrs[i].className = <span class="string">'red'</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        dataTrs[i].className = <span class="string">'green'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 设置公布日期颜色</span></span><br><span class="line">    tds[<span class="number">6</span>].style.color = <span class="string">'#333'</span>;</span><br><span class="line">    <span class="comment">// 设置鼠标经过/移出背景颜色变化</span></span><br><span class="line">    dataTrs[i].onmouseover = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.style.backgroundColor = <span class="string">'#e6f3fc'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    dataTrs[i].onmouseout = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.style.backgroundColor = <span class="string">'#fff'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="效果-3"><a href="#效果-3" class="headerlink" title="效果"></a>效果</h4><p><img src= /img/loading.gif data-src="https://gitee.com/code-ape/blogImage/raw/master/img/sina-tabel.gif" alt="sina-tabel"></p><h3 id="案例5-表单全选取消案例"><a href="#案例5-表单全选取消案例" class="headerlink" title="案例5-表单全选取消案例"></a>案例5-表单全选取消案例</h3><h4 id="结构-HTML-4"><a href="#结构-HTML-4" class="headerlink" title="结构(HTML)"></a>结构(HTML)</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 表单全选取消案例 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"phone"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">thead</span> <span class="attr">id</span>=<span class="string">"phoneHead"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>商品<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>价钱<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tbody</span> <span class="attr">id</span>=<span class="string">"phoneList"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>iPhone8<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>8000<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>iPad Pro<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>5000<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>iPad Air<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>2000<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Apple Watch<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>2000<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="样式-CSS-4"><a href="#样式-CSS-4" class="headerlink" title="样式(CSS)"></a>样式(CSS)</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.phone</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">border-collapse</span>: collapse;</span><br><span class="line">    <span class="attribute">border-spacing</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#c0c0c0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.phone</span> <span class="selector-tag">th</span>,</span><br><span class="line"><span class="selector-class">.phone</span> <span class="selector-tag">td</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#c0c0c0</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#404060</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.phone</span> <span class="selector-tag">th</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#09c</span>;</span><br><span class="line">    <span class="attribute">font</span>: bold <span class="number">16px</span> <span class="string">"微软雅黑"</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.phone</span> <span class="selector-tag">td</span> &#123;</span><br><span class="line">    <span class="attribute">font</span>: <span class="number">14px</span> <span class="string">"微软雅黑"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.phone</span> <span class="selector-tag">tr</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#f5f0f5</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.phone</span> <span class="selector-tag">tr</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#f0f0f0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.phone</span> <span class="selector-tag">tr</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fafafa</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="行为-JS-4"><a href="#行为-JS-4" class="headerlink" title="行为(JS)"></a>行为(JS)</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 所有复选框列表</span></span><br><span class="line"><span class="keyword">var</span> phonesChecks = <span class="built_in">document</span>.getElementById(<span class="string">'phoneList'</span>).querySelectorAll(<span class="string">'input'</span>);</span><br><span class="line"><span class="comment">// 全选框按钮</span></span><br><span class="line"><span class="keyword">var</span> checkboxAll = <span class="built_in">document</span>.getElementById(<span class="string">'phoneHead'</span>).querySelector(<span class="string">'input'</span>);</span><br><span class="line"><span class="comment">// 全选框按钮影响下面的复选框按钮与其一致</span></span><br><span class="line">checkboxAll.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; phonesChecks.length; i++) &#123;</span><br><span class="line">        phonesChecks[i].checked = <span class="keyword">this</span>.checked;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; phonesChecks.length; i++) &#123;</span><br><span class="line">    phonesChecks[i].onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// flag 控制全选按钮是否选中</span></span><br><span class="line">        <span class="keyword">var</span> flag = <span class="literal">true</span>;</span><br><span class="line">        <span class="comment">// 循环检查复选框是否被选中</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; phonesChecks.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!phonesChecks[i].checked) &#123;</span><br><span class="line">                flag = <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>; <span class="comment">//退出for循环，可以提高程序效率</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        checkboxAll.checked = flag;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="效果-4"><a href="#效果-4" class="headerlink" title="效果"></a>效果</h4><p><img src= /img/loading.gif data-src="https://gitee.com/code-ape/blogImage/raw/master/img/phone-checkbox.gif" alt="phone-checkbox"></p><h3 id="案例6-仿京东商品信息tab栏切换"><a href="#案例6-仿京东商品信息tab栏切换" class="headerlink" title="案例6-仿京东商品信息tab栏切换"></a>案例6-仿京东商品信息tab栏切换</h3><h4 id="结构-HTML-5"><a href="#结构-HTML-5" class="headerlink" title="结构(HTML)"></a>结构(HTML)</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 仿京东商品信息tab栏切换 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"goods-tab"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"current"</span>&gt;</span>商品介绍<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>规格与包装<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>售后保障<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>商品评价(143万+)<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>手机社区<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span> <span class="attr">style</span>=<span class="string">"display: block;"</span>&gt;</span></span><br><span class="line">    商品介绍模块</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">    规格与包装模块</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">    售后保障模块</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">    商品评价模块</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">    手机社区模块</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="样式-CSS-5"><a href="#样式-CSS-5" class="headerlink" title="样式(CSS)"></a>样式(CSS)</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ul</span> &#123;</span><br><span class="line">    <span class="attribute">list-style</span>: none;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.goods-tab</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">38px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">38px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#f7f7f7</span>;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#e4393c</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.goods-tab</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">25px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.goods-tab</span> <span class="selector-tag">li</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.current</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#e4393c</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="行为-JS-5"><a href="#行为-JS-5" class="headerlink" title="行为(JS)"></a>行为(JS)</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> goodsTabLis = <span class="built_in">document</span>.querySelector(<span class="string">'.goods-tab'</span>).getElementsByTagName(<span class="string">'li'</span>);</span><br><span class="line"><span class="keyword">var</span> items = <span class="built_in">document</span>.querySelectorAll(<span class="string">'.item'</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; goodsTabLis.length; i++) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 给tab栏中的li添加自定义属性index,以使其与下面模块一一对应</span></span><br><span class="line">    goodsTabLis[i].setAttribute(<span class="string">'index'</span>,i);</span><br><span class="line">    goodsTabLis[i].onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// tab栏点击样式修改</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; goodsTabLis.length; i++) &#123;</span><br><span class="line">            goodsTabLis[i].className = <span class="string">''</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">this</span>.className = <span class="string">'current'</span>;</span><br><span class="line">        <span class="comment">// 显示对应模块</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; items.length; i++) &#123;</span><br><span class="line">            items[i].style.display = <span class="string">'none'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> index = <span class="keyword">this</span>.getAttribute(<span class="string">'index'</span>);</span><br><span class="line">        items[index].style.display = <span class="string">'block'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="效果-5"><a href="#效果-5" class="headerlink" title="效果"></a>效果</h4><p><img src= /img/loading.gif data-src="https://gitee.com/code-ape/blogImage/raw/master/img/tab-list.gif" alt="tab-list"></p><h2 id="节点操作"><a href="#节点操作" class="headerlink" title="节点操作"></a>节点操作</h2><h3 id="获取元素的两种方式"><a href="#获取元素的两种方式" class="headerlink" title="获取元素的两种方式"></a>获取元素的两种方式</h3><h4 id="利用DOM提供的方法获取元素"><a href="#利用DOM提供的方法获取元素" class="headerlink" title="利用DOM提供的方法获取元素"></a>利用DOM提供的方法获取元素</h4><ul><li>document.getElementById()</li><li>document.getElementsByTagName()</li><li>document.querySelector()等</li><li>逻辑性不强，繁琐</li></ul><h4 id="利用节点层次关系获取元素"><a href="#利用节点层次关系获取元素" class="headerlink" title="利用节点层次关系获取元素"></a>利用节点层次关系获取元素</h4><ul><li>利用父子兄节点关系获取元素</li><li>逻辑性强，但是兼容性差</li></ul><h3 id="节点概述"><a href="#节点概述" class="headerlink" title="节点概述"></a>节点概述</h3><ul><li>网页中的所有内容都是节点(标签、属性、文本、注释等)，在DOM中，节点使用<strong>node</strong>来表示。</li><li>HTML DOM树中的所有节点均可通过JavaScript进行访问，所有HTML元素(节点)均可被修改，也可以被创建和删除。</li><li>一般地，节点至少拥有<strong>nodeType(节点类型)</strong>、<strong>nodeName(节点名称)</strong>和<strong>nodeValue(节点名称)</strong>这三个基本属性。可通过<code>console.dir</code>来查看这三个属性。</li><li>元素节点 nodeType 为 1；属性节点 nodeType 为 2；文本节点 nodeType 为 3 (文本节点包含文字、空格、换行等)。</li><li>在实际开发中，节点操作主要操作的是元素节点。</li></ul><h3 id="节点层级"><a href="#节点层级" class="headerlink" title="节点层级"></a>节点层级</h3><p>利用DOM树可以把节点划分为不同的层级关系，常见的是<strong>父子兄层级关系</strong></p><h4 id="父级节点"><a href="#父级节点" class="headerlink" title="父级节点"></a>父级节点</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node.parentNode</span><br></pre></td></tr></table></figure><ul><li>得到的是离node元素最近的一个父级节点</li><li>如果找不到父节点返回为null</li></ul><h4 id="子节点"><a href="#子节点" class="headerlink" title="子节点"></a>子节点</h4><p>1.标准获取子节点<code>childNodes</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.标准</span></span><br><span class="line">parentNode.childNodes</span><br></pre></td></tr></table></figure><ul><li><p><code>childNodes</code>返回包含指定节点的子节点的集合，该集合为即时更新的集合。</p></li><li><p>返回值中包含了<strong>所有的子节点</strong>，包括元素节点，文本节点等。</p></li><li><p>如果只想获取子元素节点，可通过<code>nodeType</code>判断专门处理，故不提倡使用childNodes</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 打印childeNodes中的子元素节点</span></span><br><span class="line"><span class="keyword">var</span> ul = <span class="built_in">document</span>.querySelector(<span class="string">'ul'</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; ul.childNodes.length; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span>(ul.childNodes[i].nodeType == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="comment">// nodeType为1的节点为元素节点</span></span><br><span class="line">        <span class="built_in">console</span>.log(ul.childNodes[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ol start="2"><li>非标准获取子元素节点<code>children</code></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 2.非标准</span></span><br><span class="line">parentNode.children</span><br></pre></td></tr></table></figure><ul><li><code>children</code>是一个只读属性，返回所有的<strong>子元素节点</strong>(伪数组)。它只返回子元素节点，其余节点不返回。</li><li>虽然<code>chidlren</code>是一个非标准，但是得到了各个浏览器的支持，可放心使用。</li></ul><p>3.获取第一个/最后一个子节点<code>firstChild/lastChild</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取第一个子节点</span></span><br><span class="line">parentNode.firstChild</span><br><span class="line"><span class="comment">// 获取最后一个子节点</span></span><br><span class="line">parentNode.lastChild</span><br></pre></td></tr></table></figure><ul><li><code>firstChild</code>/<code>lastChild</code>返回第一个/最后一个子节点，包含所有的节点</li></ul><p>4.获取第一个/最后一个子元素节点<code>firstElementChild</code>/<code>lastElementChild</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取第一个子元素节点</span></span><br><span class="line">parentNode.firstElementChild</span><br><span class="line"><span class="comment">// 获取最后一个子元节点</span></span><br><span class="line">parentNode.lastElementChild</span><br></pre></td></tr></table></figure><ul><li><code>fitstElementChild</code>/<code>lastElementChild</code>返回第一个/最后一个子元素节点</li><li>这两个属性有兼容性问题，IE9以上才支持</li></ul><p>5.实际开发获取第一个/最后一个子元素节点</p><p>实际开发中，<code>firstChild</code>/<code>lastChild</code>操作不便，而<code>firstElementChild</code>/<code>lastElementChild</code>又存在兼容性问题，解决方案如下</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取第一个子元素节点</span></span><br><span class="line">parentNode.children[<span class="number">0</span>]</span><br><span class="line"><span class="comment">// 获取最后一个子元素节点</span></span><br><span class="line">parentNode.children[parentNode.children.length - <span class="number">1</span>]</span><br></pre></td></tr></table></figure><h4 id="兄弟节点"><a href="#兄弟节点" class="headerlink" title="兄弟节点"></a>兄弟节点</h4><p>1.获取兄弟节点</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取下一个兄弟节点</span></span><br><span class="line">node.nextSibling</span><br><span class="line"><span class="comment">// 获取上一个兄弟节点</span></span><br><span class="line">node.previousSibling</span><br></pre></td></tr></table></figure><ul><li><code>nextSibling</code>返回当前元素的下一个兄弟节点，找不到则返回null。包含所有节点</li><li><code>previousSibling</code>返回当前元素的上一个兄弟节点，找不到则返回null。包含所有节点</li></ul><p>2.获取兄弟元素节点</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取下一个兄弟元素节点</span></span><br><span class="line">node.nextElementSibling</span><br><span class="line"><span class="comment">// 获取上一个兄弟元素节点</span></span><br><span class="line">node.previousElementSibling</span><br></pre></td></tr></table></figure><ul><li><code>nextElementSibling</code>返回当前元素的下一个兄弟元素节点，找不到则返回null。</li><li><code>previousElementSibling</code>返回当前元素的上一个兄弟元素节点，找不到则返回null。</li><li>这两个属性有兼容性问题，IE9以上才支持</li></ul><p>3.解决兼容性问题——封装兼容性函数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getNextElementSibling</span>(<span class="params">element</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> el = element;</span><br><span class="line">    <span class="keyword">while</span>(el = el.nextSibling) &#123;</span><br><span class="line">        <span class="keyword">if</span>(el.nodeType === <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> el;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="创建节点"><a href="#创建节点" class="headerlink" title="创建节点"></a>创建节点</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.createElement(<span class="string">'tagName'</span>);</span><br></pre></td></tr></table></figure><ul><li><code>createElement</code>方法创建由<code>tagName</code>指定的HTML元素，因为这些元素原先不存在，是根据我们的需求动态生成的，所以我们也称为<strong>动态创建元素节点</strong>。</li></ul><h3 id="添加节点"><a href="#添加节点" class="headerlink" title="添加节点"></a>添加节点</h3><h4 id="添加末尾子节点"><a href="#添加末尾子节点" class="headerlink" title="添加末尾子节点"></a>添加末尾子节点</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node.appendChild(child)</span><br></pre></td></tr></table></figure><ul><li><code>appendChild</code>方法将一个节点添加到指定父节点的子节点列表<strong>末尾</strong>。类似于CSS中的after伪元素。</li></ul><h4 id="添加前面子节点"><a href="#添加前面子节点" class="headerlink" title="添加前面子节点"></a>添加前面子节点</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node.insertBefore(child,指定元素)</span><br></pre></td></tr></table></figure><ul><li><code>insertBefore</code>方法将一个节点添加到父节点的指定子节点<strong>前面</strong>。类似于CSS中的before伪元素。</li></ul><h4 id="添加至指定位置"><a href="#添加至指定位置" class="headerlink" title="添加至指定位置"></a>添加至指定位置</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node.insertAdjcentHTML(position, text)</span><br></pre></td></tr></table></figure><ul><li><code>insertAdjacentHTML()</code>方法将指定的文本解析为 <code>Element</code>元素，并将结果节点插入到DOM树中的指定位置。它不会重新解析它正在使用的元素，因此它不会破坏元素内的现有元素。这避免了额外的序列化步骤，使其比直接使用innerHTML操作更快。</li></ul><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td><code>position</code></td><td>表示插入内容相对于元素的位置，<code>&#39;beforebegin&#39;</code>：元素自身的前面；<code>&#39;afterbegin&#39;</code>：插入元素内部的第一个子节点之前；<code>&#39;beforeend&#39;</code>：插入元素内部的最后一个子节点之后；<code>&#39;afterend&#39;</code>：元素自身的后面。</td></tr><tr><td><code>text</code></td><td>是要被解析为HTML或XML元素的字符串。</td></tr></tbody></table><h3 id="删除节点"><a href="#删除节点" class="headerlink" title="删除节点"></a>删除节点</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 删除子节点</span></span><br><span class="line">node.removeChild(child)</span><br><span class="line"><span class="comment">// 删除自身节点</span></span><br><span class="line">node.remove()</span><br></pre></td></tr></table></figure><ul><li><code>removeChild</code>方法从DOM中删除一个子节点，返回删除的节点。</li><li><code>remove</code>方法把对象从它所属的 DOM 树中删除。</li></ul><h3 id="复制节点"><a href="#复制节点" class="headerlink" title="复制节点"></a>复制节点</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 浅拷贝</span></span><br><span class="line">node.cloneNode()  </span><br><span class="line">node.cloneNode(<span class="literal">false</span>)</span><br><span class="line"><span class="comment">// 深度拷贝</span></span><br><span class="line">node.cloneNode(<span class="literal">true</span>)</span><br></pre></td></tr></table></figure><ul><li><code>cloneNode</code>方法返回调用该方法的节点的一个副本。也称为克隆节点/拷贝节点</li><li>如果括号参数为<strong>空</strong>或者参数为<strong>false</strong>，则是<strong>浅拷贝</strong>，即只复制节点本身，不克隆里面的子节点。</li><li>如果括号参数为<strong>true</strong>，则是<strong>深度拷贝</strong>，会复制节点本身以及里面所有的子节点。</li></ul><h3 id="三种动态创建元素区别"><a href="#三种动态创建元素区别" class="headerlink" title="三种动态创建元素区别"></a>三种动态创建元素区别</h3><h4 id="document-write"><a href="#document-write" class="headerlink" title="document.write()"></a>document.write()</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.write(<span class="string">'&lt;div&gt;123&lt;/div&gt;'</span>);</span><br></pre></td></tr></table></figure><ul><li><code>document.write</code>是直接将内容写入页面的内容流，但是当文档流执行完毕，再调用会导致页面全部重绘，故不推荐使用。</li><li><code>innserHTML</code>是将内容写入某个DOM节点，不会导致页面全部重绘</li></ul><h4 id="innerHTML和createElement效率比较"><a href="#innerHTML和createElement效率比较" class="headerlink" title="innerHTML和createElement效率比较"></a>innerHTML和createElement效率比较</h4><ul><li><code>innerHTML</code>创建多个效率更高(<strong>不要拼接字符串，采取数组形式拼接</strong>)，结构稍微复杂</li><li><code>createElement</code>创建多个元素效率稍低一点点，但是结构更清晰</li></ul><h3 id="案例1-仿新浪下拉菜单"><a href="#案例1-仿新浪下拉菜单" class="headerlink" title="案例1-仿新浪下拉菜单"></a>案例1-仿新浪下拉菜单</h3><h4 id="结构-HTML-6"><a href="#结构-HTML-6" class="headerlink" title="结构(HTML)"></a>结构(HTML)</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 仿新浪下拉菜单 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"sina-nav"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>微博<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"sina-subnav"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>私信<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>评论<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>@我<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>博客<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"sina-subnav"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>博客评论<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>未读提醒<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>邮箱<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"sina-subnav"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>免费邮箱<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>VIP邮箱<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>企业邮箱<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="样式-CSS-6"><a href="#样式-CSS-6" class="headerlink" title="样式(CSS)"></a>样式(CSS)</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ul</span> &#123;</span><br><span class="line">    <span class="attribute">list-style</span>: none;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;  </span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#4c4c4c</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.sina-nav</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">border-top</span>: <span class="number">3px</span> solid <span class="number">#ff8500</span>;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#edeef0</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fcfcfc</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.sina-nav</span>&gt;<span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.sina-nav</span>&gt;<span class="selector-tag">li</span>&gt;<span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">18px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.sina-nav</span>&gt;<span class="selector-tag">li</span>&gt;<span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#edeef0</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ff8400</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.sina-subnav</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.sina-subnav</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#fecc5b</span>;</span><br><span class="line">    <span class="attribute">border-top</span>: none;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">29px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">29px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">18px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.sina-subnav</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff5da</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#e67902</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="行为-JS-6"><a href="#行为-JS-6" class="headerlink" title="行为(JS)"></a>行为(JS)</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> sinaNavsLis = <span class="built_in">document</span>.querySelector(<span class="string">'.sina-nav'</span>).children;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; sinaNavsLis.length; i++) &#123;</span><br><span class="line">    sinaNavsLis[i].onmouseover = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.children[<span class="number">1</span>].style.display = <span class="string">'block'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    sinaNavsLis[i].onmouseout = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.children[<span class="number">1</span>].style.display = <span class="string">'none'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="效果-6"><a href="#效果-6" class="headerlink" title="效果"></a>效果</h4><p><img src= /img/loading.gif data-src="https://gitee.com/code-ape/blogImage/raw/master/img/sina-nav.gif" alt="sina-nav"></p><h3 id="案例2-简单版发布留言"><a href="#案例2-简单版发布留言" class="headerlink" title="案例2-简单版发布留言"></a>案例2-简单版发布留言</h3><h4 id="结构-HTML-7"><a href="#结构-HTML-7" class="headerlink" title="结构(HTML)"></a>结构(HTML)</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 简单版发布留言案例 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">cols</span>=<span class="string">"30"</span> <span class="attr">rows</span>=<span class="string">"10"</span> <span class="attr">id</span>=<span class="string">"comment"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn-send"</span>&gt;</span>发布<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"comments-list"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="样式-CSS-7"><a href="#样式-CSS-7" class="headerlink" title="样式(CSS)"></a>样式(CSS)</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.comments-list</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.comments-list</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.comments-list</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff5da</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="行为-JS-7"><a href="#行为-JS-7" class="headerlink" title="行为(JS)"></a>行为(JS)</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> btnSend = <span class="built_in">document</span>.getElementById(<span class="string">'btn-send'</span>);</span><br><span class="line"><span class="keyword">var</span> commentTxtArea = <span class="built_in">document</span>.getElementById(<span class="string">'comment'</span>);</span><br><span class="line"><span class="keyword">var</span> ul = <span class="built_in">document</span>.querySelector(<span class="string">'.comments-list'</span>);</span><br><span class="line">btnSend.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> comment = commentTxtArea.value;</span><br><span class="line">    <span class="keyword">if</span> (comment == <span class="string">''</span>) &#123;</span><br><span class="line">        alert(<span class="string">'留言不能为空！'</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 创建li节点展示留言</span></span><br><span class="line">        <span class="keyword">var</span> li = <span class="built_in">document</span>.createElement(<span class="string">'li'</span>);</span><br><span class="line">        li.innerHTML = comment + <span class="string">'&lt;a href="javascript:;"&gt;删除&lt;/a&gt;'</span>;</span><br><span class="line">        ul.insertBefore(li, ul.children[<span class="number">0</span>]);</span><br><span class="line">        commentTxtArea.value = <span class="string">''</span>;</span><br><span class="line">        <span class="comment">// 删除留言</span></span><br><span class="line">        <span class="keyword">var</span> deleteAs = ul.querySelectorAll(<span class="string">'a'</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; deleteAs.length; i++) &#123;</span><br><span class="line">            deleteAs[i].onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                ul.removeChild(<span class="keyword">this</span>.parentNode);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="效果-7"><a href="#效果-7" class="headerlink" title="效果"></a>效果</h4><p><img src= /img/loading.gif data-src="https://gitee.com/code-ape/blogImage/raw/master/img/easy-message.gif" alt="easy-message"></p><h4 id="注意-1"><a href="#注意-1" class="headerlink" title="注意"></a>注意</h4><p>阻止链接<code>a</code>跳转需要添加<strong><code>href=&quot;javascript:void(0);&quot;</code></strong>或者<strong><code>href=&quot;javascript:;&quot;</code></strong></p><h3 id="案例3-动态创建表格"><a href="#案例3-动态创建表格" class="headerlink" title="案例3-动态创建表格"></a>案例3-动态创建表格</h3><h4 id="结构-HTML-8"><a href="#结构-HTML-8" class="headerlink" title="结构(HTML)"></a>结构(HTML)</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"stu"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>学科<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>成绩<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="样式-CSS-8"><a href="#样式-CSS-8" class="headerlink" title="样式(CSS)"></a>样式(CSS)</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.stu</span> &#123;</span><br><span class="line">    <span class="attribute">border-collapse</span>: collapse;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.stu</span> <span class="selector-tag">thead</span> <span class="selector-tag">tr</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#f0f0f0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.stu</span> <span class="selector-tag">tr</span> <span class="selector-tag">th</span>,</span><br><span class="line"><span class="selector-class">.stu</span> <span class="selector-tag">tr</span> <span class="selector-tag">td</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.stu</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">color</span>: blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="行为-JS-8"><a href="#行为-JS-8" class="headerlink" title="行为(JS)"></a>行为(JS)</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用对象封装学生信息</span></span><br><span class="line"><span class="keyword">var</span> stuDatas = [&#123;</span><br><span class="line">    name: <span class="string">'张三'</span>,</span><br><span class="line">    subject: <span class="string">'语文'</span>,</span><br><span class="line">    score: <span class="number">95</span>,</span><br><span class="line">&#125;, &#123;</span><br><span class="line">    name: <span class="string">'李四'</span>,</span><br><span class="line">    subject: <span class="string">'数学'</span>,</span><br><span class="line">    score: <span class="number">100</span>,</span><br><span class="line">&#125;, &#123;</span><br><span class="line">    name: <span class="string">'王五'</span>,</span><br><span class="line">    subject: <span class="string">'物理'</span>,</span><br><span class="line">    score: <span class="number">97</span>,</span><br><span class="line">&#125;, &#123;</span><br><span class="line">    name: <span class="string">'赵六'</span>,</span><br><span class="line">    subject: <span class="string">'政治'</span>,</span><br><span class="line">    score: <span class="number">98</span>,</span><br><span class="line">&#125;];</span><br><span class="line"><span class="keyword">var</span> tbody = <span class="built_in">document</span>.querySelector(<span class="string">'.stu'</span>).querySelector(<span class="string">'tbody'</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; stuDatas.length; i++) &#123;</span><br><span class="line">    <span class="keyword">var</span> tr = <span class="built_in">document</span>.createElement(<span class="string">'tr'</span>);</span><br><span class="line">    tbody.appendChild(tr);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> k <span class="keyword">in</span> stuDatas[i]) &#123;</span><br><span class="line">        <span class="keyword">var</span> td = <span class="built_in">document</span>.createElement(<span class="string">'td'</span>);</span><br><span class="line">        tr.appendChild(td);</span><br><span class="line">        td.innerHTML = stuDatas[i][k];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 创建删除单元格节点</span></span><br><span class="line">    <span class="keyword">var</span> td = <span class="built_in">document</span>.createElement(<span class="string">'td'</span>);</span><br><span class="line">    td.innerHTML = <span class="string">'&lt;a href="javascript:;"&gt;删除&lt;/a&gt;'</span>;</span><br><span class="line">    tr.appendChild(td);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> del =  <span class="built_in">document</span>.querySelector(<span class="string">'.stu'</span>).querySelectorAll(<span class="string">'a'</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; del.length; i++) &#123;</span><br><span class="line">    <span class="comment">// 注册删除点击事件</span></span><br><span class="line">    del[i].onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        tbody.removeChild(<span class="keyword">this</span>.parentNode.parentNode);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="效果-8"><a href="#效果-8" class="headerlink" title="效果"></a>效果</h4><p><img src= /img/loading.gif data-src="https://gitee.com/code-ape/blogImage/raw/master/img/stu-table.gif" alt="stu-table"></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;  &lt;em&gt;『 注 : 本笔记摘自视频 &lt;a href=&quot;https://www.bilibili.com/video/BV1k4411w7sV&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;JavaScript核心 DOM BOM操作&lt;/a&gt;，如有侵权,请联系删除。』&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://www.hardape.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JavaScript" scheme="https://www.hardape.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="https://www.hardape.top/tags/JavaScript/"/>
    
      <category term="DOM" scheme="https://www.hardape.top/tags/DOM/"/>
    
  </entry>
  
  <entry>
    <title>10-JS的内置对象</title>
    <link href="https://www.hardape.top/article/21c19b32.html"/>
    <id>https://www.hardape.top/article/21c19b32.html</id>
    <published>2020-04-20T08:04:57.000Z</published>
    <updated>2020-05-22T13:40:58.559Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>  <em>『 注 : 本笔记摘自视频 <a href="https://www.bilibili.com/video/av56979800" target="_blank" rel="noopener">JavaScript基础</a>，如有侵权,请联系删除。』</em></p></blockquote><a id="more"></a><h2 id="内置对象概述"><a href="#内置对象概述" class="headerlink" title="内置对象概述"></a>内置对象概述</h2><ul><li>JavaScript中的对象分为3种：<strong>自定义对象</strong>、<strong>内置对象</strong>、<strong>浏览器对象</strong></li><li>前面两种对象的JS基础内容，属于ECMAScript；第三个对象是JS独有的</li><li>内置对象是指JS语言自带的一些对象，这些对象供开发者使用，并提供了一些常用的或最基本的而必要的功能(属性和方法)</li><li>内置对象最大的优点就是帮助我们快速开发</li><li>JavaScript提供了多个内置对象：<strong>Math</strong>、<strong>Date</strong>、<strong>Array</strong>、<strong>String</strong>等</li><li>具体查阅 <a href="https://developer.mozilla.org/zh-CN/" target="_blank" rel="noopener">MDN文档</a></li></ul><h2 id="Math对象"><a href="#Math对象" class="headerlink" title="Math对象"></a>Math对象</h2><p>Math对象不是构造函数，不需要通过new来调用，它具有数学常数的函数的属性和方法。和数学相关的运算(求绝对值，取整，最大值等)可以使用Math中的成员。</p><h4 id="常用属性和方法"><a href="#常用属性和方法" class="headerlink" title="常用属性和方法"></a>常用属性和方法</h4><table><thead><tr><th>常用属性和方法</th><th>说明</th></tr></thead><tbody><tr><td><code>Math.PI</code></td><td>圆周率</td></tr><tr><td><code>Math.floor()</code></td><td>向下取整</td></tr><tr><td><code>Math.ceil()</code></td><td>向上取整</td></tr><tr><td><code>Math.round()</code></td><td>四舍五入，但 .5 特殊往大数取，-3.5结果是-3</td></tr><tr><td><code>Math.abs()</code></td><td>绝对值</td></tr><tr><td><code>Math.max()/Math.min()</code></td><td>求最大值/最小值</td></tr></tbody></table><h4 id="随机数方法Math-random"><a href="#随机数方法Math-random" class="headerlink" title="随机数方法Math.random()"></a>随机数方法Math.random()</h4><ul><li>Math.random()返回一个范围为[0,1)的随机浮点数</li><li>得到一个两数之间的随机整数，包括两个数在内的代码如下：</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getRandomIntInclusive</span>(<span class="params">min, max</span>) </span>&#123;</span><br><span class="line">  min = <span class="built_in">Math</span>.ceil(min);</span><br><span class="line">  max = <span class="built_in">Math</span>.floor(max);</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * (max - min + <span class="number">1</span>)) + min; <span class="comment">//含最大值，含最小值 </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Date对象"><a href="#Date对象" class="headerlink" title="Date对象"></a>Date对象</h2><p>Date对象是构造函数，必须使用new来调用，Date实例用来处理日期和时间</p><h3 id="获取当前时间"><a href="#获取当前时间" class="headerlink" title="获取当前时间"></a>获取当前时间</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br></pre></td></tr></table></figure><h3 id="构造函数中的参数"><a href="#构造函数中的参数" class="headerlink" title="构造函数中的参数"></a>构造函数中的参数</h3><p>如果Date对象构造函数中有参数，就返回参数中的时间</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> date1 = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">'2020-02-02 20:02:02'</span>)</span><br><span class="line"><span class="keyword">var</span> date2 = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">'2020/02/02 20:02:02'</span>)</span><br></pre></td></tr></table></figure><h3 id="日期格式化"><a href="#日期格式化" class="headerlink" title="日期格式化"></a>日期格式化</h3><table><thead><tr><th>方法名</th><th>说明</th></tr></thead><tbody><tr><td><code>getFullYear()</code></td><td>获取当年</td></tr><tr><td><code>getMonth()</code></td><td>获取当月(0-11)</td></tr><tr><td><code>getDate()</code></td><td>或者当天日期</td></tr><tr><td><code>getDay()</code></td><td>获取星期几(周日0到周六6)</td></tr><tr><td><code>getHours()</code></td><td>获取当前小时</td></tr><tr><td><code>getMinutes()</code></td><td>获取当前分钟</td></tr><tr><td><code>getSeconds()</code></td><td>获取当前秒钟</td></tr></tbody></table><h3 id="获取日期的总的毫秒形式"><a href="#获取日期的总的毫秒形式" class="headerlink" title="获取日期的总的毫秒形式"></a>获取日期的总的毫秒形式</h3><p>Date对象是基于1970年1月1日(世界标准时间)起的毫秒数，我们经常利用总的毫秒数来计算时间，因为它更精确。有四种方式获取毫秒数。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line"><span class="comment">// 1. 通过dateobj.valueOf()</span></span><br><span class="line"><span class="keyword">var</span> millisecond1 = date.valueOf();</span><br><span class="line"><span class="comment">// 2. 通过dateobj.getTime();</span></span><br><span class="line"><span class="keyword">var</span> millisecond2 = date.getTime();</span><br><span class="line"><span class="comment">// 3. 通过+newDate()，简单且常用的写法</span></span><br><span class="line"><span class="keyword">var</span> millisecond3 = +<span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line"><span class="comment">// 4. 通过Date.now(),H5新增</span></span><br><span class="line"><span class="keyword">var</span> millisecond4 = <span class="built_in">Date</span>.now();</span><br></pre></td></tr></table></figure><p>可在括号中指定日期，若无参数，返回当前时间的时间戳。</p><h3 id="案例-倒计时"><a href="#案例-倒计时" class="headerlink" title="案例-倒计时"></a>案例-倒计时</h3><h4 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h4><ul><li>用时间戳来实现。用户输入时间总毫秒数减去现在时间的总毫秒数，得到的就是剩余时间的毫秒数</li><li>把剩余时间总毫秒数转换为天、时、分、秒(时间戳转换)</li></ul><h4 id="转换公式"><a href="#转换公式" class="headerlink" title="转换公式"></a>转换公式</h4><ul><li>天数 = parseInt(总秒数/60/60/24)；</li><li>小时数 = parseInt(总秒数/60/60%24);</li><li>分钟数 = parseInt(总秒数/60%60);</li><li>秒数 = parseInt(总秒数%60);</li></ul><h4 id="函数封装"><a href="#函数封装" class="headerlink" title="函数封装"></a>函数封装</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 倒计时</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">countDown</span>(<span class="params">time</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> nowTime = +<span class="keyword">new</span> <span class="built_in">Date</span>();<span class="comment">// 当前时间戳</span></span><br><span class="line">    <span class="keyword">var</span> toTime = +<span class="keyword">new</span> <span class="built_in">Date</span>(time);<span class="comment">// 倒计时结束时间戳</span></span><br><span class="line">    <span class="keyword">var</span> times = (toTime - nowTime) / <span class="number">1000</span>;</span><br><span class="line">    <span class="keyword">var</span> d = <span class="built_in">parseInt</span>(times / <span class="number">60</span> / <span class="number">60</span> / <span class="number">24</span>);<span class="comment">// 天</span></span><br><span class="line">    d = d &lt; <span class="number">10</span> ? <span class="string">'0'</span> + d : d;</span><br><span class="line">    <span class="keyword">var</span> h = <span class="built_in">parseInt</span>(times / <span class="number">60</span> / <span class="number">60</span> % <span class="number">24</span>);<span class="comment">// 时</span></span><br><span class="line">    h = h &lt; <span class="number">10</span> ? <span class="string">'0'</span> + h : h;</span><br><span class="line">    <span class="keyword">var</span> m = <span class="built_in">parseInt</span>(times / <span class="number">60</span> % <span class="number">60</span>);<span class="comment">// 分</span></span><br><span class="line">    m = m &lt; <span class="number">10</span> ? <span class="string">'0'</span> + m : m;</span><br><span class="line">    <span class="keyword">var</span> s = <span class="built_in">parseInt</span>(times % <span class="number">60</span>);<span class="comment">// 秒</span></span><br><span class="line">    s = s &lt; <span class="number">10</span> ? <span class="string">'0'</span> + s : s;</span><br><span class="line">    <span class="keyword">return</span> d + <span class="string">'天'</span> + h + <span class="string">'时'</span> + m + <span class="string">'分'</span> + s + <span class="string">'秒'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Array对象"><a href="#Array对象" class="headerlink" title="Array对象"></a>Array对象</h2><h3 id="数组对象的创建"><a href="#数组对象的创建" class="headerlink" title="数组对象的创建"></a>数组对象的创建</h3><ul><li>字面量方式创建</li><li>通过 new Array() 创建</li></ul><h3 id="检测是否为数组"><a href="#检测是否为数组" class="headerlink" title="检测是否为数组"></a>检测是否为数组</h3><h4 id="通过instanceof"><a href="#通过instanceof" class="headerlink" title="通过instanceof"></a>通过instanceof</h4><p>通过instanceof运算符来判断是否为数组</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>] <span class="keyword">instanceof</span> <span class="built_in">Array</span>);<span class="comment">// true</span></span><br></pre></td></tr></table></figure><h4 id="通过isArray"><a href="#通过isArray" class="headerlink" title="通过isArray()"></a>通过isArray()</h4><p>通过Array.isArray(obj)来判断是否为数组，是H5新增，ie9及以上版本支持</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Array</span>.isArray([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]));  <span class="comment">//true</span></span><br></pre></td></tr></table></figure><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><p>当检测Array实例时, <code>Array.isArray</code> 优于 <code>instanceof</code></p><h3 id="添加-删除数组元素"><a href="#添加-删除数组元素" class="headerlink" title="添加/删除数组元素"></a>添加/删除数组元素</h3><table><thead><tr><th>方法名</th><th>说明</th><th>返回值</th></tr></thead><tbody><tr><td><code>push(参数1,参数2...)</code></td><td>末尾添加一个或多个元素，修改原数组</td><td>返回新的长度</td></tr><tr><td><code>pop()</code></td><td>删除数组最后一个元素，数组长度减1，无参数，修改原数组</td><td>返回删除的元素的值</td></tr><tr><td><code>unshift(参数1,参数2...)</code></td><td>向数组的开头添加一个或多个元素，修改原数组</td><td>返回新的长度</td></tr><tr><td><code>shift()</code></td><td>删除数组元素的第一个元素，数组长度减1，无参数，修改原数组</td><td>返回删除的元素的值</td></tr></tbody></table><h3 id="数组翻转-排序"><a href="#数组翻转-排序" class="headerlink" title="数组翻转/排序"></a>数组翻转/排序</h3><table><thead><tr><th>方法名</th><th>说明</th><th>返回值</th></tr></thead><tbody><tr><td><code>reverse()</code></td><td>颠倒数组中元素的顺序，无参数，修改原数组</td><td>返回翻转后的新数组</td></tr><tr><td><code>sort()</code></td><td>对数组中的元素进行排序，修改原数组</td><td>返回排序后的新数组</td></tr></tbody></table><ul><li>sort()默认排序顺序是在将元素转换为字符串，然后比较它们的UTF-16代码单元值序列时构建的</li></ul><h4 id="使用sort-升序-降序排序"><a href="#使用sort-升序-降序排序" class="headerlink" title="使用sort()升序/降序排序"></a>使用sort()升序/降序排序</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 升序顺序排列</span></span><br><span class="line">arr.sort(<span class="function"><span class="keyword">function</span>(<span class="params">a,b</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a - b;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 降序顺序排列</span></span><br><span class="line">arr.sort(<span class="function"><span class="keyword">function</span>(<span class="params">a,b</span>) </span>&#123;</span><br><span class="line">    retuen b - a;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="数组索引方法"><a href="#数组索引方法" class="headerlink" title="数组索引方法"></a>数组索引方法</h3><table><thead><tr><th>方法名</th><th>说明</th><th>返回值</th></tr></thead><tbody><tr><td><code>indexOf()</code></td><td>数组中查找给定元素的第一个索引</td><td>存在返回索引号，不存在返回-1</td></tr><tr><td><code>lastIndexOf()</code></td><td>数组中查找给定元素的最后一个索引</td><td>存在返回索引号，不存在返回-1</td></tr></tbody></table><h4 id="案例-数组去重"><a href="#案例-数组去重" class="headerlink" title="案例-数组去重"></a>案例-数组去重</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 案例-数组去重</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">arrUnique</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> newArr =[];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(newArr.indexOf(arr[i]) === <span class="number">-1</span>) &#123;</span><br><span class="line">            newArr.push(arr[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> newArr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="数组转换为字符串"><a href="#数组转换为字符串" class="headerlink" title="数组转换为字符串"></a>数组转换为字符串</h3><table><thead><tr><th>方法名</th><th>说明</th><th>返回值</th></tr></thead><tbody><tr><td><code>toString()</code></td><td>把数组转换成字符串，逗号分隔每个元素</td><td>返回一个字符串</td></tr><tr><td><code>join(&#39;分隔符&#39;)</code></td><td>把数组转换为字符串，分隔符分隔每个元素</td><td>返回一个字符串</td></tr></tbody></table><h3 id="数组的拼接和截取"><a href="#数组的拼接和截取" class="headerlink" title="数组的拼接和截取"></a>数组的拼接和截取</h3><table><thead><tr><th>方法名</th><th>说明</th><th>返回值</th></tr></thead><tbody><tr><td><code>concat()</code></td><td>将一个或多个字符串与原字符串连接合并，不影响原数组</td><td>连接后的新数组</td></tr><tr><td><code>slice()</code></td><td><code>slice(begin,end)</code>，截取[begin，end)范围内的元素形成新数组，不影响原数组</td><td>截取后的新数组</td></tr><tr><td><code>splice()</code></td><td><code>splice(start,deleteCount,item,item2...)</code>，删除指定位置和长度的元素并可以在删除位置插入指定元素，修改原数组</td><td>返回被删除元素组成的数组</td></tr></tbody></table><h2 id="String对象"><a href="#String对象" class="headerlink" title="String对象"></a>String对象</h2><h3 id="基本包装类型"><a href="#基本包装类型" class="headerlink" title="基本包装类型"></a>基本包装类型</h3><ul><li>为了方便操作基本数据类型，JavaScript提供了三个特殊的引用类型：<strong>String</strong>、<strong>Number</strong>和<strong>Boolean</strong>。</li><li><strong>基本包装类型</strong>就是把简单数据类型包装成为复杂数据类型，这样基本数据类型就有了属性和方法。</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 下面代码有什么问题?</span></span><br><span class="line"><span class="keyword">var</span> str = <span class="string">'andy'</span>;</span><br><span class="line"><span class="built_in">console</span>.log(str.length);</span><br></pre></td></tr></table></figure><p>按道理基本数据类型时没有属性和方法的，而对象才有属性和方法，但是上面代码却可以执行，这是因为JS会把基本数据类型包装为复杂数据类型，其执行过程如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.生成临时变量，把简单数据类型包装为复杂数据类型</span></span><br><span class="line"><span class="keyword">var</span> temp = <span class="keyword">new</span> <span class="built_in">String</span>(<span class="string">'andy'</span>);</span><br><span class="line"><span class="comment">// 2.赋值给我们生成的字符变量</span></span><br><span class="line">str = temp;</span><br><span class="line"><span class="comment">// 3.销毁临时变量</span></span><br><span class="line">temp = <span class="literal">null</span>;</span><br></pre></td></tr></table></figure><h3 id="字符串的不可变"><a href="#字符串的不可变" class="headerlink" title="字符串的不可变"></a>字符串的不可变</h3><p>字符串的不可变指的是字符串里面的值不可变，虽然看上去可以改变内容，但其实是地址变量，内存中新开辟了一个内存空间，故尽量不要过多使用字符串拼接。</p><h3 id="String对象常用方法"><a href="#String对象常用方法" class="headerlink" title="String对象常用方法"></a>String对象常用方法</h3><p>字符串所有的方法都<strong>不会修改字符串本身</strong>(字符串是不可变的)，操作完成会返回一个新的字符串。</p><h4 id="根据子字符串返回位置"><a href="#根据子字符串返回位置" class="headerlink" title="根据子字符串返回位置"></a>根据子字符串返回位置</h4><table><thead><tr><th>方法名</th><th>说明</th></tr></thead><tbody><tr><td><code>indexOf(searchValue,fromIndex)</code></td><td>返回指定内容在原字符串第一次出现的位置，找不到返回-1，开始的位置是<code>fromIndex</code>，可省略</td></tr><tr><td><code>lastIndexOf(searchValue,fromIndex)</code></td><td>返回指定内容在原字符串最后一次出现的位置，找不到返回-1，开始的位置是<code>fromIndex</code>，可省略</td></tr></tbody></table><h4 id="案例1-求字符串中某个子字符串出现的位置和次数"><a href="#案例1-求字符串中某个子字符串出现的位置和次数" class="headerlink" title="案例1-求字符串中某个子字符串出现的位置和次数"></a>案例1-求字符串中某个子字符串出现的位置和次数</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">    求一字符串中一子字符串出现的位置和次数</span></span><br><span class="line"><span class="comment">    参数:str-字符串;subStr-子字符串</span></span><br><span class="line"><span class="comment">    返回值:[位置1,位置2,...,次数]</span></span><br><span class="line"><span class="comment">            若子字符串未出现，返回[0]</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">positionAndTimes</span>(<span class="params">str, subStr</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> index = str.indexOf(subStr);</span><br><span class="line">    <span class="keyword">var</span> result = [];</span><br><span class="line">    <span class="keyword">var</span> times = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (index !== <span class="number">-1</span>) &#123;</span><br><span class="line">        result.push(index);</span><br><span class="line">        times++;</span><br><span class="line">        index = str.indexOf(subStr, index + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    result.push(times);</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="根据位置返回字符"><a href="#根据位置返回字符" class="headerlink" title="根据位置返回字符"></a>根据位置返回字符</h4><table><thead><tr><th>方法名</th><th>说明</th></tr></thead><tbody><tr><td><code>charAt(index)</code></td><td>返回指定位置的字符</td></tr><tr><td><code>charCodeAt(index)</code></td><td>获取指定位置的字符的ASCII码</td></tr><tr><td><code>str[index]</code></td><td>获取指定位置字符，HTML5新增</td></tr></tbody></table><h4 id="案例2-统计字符串中出现次数最多的字符"><a href="#案例2-统计字符串中出现次数最多的字符" class="headerlink" title="案例2-统计字符串中出现次数最多的字符"></a>案例2-统计字符串中出现次数最多的字符</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    统计字符串中出现次数最多的字符(有可能有多个)并返回次数</span></span><br><span class="line"><span class="comment">    参数: str-字符串</span></span><br><span class="line"><span class="comment">    返回值:[字符1,字符2,...,次数]</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">maxTimesChars</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> obj = &#123;&#125;;</span><br><span class="line">    <span class="comment">// 将字符作为属性名，出现次数作为属性值封装到一个对象中</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; str.length; i++) &#123;</span><br><span class="line">        <span class="keyword">var</span> c = str.charAt(i);</span><br><span class="line">        <span class="keyword">if</span> (obj[c]) &#123;</span><br><span class="line">            obj[c]++;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            obj[c] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> maxChars = [];</span><br><span class="line">    <span class="keyword">var</span> maxTime = <span class="number">0</span>;</span><br><span class="line">   </span><br><span class="line">    <span class="comment">// 找出最大次数</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> key <span class="keyword">in</span> obj) &#123;</span><br><span class="line">        <span class="keyword">if</span>(obj[key] &gt; maxTime) &#123;</span><br><span class="line">            maxTime = obj[key];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 找出出现次数为最大次数的字符</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> key <span class="keyword">in</span> obj) &#123;</span><br><span class="line">        <span class="keyword">if</span>(obj[key] === maxTime) &#123;</span><br><span class="line">            maxChars.push(key);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    maxChars.push(maxTime);</span><br><span class="line">    <span class="keyword">return</span> maxChars;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="字符串的拼接和截取"><a href="#字符串的拼接和截取" class="headerlink" title="字符串的拼接和截取"></a>字符串的拼接和截取</h4><table><thead><tr><th>方法名</th><th>说明</th></tr></thead><tbody><tr><td><code>concat(str1,str2,str3...)</code></td><td>concat()方法用于连接两个或多个字符串。等效于+，+更常用</td></tr><tr><td><code>substr(start,length)</code></td><td>从start位置开始截取length长度的字符串，length省略时截取从start位置到结束的字符串</td></tr><tr><td><code>slice(start,end)</code></td><td>截取索引号在[start,end)范围的字符串</td></tr><tr><td><code>substring(start,end)</code></td><td>截取索引号在[start,end)范围的字符串,基本和slice相同，但不接受负值</td></tr></tbody></table><h4 id="替换字符串以及字符串转换为数组"><a href="#替换字符串以及字符串转换为数组" class="headerlink" title="替换字符串以及字符串转换为数组"></a>替换字符串以及字符串转换为数组</h4><table><thead><tr><th>方法名</th><th>说明</th></tr></thead><tbody><tr><td><code>replace(substr,newsubstr)</code></td><td>返回一个由替换值替换子字符串的新字符串，只会替换第一个匹配的子字符串</td></tr><tr><td><code>split(separator)</code></td><td>使用指定的分隔符字符串将一个String对象分割成子字符串数组</td></tr></tbody></table><h4 id="字符串大小写转换"><a href="#字符串大小写转换" class="headerlink" title="字符串大小写转换"></a>字符串大小写转换</h4><table><thead><tr><th>方法名</th><th>说明</th></tr></thead><tbody><tr><td>toUpperCase()</td><td>返回一个将调用字符串转换为大写形式的值</td></tr><tr><td>toLowerCase()</td><td>返回一个将调用字符串转换为小写形式的值</td></tr></tbody></table><h2 id="简单类型和复杂类型"><a href="#简单类型和复杂类型" class="headerlink" title="简单类型和复杂类型"></a>简单类型和复杂类型</h2><p>简单类型又叫做基本数据类型或值类型，复杂类型又叫做引用类型。</p><ul><li>值类型：简单数据类型/基本数据类型，在存储时变量中存储的是值本身，因此叫做值类型，在JS中基本数据类型有string、number、boolean、undefined、null，特殊的，null是一个空的对象，即数据类型为object</li><li>引用类型：复杂数据类型，在存储时变量中存储的的仅仅是地址(引用)，因此叫做引用数据类型，在JS中通过new关键字创建的对象(内置/系统对象、自定义对象)，如Object、Array、Date等都是复杂数据类型</li></ul><h2 id="堆和栈"><a href="#堆和栈" class="headerlink" title="堆和栈"></a>堆和栈</h2><ul><li>堆：存储复杂数据类型(对象)，一般由程序员分配释放，若程序员不释放，由垃圾回收机制回收。</li><li>栈：存放简单数据类型，由操作系统自动分配和释放，包括函数的参数值，局部变量的值等。其操作方式类似于数据结构中的栈。</li><li>JavaScript中没有堆栈的概念，只是通过堆栈的方式更容易理解代码的执行方式</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;  &lt;em&gt;『 注 : 本笔记摘自视频 &lt;a href=&quot;https://www.bilibili.com/video/av56979800&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;JavaScript基础&lt;/a&gt;，如有侵权,请联系删除。』&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://www.hardape.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JavaScript" scheme="https://www.hardape.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="https://www.hardape.top/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>04-Servlet的概念和运行流程</title>
    <link href="https://www.hardape.top/article/287de886.html"/>
    <id>https://www.hardape.top/article/287de886.html</id>
    <published>2020-04-05T12:41:16.000Z</published>
    <updated>2020-05-22T14:46:16.433Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>  <em>『 注 : 本笔记摘自视频 <a href="https://www.bilibili.com/video/BV15b411778m" target="_blank" rel="noopener">尚学堂-Servlet和JSP(JAVAEE基础)全新教程</a>，如有侵权,请联系删除。』</em></p></blockquote><a id="more"></a><h2 id="课程介绍"><a href="#课程介绍" class="headerlink" title="课程介绍"></a>课程介绍</h2><p>在运行了自己的第一个web 程序后，我们对服务器及其运行的代码有了更进一步的认知，但是对于具体的运行细节还是一知半解。那么服务器到底怎么运行的呢？</p><h2 id="Servlet-介绍"><a href="#Servlet-介绍" class="headerlink" title="Servlet 介绍"></a>Servlet 介绍</h2><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>服务器在接收到浏览器的请求后，会自动调用对应的逻辑代码进行请求处理。但是逻辑代码是由程序员编写并放到服务器中，那么服务器怎么知道该怎么调用并调用哪个类和哪个方法来进行请求处理。</p><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p>程序员在编写代码的时候如果能够按照服务器能够识别的规则进行编写，浏览器按照指定的规则进行发送请求，那么服务器就可以调用并执行响应的逻辑代码进行请求处理了。</p><h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><p>Servlet 技术</p><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>狭义的 Servlet 是指 Java 语言实现的一个接口，广义的 Servlet 是指任何实现了这个 Servlet 接口的类，一般情况下，人们将 Servlet 理解为后者。</p><p>Servlet 运行于支持 Java 的应用服务器中。从原理上讲，Servlet 可以响应任何类型的请求，但绝大多数情况下 Servlet 只用来扩展基于 HTTP 协议的 Web 服务器</p><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><ol><li>运行在支持 java 的应用服务器上</li><li>Servlet 的实现遵循了服务器能够识别的规则，也就是服务器会自动的根据请求调用对应的 servlet 进行请求处理。</li><li>简单方便，可移植性强</li></ol><h2 id="Servlet的使用"><a href="#Servlet的使用" class="headerlink" title="Servlet的使用"></a>Servlet的使用</h2><ol><li>创建普通的 java 类并继承 HttpServlet</li><li>覆写 service 方法</li><li>在 service 方法中书写逻辑代码即可</li><li>在 webRoot 下的 WEB-INF 文件夹下的 web.xml文件中配置 servlet</li></ol><h2 id="Servlet的运行流程"><a href="#Servlet的运行流程" class="headerlink" title="Servlet的运行流程"></a>Servlet的运行流程</h2><h3 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h3><p><a href="http://localhost:8888/myServlet/my" target="_blank" rel="noopener">http://localhost:8888/myServlet/my</a></p><h3 id="组成"><a href="#组成" class="headerlink" title="组成"></a>组成</h3><p>服务器地址:端口号/虚拟项目名/servlet 的别名</p><h3 id="URI"><a href="#URI" class="headerlink" title="URI"></a>URI</h3><p>虚拟项目名/servlet 的别名</p><h3 id="运行流程"><a href="#运行流程" class="headerlink" title="运行流程"></a>运行流程</h3><p><strong>浏览器发送请求到服务器，服务器根据请求 URL 地址中的 URI 信息在 webapps 目录下找到对应的项目文件夹，然后在 web.xml 中根据servlet的别名检索对应的 servlet，找到后调用并执行Servlet。</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;  &lt;em&gt;『 注 : 本笔记摘自视频 &lt;a href=&quot;https://www.bilibili.com/video/BV15b411778m&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;尚学堂-Servlet和JSP(JAVAEE基础)全新教程&lt;/a&gt;，如有侵权,请联系删除。』&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://www.hardape.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JavaEE" scheme="https://www.hardape.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/JavaEE/"/>
    
      <category term="Servlet" scheme="https://www.hardape.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/JavaEE/Servlet/"/>
    
    
      <category term="Servlet" scheme="https://www.hardape.top/tags/Servlet/"/>
    
  </entry>
  
  <entry>
    <title>04-Emmet语法</title>
    <link href="https://www.hardape.top/article/c0b60077.html"/>
    <id>https://www.hardape.top/article/c0b60077.html</id>
    <published>2020-04-05T11:52:07.000Z</published>
    <updated>2020-05-22T13:32:48.683Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>  <em>『 注 : 参考链接：<a href="https://www.cnblogs.com/moyuling/p/4939583.html" target="_blank" rel="noopener">https://www.cnblogs.com/moyuling/p/4939583.html</a>  』</em></p></blockquote><a id="more"></a><h2 id="Emmet概述"><a href="#Emmet概述" class="headerlink" title="Emmet概述"></a>Emmet概述</h2><p>Emmet语法的前身是Zen coding,它使用缩写来提高html/css的编写速度，VScode和HBuilder内部已经集成该语法。该语法是以<strong>输入指定命令后键入Tab键快速生成html/css指定代码</strong>。</p><h2 id="Emmet的使用"><a href="#Emmet的使用" class="headerlink" title="Emmet的使用"></a>Emmet的使用</h2><h3 id="使用Emmet语法快速生成HTML结构"><a href="#使用Emmet语法快速生成HTML结构" class="headerlink" title="使用Emmet语法快速生成HTML结构"></a>使用Emmet语法快速生成HTML结构</h3><h4 id="生成HML文档基本结构"><a href="#生成HML文档基本结构" class="headerlink" title="生成HML文档基本结构"></a>生成HML文档基本结构</h4><p>【<strong>html:5</strong>】 或【<strong>!</strong>】 用于HTML5文档类型</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>【<strong>html:xt</strong>】用于XHTML过渡文档类型</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//W3C//DTD XHTML 1.0 Transitional//EN"</span> <span class="meta-string">"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/1999/xhtml"</span> <span class="attr">xml:lang</span>=<span class="string">"zh"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html;charset=UTF-8"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>【<strong>html:4s</strong>】用于HTML4严格文档类型</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">HTML</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//W3C//DTD HTML 4.01//EN"</span> <span class="meta-string">"http://www.w3.org/TR/html4/strict.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html;charset=UTF-8"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="添加id和类"><a href="#添加id和类" class="headerlink" title="添加id和类"></a>添加id和类</h4><p>使用【<strong>标签名#id名</strong>】生成带有id的标签，如【<strong>div#test</strong>】</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"test"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使用【<strong>标签名.类名</strong>】生成带有类名的标签，如【<strong>div.test</strong>】</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"test"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="元素嵌套"><a href="#元素嵌套" class="headerlink" title="元素嵌套"></a>元素嵌套</h4><p>使用【<strong>&gt;</strong>】生成子节点，如【<strong>div&gt;ul&gt;li&gt;p</strong>】</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使用【<strong>+</strong>】生成兄弟节点，如【<strong>div+ul+p</strong>】</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使用【<strong>^</strong>】生成父节点，如【<strong>div&gt;ul&gt;li^div</strong>】</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="重复"><a href="#重复" class="headerlink" title="重复"></a>重复</h4><p>使用【<strong>*数字</strong>】生成多个重复标签，如【<strong>ul&gt;li*4</strong>】</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="分组"><a href="#分组" class="headerlink" title="分组"></a>分组</h4><p>使用【<strong>()</strong>】来完成分组，如【<strong>div&gt;(ul&gt;li&gt;a)+div&gt;p</strong>】</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="添加属性和文本"><a href="#添加属性和文本" class="headerlink" title="添加属性和文本"></a>添加属性和文本</h4><p>使用【<strong>[]</strong>】添加属性，多个属性用空格隔开，如【<strong>a[href=’#’ name=’haha’]</strong>】</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">name</span>=<span class="string">"haha"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使用【<strong>{}</strong>】添加文本，如【<strong>h1{今天是个好日子}</strong>】</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>今天是个好日子<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="编号"><a href="#编号" class="headerlink" title="编号"></a>编号</h4><p>【<strong>$</strong>】代表一位数，后面跟上【<strong>*数字</strong>】就代表从1递增到填写的数字</p><p>单个$递增，如【<strong>div.box$*3</strong>】</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box1"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box2"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box3"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>多位$递增(填充前导的零)，如【<strong>div.box$$$*5</strong>】</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box001"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box002"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box003"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box004"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box005"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>【<strong>$@-*m</strong>】 代表从指定数字m递减至1，如【<strong>div.box$@-*3</strong>】</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box3"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box2"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box1"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>【<strong>$@N*m</strong>】 代表从指定数字N开始递增m次，如【<strong>div.box$@3*4</strong>】</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box3"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box4"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box5"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box6"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>【<strong>$@-N*m</strong>】 代表递减m次至指定数字N，如【<strong>div.box$@-3*4</strong>】</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box6"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box5"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box4"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box3"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="隐式标签"><a href="#隐式标签" class="headerlink" title="隐式标签"></a>隐式标签</h4><p>部分标签可以不使用输入标签，直接输入指令，即可识别父元素</p><p>div标签，如【<strong>.box</strong>】</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>li标签(用于ul和ol中)，如【<strong>ul&gt;.box$*3</strong>】</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"box1"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"box2"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"box3"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><p>tr标签(用于table、tbody、thead、tfoot中)，如【<strong>table&gt;.row$*4</strong>】</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">"row1"</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">"row2"</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">"row3"</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">"row4"</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><p>td标签(用于tr中)，如【<strong>table&gt;.row&gt;.cell$*4</strong>】</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"cell1"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"cell2"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"cell3"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"cell4"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="使用Emmet语法快速生成CSS样式"><a href="#使用Emmet语法快速生成CSS样式" class="headerlink" title="使用Emmet语法快速生成CSS样式"></a>使用Emmet语法快速生成CSS样式</h3><h4 id="属性值-amp-单位"><a href="#属性值-amp-单位" class="headerlink" title="属性值&amp;单位"></a>属性值&amp;单位</h4><ul><li>属性值：w-width；h-height；m-margin；p-padding；b-bottom；l-left；r-right</li><li>单位：默认不写为px；p表示%；e表示em；x表示ex</li></ul><p>【<strong>w100</strong>】</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">width</span>: 100<span class="selector-tag">px</span>;</span><br></pre></td></tr></table></figure><p>【<strong>w10+h10p+p10x+m10e+b10p+l10p+r10x</strong>】</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">width</span>: 10<span class="selector-tag">px</span>;</span><br><span class="line"><span class="selector-tag">height</span>: 10%;</span><br><span class="line"><span class="selector-tag">padding</span>: 10<span class="selector-tag">ex</span>;</span><br><span class="line"><span class="selector-tag">margin</span>: 10<span class="selector-tag">em</span>;</span><br><span class="line"><span class="selector-tag">bottom</span>: 10%;</span><br><span class="line"><span class="selector-tag">left</span>: 10%;</span><br><span class="line"><span class="selector-tag">right</span>: 10<span class="selector-tag">ex</span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;  &lt;em&gt;『 注 : 参考链接：&lt;a href=&quot;https://www.cnblogs.com/moyuling/p/4939583.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.cnblogs.com/moyuling/p/4939583.html&lt;/a&gt;  』&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://www.hardape.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="CSS" scheme="https://www.hardape.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/CSS/"/>
    
    
      <category term="Emmet" scheme="https://www.hardape.top/tags/Emmet/"/>
    
  </entry>
  
  <entry>
    <title>09-JS的对象</title>
    <link href="https://www.hardape.top/article/a9eff881.html"/>
    <id>https://www.hardape.top/article/a9eff881.html</id>
    <published>2020-04-05T09:41:05.000Z</published>
    <updated>2020-05-22T13:40:45.233Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>  <em>『 注 : 本笔记摘自视频 <a href="https://www.bilibili.com/video/av56979800" target="_blank" rel="noopener">JavaScript基础</a>，如有侵权,请联系删除。』</em></p></blockquote><a id="more"></a><h2 id="对象的概念"><a href="#对象的概念" class="headerlink" title="对象的概念"></a>对象的概念</h2><ul><li>在JavaScript中，对象是一组无序的相关属性和方法的集合，所有的事物都是对象，例如字符串、数值、数组、函数等。</li><li>对象是复杂数据类型 <strong>object</strong></li><li>对象是由<strong>属性</strong>和<strong>方法</strong>组成的</li><li>属性：事物的<strong>特征</strong>，在对象中用<strong>属性</strong>来表示(常用名词)</li><li>方法：事物的<strong>行为</strong>，在对象中用<strong>方法</strong>来表示(常用动词)</li></ul><h2 id="创建对象的三种方式"><a href="#创建对象的三种方式" class="headerlink" title="创建对象的三种方式"></a>创建对象的三种方式</h2><p>在JavaScript中，现阶段可以采用三种方式创建对象(Object)：</p><ul><li>利用<strong>字面量</strong>创建对象</li><li>利用<strong>new Object()</strong>创建对象</li><li>利用构造函数创建对象</li></ul><h3 id="利用字面量创建对象"><a href="#利用字面量创建对象" class="headerlink" title="利用字面量创建对象"></a>利用字面量创建对象</h3><p>对象字面量：就是<strong>花括号{}</strong>里面包含了表达这个具体事物(对象)的属性和方法。</p><h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> 对象名 = &#123;</span><br><span class="line">    属性名<span class="number">1</span>: 属性值<span class="number">1</span>,</span><br><span class="line">    属性名<span class="number">2</span>: 属性值<span class="number">2</span>,</span><br><span class="line">    ...</span><br><span class="line">    方法名<span class="number">1</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">//方法体1</span></span><br><span class="line">    &#125;,</span><br><span class="line">    方法名<span class="number">2</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">//方法体2</span></span><br><span class="line">    &#125;,</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 利用字面量创建对象</span></span><br><span class="line"><span class="keyword">var</span> zhangsan = &#123;</span><br><span class="line">    uname: <span class="string">'张三'</span>,</span><br><span class="line">    age: <span class="number">18</span>,</span><br><span class="line">    sex: <span class="string">'男'</span>,</span><br><span class="line">    sayHi: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'Hi~'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><ul><li>对象中的属性或者方法采取键值对的形式，键即属性名，值即属性值，可是任意类型的值</li><li>多个属性或者方法中间用逗号隔开</li><li>方法冒号后面跟的是一个匿名函数</li><li>创建对象后可通过 <strong>对象名.属性名/方法名 = 值</strong> 来追加属性和方法</li></ul><h3 id="利用new-Object-创建对象"><a href="#利用new-Object-创建对象" class="headerlink" title="利用new Object()创建对象"></a>利用new Object()创建对象</h3><p>可以通过<code>var 对象名 = new Object();</code>来创建一个空对象，属性和方法通过赋值追加</p><h4 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> 对象名 = <span class="keyword">new</span> <span class="built_in">Object</span>();</span><br><span class="line"><span class="comment">// 空对象属性和方法的追加</span></span><br><span class="line">对象名.属性名<span class="number">1</span> = 属性值<span class="number">1</span>;</span><br><span class="line">对象名.属性名<span class="number">2</span> = 属性值<span class="number">2</span>;</span><br><span class="line">...</span><br><span class="line">对象名.方法名<span class="number">1</span> = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//方法体1</span></span><br><span class="line">&#125;;</span><br><span class="line">对象名.方法名<span class="number">2</span> = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//方法体2</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="例子-1"><a href="#例子-1" class="headerlink" title="例子"></a>例子</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 利用new Object()创建对象</span></span><br><span class="line"><span class="keyword">var</span> zhangsan = <span class="keyword">new</span> <span class="built_in">Object</span>();</span><br><span class="line">zhangsan.uname = <span class="string">'张三'</span>;</span><br><span class="line">zhangsan.age = <span class="number">18</span>;</span><br><span class="line">zhangsan.sex = <span class="string">'男'</span>;</span><br><span class="line">zhangsan.sayHi = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'Hi~'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="利用构造函数创建对象"><a href="#利用构造函数创建对象" class="headerlink" title="利用构造函数创建对象"></a>利用构造函数创建对象</h3><p>构造函数是一种特殊的函数，主要用来初始化对象，即为对象成员变量赋初始值，它总与new一起使用。我能可以把对象中一些公共的属性和方法抽取出来，然后封装到这个函数里面。</p><h4 id="语法-2"><a href="#语法-2" class="headerlink" title="语法"></a>语法</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义构造函数</span></span><br><span class="line"><span class="comment">// 或 var 构造函数名 = function(形参1,形参2...)</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> 构造函数名(<span class="params">形参<span class="number">1</span>,形参<span class="number">2.</span>..</span>) </span>&#123; </span><br><span class="line">    <span class="keyword">this</span>.属性<span class="number">1</span> = 形参<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">this</span>.属性<span class="number">2</span> = 形参<span class="number">2</span>;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">this</span>.方法<span class="number">1</span> = 形参<span class="number">3</span>;</span><br><span class="line">    <span class="keyword">this</span>.方法<span class="number">2</span> = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">//方法体</span></span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 利用构造函数创建对象</span></span><br><span class="line"><span class="keyword">var</span> 对象名 = <span class="keyword">new</span> 构造函数名(实参<span class="number">1</span>,实参<span class="number">2.</span>..)</span><br></pre></td></tr></table></figure><h4 id="例子-2"><a href="#例子-2" class="headerlink" title="例子"></a>例子</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义构造函数</span></span><br><span class="line"><span class="keyword">var</span> User = <span class="function"><span class="keyword">function</span>(<span class="params">uname,age,sex,sayHi</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.uname = uname;</span><br><span class="line">    <span class="keyword">this</span>.age = age;</span><br><span class="line">    <span class="keyword">this</span>.sex = sex;</span><br><span class="line">    <span class="keyword">this</span>.sayHi = sayHi;</span><br><span class="line">    <span class="keyword">this</span>.sayBye = <span class="function"><span class="keyword">function</span>(<span class="params">toName</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'GoodBye~,'</span> + toName);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 利用构造函数创建对象</span></span><br><span class="line"><span class="keyword">var</span> zhangsan = <span class="keyword">new</span> User(<span class="string">'张三'</span>,<span class="number">18</span>,<span class="string">'男'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'Hi~'</span>);</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 调用方法</span></span><br><span class="line">zhangsan.sayHi();<span class="comment">//输出 Hi~</span></span><br><span class="line">zhangsan.sayBye(<span class="string">'李四'</span>);<span class="comment">//输出 GoodBye~,李四</span></span><br></pre></td></tr></table></figure><h4 id="注意-1"><a href="#注意-1" class="headerlink" title="注意"></a>注意</h4><ul><li>构造函数名首字母要大写，属性和方法前必须添加this</li><li>构造函数不需要return就可以返回对象</li><li>调用构造函数必须使用new关键字</li></ul><h4 id="构造函数和对象"><a href="#构造函数和对象" class="headerlink" title="构造函数和对象"></a>构造函数和对象</h4><ul><li>构造函数，抽象了对象的公共部分，封装到函数里面，它泛指某一大类(Class)</li><li>创建对象，特指某一个，通过new关键字创建对象的过程称为对象实例化</li></ul><h4 id="new执行过程"><a href="#new执行过程" class="headerlink" title="new执行过程"></a>new执行过程</h4><ol><li>在内存中创建一个新的空对象</li><li>让this指向这个新的对象</li><li>执行构造函数中的代码，给这个新对象添加属性和方法</li><li>返回这个对象(所以构造函数里面不需要return)</li></ol><h2 id="对象的调用"><a href="#对象的调用" class="headerlink" title="对象的调用"></a>对象的调用</h2><h3 id="属性调用"><a href="#属性调用" class="headerlink" title="属性调用"></a>属性调用</h3><ul><li>使用 <strong>对象名.属性名</strong> 调用对象的属性</li><li>使用 <strong>对象名[‘属性名’]</strong> 调用对象的属性，注意方括号中的属性<strong>必须加引号</strong></li></ul><h3 id="方法调用"><a href="#方法调用" class="headerlink" title="方法调用"></a>方法调用</h3><ul><li>使用 <strong>对象名.方法名(实参1,实参2…)</strong> 调用对象的方法</li></ul><h2 id="遍历对象"><a href="#遍历对象" class="headerlink" title="遍历对象"></a>遍历对象</h2><p><strong>for…in语句</strong>用于对数组或者对象的属性进行循环操作。</p><h3 id="语法-3"><a href="#语法-3" class="headerlink" title="语法"></a>语法</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> ( 变量 <span class="keyword">in</span> 数组/对象) &#123;</span><br><span class="line">    <span class="comment">// 变量为数组的下标 或 对象的属性名</span></span><br><span class="line">    <span class="comment">// 可通过数组名[变量]获取数组元素</span></span><br><span class="line">    <span class="comment">// 可通过对象名[变量]获取对象属性值/方法</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="例子-3"><a href="#例子-3" class="headerlink" title="例子"></a>例子</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//遍历对象</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> key <span class="keyword">in</span> zhangsan) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(key + <span class="string">" = "</span> + zhangsan[key]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="注意-2"><a href="#注意-2" class="headerlink" title="注意"></a>注意</h3><ul><li>遍历对象时，获取属性值/方法中的中括号不加引号</li><li>变量对象for..in中的变量名常使用 <strong>k</strong> 或者 <strong>key</strong> </li></ul><h2 id="删除对象属性"><a href="#删除对象属性" class="headerlink" title="删除对象属性"></a>删除对象属性</h2><p> <strong><code>delete</code> 操作符</strong>用于删除对象的某个属性；如果没有指向这个属性的引用，那它最终会被释放。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">delete object.property</span><br><span class="line">delete object[&#39;property&#39;]</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td><code>object</code></td><td>对象的名称，或计算结果为对象的表达式。</td></tr><tr><td><code>property</code></td><td>要删除的属性。</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;  &lt;em&gt;『 注 : 本笔记摘自视频 &lt;a href=&quot;https://www.bilibili.com/video/av56979800&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;JavaScript基础&lt;/a&gt;，如有侵权,请联系删除。』&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://www.hardape.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JavaScript" scheme="https://www.hardape.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="https://www.hardape.top/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>08-JS的作用域&amp;预解析</title>
    <link href="https://www.hardape.top/article/f96b491f.html"/>
    <id>https://www.hardape.top/article/f96b491f.html</id>
    <published>2020-04-05T09:40:52.000Z</published>
    <updated>2020-05-22T13:40:30.554Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>  <em>『 注 : 本笔记摘自视频 <a href="https://www.bilibili.com/video/av56979800" target="_blank" rel="noopener">JavaScript基础</a>，如有侵权,请联系删除。』</em></p></blockquote><a id="more"></a><h2 id="作用域概述"><a href="#作用域概述" class="headerlink" title="作用域概述"></a>作用域概述</h2><ul><li>通常来说，一段程序代码中所用到的名字并不总是有效和可用的，而限定这个名字的<strong>可用性的代码范围</strong>就是这个名字的<strong>作用域</strong>。</li><li>作用域的使用提高了程序逻辑的局部性，增强了程序的可靠性，减少了名字冲突。</li><li>JS的作用域(ES6之前)分为<strong>全局作用域</strong>和<strong>局部作用域</strong></li></ul><h3 id="全局作用域"><a href="#全局作用域" class="headerlink" title="全局作用域"></a>全局作用域</h3><p>在整个script标签中，或者是在一个单独的js文件中</p><h3 id="局部作用域"><a href="#局部作用域" class="headerlink" title="局部作用域"></a>局部作用域</h3><p>又称作函数作用域，在函数内部就是局部作用域，此代码段名字只在函数内部起效果和作用。</p><h2 id="变量作用域"><a href="#变量作用域" class="headerlink" title="变量作用域"></a>变量作用域</h2><p>在JS中，根据作用域的不同，变量可以分为两种：<strong>全局变量</strong>和<strong>局部变量</strong></p><h3 id="全局变量"><a href="#全局变量" class="headerlink" title="全局变量"></a>全局变量</h3><p>在全局作用域下声明的变量叫做<strong>全局变量(在函数外部定义的变量)</strong>。</p><ul><li>全局变量在代码的任何位置都可以使用</li><li>在全局作用域下var声明的变量是全局变量</li><li>特殊情况下，在函数内不使用var声明的变量也是全局变量(不建议使用)</li></ul><h3 id="局部变量"><a href="#局部变量" class="headerlink" title="局部变量"></a>局部变量</h3><p>在局部作用域下声明的变量叫做<strong>局部变量(在函数内部定义的变量)</strong></p><ul><li>局部变量只能在该函数内部使用</li><li>在函数内部var声明的变量是局部变量</li><li>函数的形参实际上是局部变量</li></ul><h3 id="全局变量和局部变量的区别"><a href="#全局变量和局部变量的区别" class="headerlink" title="全局变量和局部变量的区别"></a>全局变量和局部变量的区别</h3><ul><li>全局变量：在任何一个地方都可以使用，只有在浏览器关闭时才会被销毁，因此比较占内存</li><li>局部变量：只在函数内部使用，当其所在的代码块被执行时，会被初始化；但代码块运行结束后，就会被销毁，因此更节省内存空间。</li></ul><h2 id="作用域链"><a href="#作用域链" class="headerlink" title="作用域链"></a>作用域链</h2><ul><li>只要是代码，就至少有一个作用域。</li><li>写在函数内部的是局部作用域。</li><li>如果函数中嵌套声明函数，那么在这个作用域中有可以诞生一个作用域。</li><li>根据在内部函数可以访问外部函数变量的机制，用<strong>链式查找</strong>决定哪些数据能被内部函数访问，就称作作用域链。(就近原则)</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> num = <span class="number">10</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun1</span>(<span class="params"></span>) </span>&#123;<span class="comment">//外部函数</span></span><br><span class="line">    <span class="keyword">var</span> num = <span class="number">20</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">fun2</span>(<span class="params"></span>) </span>&#123;<span class="comment">//内部函数</span></span><br><span class="line">        <span class="built_in">console</span>.log(num);</span><br><span class="line">    &#125;</span><br><span class="line">    fun2();</span><br><span class="line">&#125;</span><br><span class="line">fun1();<span class="comment">//结果输出20</span></span><br></pre></td></tr></table></figure><h2 id="预解析"><a href="#预解析" class="headerlink" title="预解析"></a>预解析</h2><ul><li>JavaScript代码是由浏览器中的JavaScript解析器来执行的。JavaScript解析器在运行JavaScript代码的时候分为两步：<strong>预解析</strong>和<strong>代码执行</strong>。</li><li>JS引擎在进行预解析时，会把JS里面的 <strong>var</strong> 和 <strong>function</strong> 提升到当前作用域的最前面</li><li>代码执行是指JS引擎按照代码书写顺序从上往下执行</li><li>预解析分为<strong>变量预解析(变量提升)</strong>和<strong>函数预解析(函数提升)</strong>，先变量提升后函数提升</li></ul><h3 id="变量提升"><a href="#变量提升" class="headerlink" title="变量提升"></a>变量提升</h3><p>变量提升是把所有的变量声明提升到当前作用域的最前面，不提升赋值操作</p><h3 id="函数提升"><a href="#函数提升" class="headerlink" title="函数提升"></a>函数提升</h3><p>函数提升就是把所有的函数声明(<strong>不包括函数表达式</strong>)提升到当前作用域的最前面，不调用函数</p><h3 id="例子体现"><a href="#例子体现" class="headerlink" title="例子体现"></a>例子体现</h3><h4 id="案例一"><a href="#案例一" class="headerlink" title="案例一"></a>案例一</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 预解析 */</span></span><br><span class="line"><span class="comment">// 变量提升</span></span><br><span class="line"><span class="built_in">console</span>.log(num);   <span class="comment">//输出undefined</span></span><br><span class="line"><span class="keyword">var</span> num = <span class="number">10</span>;</span><br><span class="line"><span class="comment">/*  </span></span><br><span class="line"><span class="comment">相当于</span></span><br><span class="line"><span class="comment">    var num;</span></span><br><span class="line"><span class="comment">    console.log(num);</span></span><br><span class="line"><span class="comment">    num = 10;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 函数提升</span></span><br><span class="line">fn1();  <span class="comment">// 输出淡黄的长裙</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn1</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'淡黄的长裙'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 变量提升，但函数表达式不提升</span></span><br><span class="line">fn2();  <span class="comment">// 报错【Uncaught TypeError: fn2 is not a function】</span></span><br><span class="line"><span class="keyword">var</span> fn2 = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'蓬松的头发'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">相当于  </span></span><br><span class="line"><span class="comment">    var fn2;</span></span><br><span class="line"><span class="comment">    fn2();</span></span><br><span class="line"><span class="comment">    fn2 = function() &#123;</span></span><br><span class="line"><span class="comment">        console.log('蓬松的头发');</span></span><br><span class="line"><span class="comment">    &#125; </span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h4 id="案例二"><a href="#案例二" class="headerlink" title="案例二"></a>案例二</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 预解析 */</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line">fun();<span class="comment">// 输出结果为undefined</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(a); </span><br><span class="line">    <span class="keyword">var</span> a = <span class="number">20</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">    相当于</span></span><br><span class="line"><span class="comment">    var a;</span></span><br><span class="line"><span class="comment">    function fun() &#123;</span></span><br><span class="line"><span class="comment">        var a;</span></span><br><span class="line"><span class="comment">        console.log(a);</span></span><br><span class="line"><span class="comment">        a = 20;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    a = 10;</span></span><br><span class="line"><span class="comment">    fun();</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h4 id="案例三"><a href="#案例三" class="headerlink" title="案例三"></a>案例三</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> b = <span class="number">10</span>;</span><br><span class="line">fn();<span class="comment">//结果为undefined 20</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(b); </span><br><span class="line">    <span class="keyword">var</span> b = <span class="number">20</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*   </span></span><br><span class="line"><span class="comment">    相当于</span></span><br><span class="line"><span class="comment">    var b;</span></span><br><span class="line"><span class="comment">    function fn() &#123;</span></span><br><span class="line"><span class="comment">        var b;</span></span><br><span class="line"><span class="comment">        console.log(b);</span></span><br><span class="line"><span class="comment">        num = 20;</span></span><br><span class="line"><span class="comment">        console.log(b);</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    b = 10;</span></span><br><span class="line"><span class="comment">    fn(); </span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h4 id="案例四"><a href="#案例四" class="headerlink" title="案例四"></a>案例四</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">f1();<span class="comment">// 结果为 9 9 9</span></span><br><span class="line"><span class="built_in">console</span>.log(k); <span class="comment">// 结果为 9</span></span><br><span class="line"><span class="built_in">console</span>.log(j); <span class="comment">// 结果为 9</span></span><br><span class="line"><span class="built_in">console</span>.log(i); <span class="comment">// 报错【Uncaught ReferenceError: i is not defined】</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f1</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">/* </span></span><br><span class="line"><span class="comment">        相当于var i = 9; j = 9; k = 9;</span></span><br><span class="line"><span class="comment">        j 和 k 直接赋值,没有var 声明,当全局变量看</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">var</span> i = j = k = <span class="number">9</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(i);</span><br><span class="line">    <span class="built_in">console</span>.log(j);</span><br><span class="line">    <span class="built_in">console</span>.log(k);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">    相当于</span></span><br><span class="line"><span class="comment">    function f1() &#123;</span></span><br><span class="line"><span class="comment">        var i;</span></span><br><span class="line"><span class="comment">        i = 9;</span></span><br><span class="line"><span class="comment">        j = 9;</span></span><br><span class="line"><span class="comment">        k = 9;</span></span><br><span class="line"><span class="comment">        console.log(i);</span></span><br><span class="line"><span class="comment">        console.log(j);</span></span><br><span class="line"><span class="comment">        console.log(k);</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    f1();</span></span><br><span class="line"><span class="comment">    console.log(k);</span></span><br><span class="line"><span class="comment">    console.log(j);</span></span><br><span class="line"><span class="comment">    console.log(i); </span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;  &lt;em&gt;『 注 : 本笔记摘自视频 &lt;a href=&quot;https://www.bilibili.com/video/av56979800&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;JavaScript基础&lt;/a&gt;，如有侵权,请联系删除。』&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://www.hardape.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JavaScript" scheme="https://www.hardape.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="https://www.hardape.top/tags/JavaScript/"/>
    
  </entry>
  
</feed>
